-- phpMyAdmin SQL Dump
-- version 4.0.10deb1
-- http://www.phpmyadmin.net
--
-- Host: localhost
-- Generation Time: May 09, 2016 at 10:21 PM
-- Server version: 5.7.12
-- PHP Version: 5.5.9-1ubuntu4.14

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;

--
-- Database: `ks`
--

-- --------------------------------------------------------

--
-- Table structure for table `so_questions`
--

CREATE TABLE IF NOT EXISTS `so_questions` (
  `tags` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `is_answered` varchar(4) CHARACTER SET utf8 DEFAULT NULL,
  `view_count` int(11) DEFAULT NULL,
  `answer_count` int(11) DEFAULT NULL,
  `score` int(11) DEFAULT NULL,
  `last_activity_date` int(11) DEFAULT NULL,
  `creation_date` int(11) DEFAULT NULL,
  `question_id` int(11) NOT NULL,
  `link` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `title` varchar(255) CHARACTER SET utf8 DEFAULT NULL,
  `body` longblob,
  `has_more` varchar(4) CHARACTER SET utf8 DEFAULT NULL,
  `quota_max` int(11) DEFAULT NULL,
  `quota_remaining` int(11) DEFAULT NULL,
  `createdAt` date NOT NULL,
  `updatedAt` date NOT NULL,
  PRIMARY KEY (`question_id`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- Dumping data for table `so_questions`
--

INSERT INTO `so_questions` (`tags`, `is_answered`, `view_count`, `answer_count`, `score`, `last_activity_date`, `creation_date`, `question_id`, `link`, `title`, `body`, `has_more`, `quota_max`, `quota_remaining`, `createdAt`, `updatedAt`) VALUES
('["c++","math","matrix","linear-algebra"]', '1', 56797, 11, 143, 1459986839, 1252082758, 1380371, 'http://stackoverflow.com/questions/1380371/what-are-the-most-widely-used-c-vector-matrix-math-linear-algebra-libraries-a', 'What are the most widely used C++ vector/matrix math/linear algebra libraries, and their cost and benefit tradeoffs?', 0x3c703e4974207365656d732074686174206d616e792070726f6a6563747320736c6f776c7920636f6d652075706f6e2061206e65656420746f20646f206d6174726978206d6174682c20616e642066616c6c20696e746f207468652074726170206f66206669727374206275696c64696e6720736f6d6520766563746f7220636c617373657320616e6420736c6f776c7920616464696e6720696e2066756e6374696f6e616c69747920756e74696c20746865792067657420636175676874206275696c64696e6720612068616c662d617373656420637573746f6d206c696e65617220616c6765627261206c6962726172792c20616e6420646570656e64696e67206f6e2069742e203c2f703e0a0a3c703e492764206c696b6520746f2061766f69642074686174207768696c65206e6f74206275696c64696e6720696e206120646570656e64656e6365206f6e20736f6d652074616e67656e7469616c6c792072656c61746564206c6962726172792028652e672e204f70656e43562c204f70656e5363656e654772617068292e203c2f703e0a0a3c703e57686174206172652074686520636f6d6d6f6e6c792075736564206d6174726978206d6174682f6c696e65617220616c6765627261206c6962726172696573206f75742074686572652c20616e642077687920776f756c642064656369646520746f20757365206f6e65206f76657220616e6f746865723f2041726520746865726520616e79207468617420776f756c64206265206164766973656420616761696e7374207573696e6720666f7220736f6d6520726561736f6e3f204920616d207370656369666963616c6c79207573696e67207468697320696e20612067656f6d65747269632f74696d6520636f6e746578742a28322c332c342044696d292a20627574206d6179206265207573696e67206869676865722064696d656e73696f6e616c206461746120696e20746865206675747572652e203c2f703e0a0a3c703e49276d206c6f6f6b696e6720666f7220646966666572656e6365732077697468207265737065637420746f20616e79206f663a204150492c2073706565642c206d656d6f7279207573652c20627265616474682f636f6d706c6574656e6573732c206e6172726f776e6573732f73706563696669636e6573732c20657874656e736962696c6974792c20616e642f6f72206d617475726974792f73746162696c6974792e3c2f703e0a0a3c703e3c656d3e28456469742f6e6f74653a202054686572652773206120626974206f6620696e666f726d6174696f6e20696e2074686520616e73776572732c2062757420697427732073636174746572656420616e6420776974686f757420636f6e746578742e2049276d20756e7375726520696620492073686f756c642070756c6c20697420746f67657468657220696e20616e6f7468657220616e737765722c206275742049276d207374696c6c206e6f7420706172746963756c61726c7920636c656172206f6e207468652062656e6566697473206f7220646f776e736964657320746f20616e79206f662074686573652063686f69636573206f76657220616e6f74686572293c2f656d3e3c2f703e0a0a3c703e3c656d3e4920656e646564207570207573696e6720456967656e33207768696368204920616d2065787472656d656c7920686170707920776974683c2f656d3e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["math","matlab","linear-algebra"]', '1', 13903, 4, 9, 1462376649, 1254618208, 1515296, 'http://stackoverflow.com/questions/1515296/solving-a-matrix-in-matlab', 'Solving a matrix in MATLAB?', 0x3c703e486f7720646f6573206f6e6520736f6c76652074686520286e6f6e2d7472697669616c2920736f6c7574696f6e204178203d203020666f72207820696e203c6120687265663d22687474703a2f2f656e2e77696b6970656469612e6f72672f77696b692f4d41544c4142223e4d41544c41423c2f613e3f3c2f703e0a0a3c7072653e3c636f64653e41203d206d61747269780a78203d206d617472697820747279696e6720746f20736f6c766520666f720a3c2f636f64653e3c2f7072653e0a0a3c703e4927766520747269656420736f6c7665282741202a2078203d2030272c202778272920206275742049206f6e6c7920676574203020666f7220616e20616e737765722e3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["matlab","math","computer-vision","linear-algebra","matlab-cvst"]', '1', 7449, 3, 10, 1458092314, 1265161124, 2189107, 'http://stackoverflow.com/questions/2189107/3d-correspondences-from-fundamental-matrix', '3D Correspondences from fundamental matrix', 0x3c703e496e204d41544c4142204920686176652063616c63756c6174656420746865203c6120687265663d22687474703a2f2f656e2e77696b6970656469612e6f72672f77696b692f46756e64616d656e74616c5f6d61747269785f253238636f6d70757465725f766973696f6e253239223e46756e64616d656e74616c206d61747269783c2f613e20286f662074776f20696d6167657329207573696e6720746865206e6f726d616c697a6564203c6120687265663d22687474703a2f2f656e2e77696b6970656469612e6f72672f77696b692f45696768742d706f696e745f616c676f726974686d223e456967687420706f696e7420616c676f726974686d3c2f613e2e2046726f6d20746861742049206e65656420746f203c6120687265663d22687474703a2f2f656e2e77696b6970656469612e6f72672f77696b692f547269616e67756c6174696f6e5f253238636f6d70757465725f766973696f6e253239223e747269616e67756c6174653c2f613e2074686520636f72726573706f6e64696e6720696d61676520706f696e747320696e2033442073706163652e2046726f6d2077686174204920756e6465727374616e642c20746f20646f2074686973204920776f756c64206e6565642074686520726f746174696f6e20616e64207472616e736c6174696f6e206f662074686520696d61676527732063616d657261732e20546865206561736965737420776179206f6620636f7572736520776f756c64206265203c6120687265663d22687474703a2f2f7777772e766973696f6e2e63616c746563682e6564752f626f75677565746a2f63616c69625f646f632f223e63616c696272617465207468652063616d657261733c2f613e206669727374207468656e2074616b652074686520696d616765732c20627574207468697320697320746f6f20636f6e737472696374696e6720666f72206d79206170706c69636174696f6e20617320697420776f756c642072657175697265207468697320657874726120737465702e3c2f703e0a0a3c703e536f2074686174206c6561766573206d652077697468203c6120687265663d22687474703a2f2f656e2e77696b6970656469612e6f72672f77696b692f43616d6572615f6175746f2d63616c6962726174696f6e223e6175746f202873656c66292063616d6572612063616c6962726174696f6e3c2f613e2e204920736565206d656e74696f6e206f66203c6120687265663d22687474703a2f2f656e2e77696b6970656469612e6f72672f77696b692f42756e646c655f61646a7573746d656e74223e62756e646c652061646a7573746d656e743c2f613e2c20686f776576657220696e203c6120687265663d22687474703a2f2f626f6f6b732e676f6f676c652e636f6d2f626f6f6b733f69643d6a43735a3572647767714d4326616d703b6c70673d50503126616d703b6f74733d4d6a684d57503734564726616d703b64713d616e253230696e7669746174696f6e253230746f2532303364253230766973696f6e26616d703b70673d504131363723763d6f6e657061676526616d703b713d26616d703b663d66616c7365223e416e20496e7669746174696f6e20746f20334420566973696f6e3c2f613e206974207365656d7320697420726571756972657320616e20696e697469616c207472616e736c6174696f6e20616e6420726f746174696f6e2c207768696368206d616b6573206d65207468696e6b207468617420612063616c696272617465642063616d657261206973206e6565646564206f72206d7920756e6465727374616e64696e672069732066616c6c696e672073686f72742e3c2f703e0a0a3c703e536f206d79207175657374696f6e20697320686f772063616e2049206175746f6d61746963616c6c7920657874726163742074686520726f746174696f6e2f7472616e736c6174696f6e20736f20492063616e20726570726f6a65637465642f747269616e67756c6174652074686520696d61676520706f696e747320696e746f2033442073706163652e20416e79204d41544c414220636f6465206f722070736575646f636f646520776f756c642062652066616e7461737469632e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["numpy","signal-processing","scipy","linear-algebra","convolution"]', '1', 2648, 2, 5, 1459430493, 1299562269, 5228718, 'http://stackoverflow.com/questions/5228718/convolution-along-one-axis-only', 'Convolution along one axis only', 0x3c703e4920686176652074776f20322d44206172726179732077697468207468652073616d6520666972737420617869732064696d656e73696f6e732e20496e20707974686f6e2c204920776f756c64206c696b6520746f20636f6e766f6c7665207468652074776f206d6174726963657320616c6f6e6720746865207365636f6e642061786973206f6e6c792e204920776f756c64206c696b6520746f20676574203c636f64653e433c2f636f64653e2062656c6f7720776974686f757420636f6d707574696e672074686520636f6e766f6c7574696f6e20616c6f6e672074686520666972737420617869732061732077656c6c2e3c2f703e0a0a3c7072653e3c636f64653e696d706f7274206e756d7079206173206e700a696d706f72742073636970792e7369676e616c2061732073670a0a4d2c204e2c2050203d20342c2031302c2032300a41203d206e702e72616e646f6d2e72616e646e284d2c204e290a42203d206e702e72616e646f6d2e72616e646e284d2c2050290a0a43203d2073672e636f6e766f6c766528412c20422c202766756c6c27295b28322a4d2d31292f325d0a3c2f636f64653e3c2f7072653e0a0a3c703e497320746865726520612066617374207761793f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","linear-algebra"]', '1', 1705, 5, 5, 1457539490, 1308060319, 6344800, 'http://stackoverflow.com/questions/6344800/solving-multiple-linear-systems-using-vectorization', 'Solving multiple linear systems using vectorization', 0x3c703e536f7272792069662074686973206973206f6276696f75732062757420492073656172636865642061207768696c6520616e6420646964206e6f742066696e6420616e797468696e6720286f72206d6973736564206974292e3c2f703e0a0a3c703e49276d20747279696e6720746f20736f6c7665206c696e6561722073797374656d73206f662074686520666f726d203c656d3e41783d423c2f656d3e2077697468203c656d3e413c2f656d3e206120347834206d61747269782c20616e64203c656d3e423c2f656d3e20612034783120766563746f722e3c2f703e0a0a3c703e49206b6e6f77207468617420666f7220612073696e676c652073797374656d20492063616e20757365203c636f64653e6d6c6469766964653c2f636f64653e20746f206f627461696e203c656d3e783c2f656d3e3a203c636f64653e783d415c423c2f636f64653e2e3c2f703e0a0a3c703e486f7765766572204920616d20747279696e6720746f20736f6c76652061206772656174206e756d626572206f662073797374656d732028706f737369626c79203e2031303030302920616e64204920616d2072656c756374616e7420746f20757365206120666f72206c6f6f70206265636175736520492077617320746f6c64206974206973206e6f7461626c7920736c6f776572207468616e206d617472697820666f726d756c6174696f6e20696e206d616e79204d41544c41422070726f626c656d732e3c2f703e0a0a3c703e4d79207175657374696f6e206973207468656e3a20697320746865726520612077617920746f20736f6c7665203c656d3e41783d423c2f656d3e207573696e6720766563746f72697a6174696f6e2077697468203c656d3e413c2f656d3e2034783478203c656d3e4e3c2f656d3e20616e64203c656d3e423c2f656d3e2061206d6174726978203478203c656d3e4e3c2f656d3e203f3c2f703e0a0a3c703e50533a204920646f206e6f74206b6e6f7720696620697420697320696d706f7274616e742062757420746865203c656d3e423c2f656d3e20766563746f72206973207468652073616d6520666f7220616c6c207468652073797374656d732e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","opencv","computer-vision","linear-algebra"]', '1', 2956, 2, 2, 1458439794, 1335800307, 10386382, 'http://stackoverflow.com/questions/10386382/use-fundamental-matrix-to-compute-coordinates-translation-using-opencv', 'Use fundamental matrix to compute coordinates translation using OpenCV', 0x3c703e4920616d20747279696e6720746f20636f6d707574652074686520636f6f7264696e6174657320636f72726573706f6e64656e6365206f66207365766572616c20706f696e7473206265747765656e2074776f20696d616765732e0a49206861766520612067726f7570206f6620706f696e74732077686f736520636f72726573706f6e64656e63657320617265206b6e6f776e2c204920757365207468656d2077697468204f70656e43562773203c636f64653e66696e6446756e64616d656e74616c4d617472697828293c2f636f64653e20696e206f7264657220746f2066696e64207468652066756e64616d656e74616c206d61747269782e0a492076657269666965642074686174203c636f64653e785e54202a2046202a207827203d202830293c2f636f64653e20666f72206561636820706f696e742c20616e642074686520726573756c7420697320616c77617973207269676874206f72207665727920636c6f73652e3c2f703e0a0a3c703e546865207468696e672069732c206e6f7720492764206c696b6520746f207573652074686520636f6f7264696e61746573206f66206120706f696e74206f6e2074686520666972737420696d61676520283c636f64653e793c2f636f64653e2920616e64207468652066756e64616d656e74616c206d617472697820283c636f64653e463c2f636f64653e2920696e206f7264657220746f2066696e642074686520636f6f7264696e61746573206f662074686520706f696e74206f6e20746865207365636f6e6420696d61676520283c636f64653e79273c2f636f64653e292e20492066697273742074686f756768742061626f75742073696d706c79207573696e6720746865206571756174696f6e2061626f76652c2062757420676976656e206f6e6c7920746865203c636f64653e7a3c2f636f64653e206f6620746865203c636f64653e79273c2f636f64653e20706f696e742c2074686572652063616e206265203c6120687265663d22687474703a2f2f6d6174682e737461636b65786368616e67652e636f6d2f7175657374696f6e732f3133363838382f6d61747269782d6571756174696f6e22207469746c653d224d6174726978206571756174696f6e206f6e206d6174682e737461636b65786368616e6765223e616e20696e66696e697479206f6620736f6c7574696f6e733c2f613e2e3c2f703e0a0a3c703e486f7720656c73652063616e204920757365207468652066756e64616d656e74616c206d617472697820746f20636f6d7075746520746865207472616e736c6174696f6e73203f3c2f703e0a0a3c703e546f206265206d6f726520636c6561723a206b6e6f77696e67207468652066756e64616d656e74616c206d617472697820226c696e6b696e67222074776f2070726f6a656374696f6e732c20686f772063616e20492075736520697420746f207472616e736c6174652074686520636f6f7264696e61746573206f6620616e79206b6e6f776e20706f696e74203c636f64653e28612c20622c2031293c2f636f64653e2066726f6d207468652066697273742070726f6a656374696f6e20746f20746865207365636f6e642070726f6a656374696f6e3f3c2f703e0a0a3c703e436f6e7369646572696e672074686174207765206b6e6f77203c636f64653e613c2f636f64653e2c203c636f64653e623c2f636f64653e20616e64203c636f64653e463c2f636f64653e20696e2074686973206571756174696f6e3a202861272c2062222c2031293c7375703e543c2f7375703e202a2046202a2028612c20622c203129203d202830293c2f703e0a0a3c703e4920686164206d61646520612073696d706c652064726177696e6720617320616e206578616d706c653a203c6120687265663d22687474703a2f2f692e696d6775722e636f6d2f64724e72322e6a7067222072656c3d226e6f666f6c6c6f77223e687474703a2f2f692e696d6775722e636f6d2f64724e72322e6a70673c2f613e202e20546865206964656120697320746f2066696e642074686520636f6f7264696e61746573206f66207468652072656420646f74203c636f64653e2878712c207971293c2f636f64653e20696e2070726f6a656374696f6e20322c20636f6e7369646572696e672074686174207765206b6e6f772069747320636f6f7264696e6174657320696e2070726f6a656374696f6e203120616e6420746865206f6e6573206f6620616c6c206f7468657220706f696e747320696e20626f74682070726f6a656374696f6e732028616e6420736f6d65206f74686572206f6e65732061732074686520616c676f726974686d20746f2066696e64207468652066756e64616d656e74616c206d61747269782061637475616c6c79207265717569726573206174206c65617374203820706f696e7473293c2f703e0a0a3c703e416e6f7468657220707265636973696f6e3a20696e206d79206578616d706c652c206b6e6f776e20706f696e74732061726520636f706c616e61722c2062757420746865207265736561726368656420706f696e742077696c6c206e6f74206e65636573736172696c792062652e3c2f703e0a0a3c703e4920686f70652074686174206d616465206d792070726f626c656d206d6f726520636c656172203a293c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["ios","core-graphics","linear-algebra"]', '1', 1424, 4, 7, 1460339505, 1337778383, 10720569, 'http://stackoverflow.com/questions/10720569/is-there-a-way-to-calculate-the-cgaffinetransform-needed-to-transform-a-view-fro', 'Is there a way to calculate the CGAffineTransform needed to transform a view from frame A to frame B?', 0x3c703e5361792c204920686176652074776f20434752656374732c20434752656374204120616e642043475265637420422e204d79205549566965772773206672616d65206973207468652073616d652061732043475265637420422c2062757420492077616e7420746f2063726561746520616e20616e696d6174696f6e2073686f77696e672074686520554956696577207472616e736974696f6e696e672066726f6d206672616d65204120746f20422e3c2f703e0a0a3c703e49276d20747279696e6720746f20646f2074686973206279206368616e67696e6720746865207472616e73666f726d2070726f7065727479206f6620746865205549566965772c20736f204920646f6e2774206861766520746f206d6573732061726f756e64207769746820697473206672616d6520746f6f206d7563682e20486f77657665722c2049206e65656420746865204347416666696e655472616e73666f726d20746f206d616b65207468697320706f737369626c652e20576861742069732074686520626573742077617920746f2063616c63756c6174652074686973207472616e73666f726d3f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["cuda","gpu","linear-algebra","gpgpu","nvidia"]', '1', 2099, 3, 2, 1462384842, 1343915837, 11778981, 'http://stackoverflow.com/questions/11778981/determinant-calculation-with-cuda', 'Determinant calculation with CUDA', 0x3c703e497320746865726520616e79206c696272617279206f7220667265656c7920617661696c61626c6520636f64652077686963682077696c6c2063616c63756c617465207468652064657465726d696e616e74206f662061203c7374726f6e673e736d616c6c3c2f7374726f6e673e20283c636f64653e3678363c2f636f64653e292c20646f75626c6520707265636973696f6e206d617472697820656e746972656c79206f6e2061204750553f3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["arrays","arraylist","drawing","processing","linear-algebra"]', '1', 652, 2, 0, 1457370134, 1349363033, 12730225, 'http://stackoverflow.com/questions/12730225/how-to-realize-the-drawing-processing-in-processing', 'How to realize the DRAWING processing in Processing?', 0x3c703e576520616c6c206b6e6f7720686f7720746f20647261772061206c696e6520696e2050726f63657373696e672e203c2f703e0a0a3c703e427574207768656e20776520647261772061206c696e652c20746865206c696e652069732073686f776e20696d6d6564696174656c792e3c2f703e0a0a3c703e5768617420696620692077616e7420746f207769746e657373207468652064726177696e672070726f636573732c206e616d656c792c20746f2073656520746865206c696e65206d6f76696e6720666f72776172642c206772616475616c6c7920636f6d706c6574657320612077686f6c65206c696e652e3c2f703e0a0a3c703e486572652773207768617420692077616e7420746f207265616c697a653a20746f2044524157207365766572616c206c696e657320616e64206375727665732077686963682066696e616c6c79207475726e20696e746f20736f6d65207061747465726e2e3c2f703e0a0a3c703e536f20686f7720746f206d616b6520746861742068617070656e3f205573696e672061727261793f3c2f703e0a0a3c703e4d616e79207468616e6b732e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","linear-algebra","eigen"]', '1', 2349, 1, 8, 1458653873, 1350827463, 12998410, 'http://stackoverflow.com/questions/12998410/what-is-the-best-way-to-implement-an-array-of-3d-vectors', 'What is the best way to implement an array of 3d vectors?', , NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["opengl","linear-algebra","glulookat"]', '1', 240, 2, 0, 1461607327, 1374300522, 17759269, 'http://stackoverflow.com/questions/17759269/please-can-you-explain-my-glulookat-misconception', 'Please can you explain my gluLookAt() misconception?', 0x3c703e492068617665206c6561726e65642066726f6d2072656164696e67206d616e7920736f757263657320616e642062792072652d696d706c656d656e74696e67207468652066756e6374696f6e20616e64207374756479696e6720746865206d61747269636573206d7973656c662c207468617420676c754c6f6f6b41742829206973206571756976616c656e7420746f206120726f746174696f6e20666f6c6c6f7765642062792061207472616e736c6174696f6e20746f2074686520696e76657273652065796520636f6f7264696e6174652e2054686520696d706c656d656e746174696f6e2069732073696d696c617220696e204f70656e474c2c204d4553412c20436f676c206574632e2e2e20616e64206120676f6f642073756d6d61727920697320686572653a0a3c6120687265663d22687474703a2f2f7069632e6468652e69626d2e636f6d2f696e666f63656e7465722f6169782f763772312f746f7069632f636f6d2e69626d2e6169782e6f70656e676c2f646f632f6f70656e676c72662f676c754c6f6f6b41742e68746d222072656c3d226e6f666f6c6c6f77223e687474703a2f2f7069632e6468652e69626d2e636f6d2f696e666f63656e7465722f6169782f763772312f746f7069632f636f6d2e69626d2e6169782e6f70656e676c2f646f632f6f70656e676c72662f676c754c6f6f6b41742e68746d3c2f613e3c2f703e0a0a3c703e486f77657665722c20636f6e736964657220746865206361736520776865726520746865206c6f6f6b2d61742074617267657420697320617420746865206f726967696e20692e652e2028302c20302c2030292c20616e6420746865207669727475616c2063616d65726120697320736c696768746c79206f66667365742066726f6d20746865205a2d6178697320652e672e2028322c20322c203130292e20546865206f7574636f6d65206f6620676c754c6f6f6b417428292073686f756c64206861766520746865206f726967696e20696e207468652063656e746572206f6620746865206669656c64206f6620766965772e2054686520696e697469616c20726f746174696f6e2073746570206973206f66206e6f20636f6e73657175656e63652c2062757420746865206c61746572207472616e736c6174696f6e2073746570206d6f76657320746865206f726967696e20617761792066726f6d207468652063656e746572213c2f703e0a0a3c703e43616e20796f75206578706c61696e206d7920676c754c6f6f6b41742829206d6973636f6e63657074696f6e3f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["javascript","svg","linear-algebra","bezier-curve"]', '1', 1383, 3, 3, 1459959548, 1378461856, 18655135, 'http://stackoverflow.com/questions/18655135/divide-bezier-curve-into-two-equal-halves', 'Divide bezier curve into two equal halves', 0x3c703e492068617665207468652062657a69657220637572766573206265747765656e203220706f696e74732e20492764206c696b6520746f2063757420616c6c2063757276657320696e746f2074776f20657175616c2068616c662e0a4f6e65206f66206d79206964656120697320696620492063616e20636f6e74726f6c202774272076616c75652049276c6c20647261772032206375727665732062792074203d205b302c302e355d20616e642074203d205b302e352c315d20627574204920646f6e2774206b6e6f7720686f772e2042656c6f77206973206d7920636f64652e204920776f6e2774206d696e6420616e79206f746865722069646561206f722073756767657374696f6e3c2f703e0a0a3c7072653e3c636f64653e266c743b21444f43545950452068746d6c205055424c494320222d2f2f5733432f2f445444205848544d4c20312e30205472616e736974696f6e616c2f2f454e222022687474703a2f2f7777772e77332e6f72672f54522f7868746d6c312f4454442f7868746d6c312d7472616e736974696f6e616c2e647464222667743b0a266c743b68746d6c20786d6c6e733d22687474703a2f2f7777772e77332e6f72672f313939392f7868746d6c222667743b0a266c743b686561642667743b0a20202020266c743b6d65746120687474702d65717569763d22436f6e74656e742d547970652220636f6e74656e743d22746578742f68746d6c3b20636861727365743d7574662d3822202f2667743b0a20202020266c743b7469746c652667743b44332074657374266c743b2f7469746c652667743b0a20202020266c743b736372697074207372633d22687474703a2f2f64336a732e6f72672f64332e76332e6d696e2e6a73222667743b266c743b2f7363726970742667743b0a0a20202020266c743b7363726970742667743b0a20202020766172204f766572203d2066756e6374696f6e28297b0a202020202020202064332e73656c6563742874686973290a20202020202020202e7374796c6528227374726f6b652d6f706163697479222c20302e3235293b0a202020207d0a20202020766172204f7574203d2066756e6374696f6e28297b0a202020202020202064332e73656c6563742874686973290a20202020202020202e7472616e736974696f6e28292e6475726174696f6e28323030290a20202020202020202e7374796c6528227374726f6b652d6f706163697479222c2030293b0a202020207d0a0a2020202066756e6374696f6e206375727665286e2c78312c79312c78322c7932297b0a0a2020202020202020766172207872203d202878312b7832292f322c0a2020202020202020202020207972203d202879312b7932292f322c0a202020202020202020202020657544697374203d204d6174682e73717274284d6174682e706f772878322d78312c32292b4d6174682e706f772879322d79312c3229292c0a2020202020202020202020207833203d202d79312b78722b79722c207834203d202d79322b78722b79722c0a2020202020202020202020207933203d202078312b79722d78722c207934203d202078322b79722d78722c0a2020202020202020202020206374726c202c2063757276654465736372697074696f6e3b0a0a20202020202020207376672e617070656e6428277061746827290a2020202020202020202020202e6174747228227374726f6b65222c2027626c756527290a2020202020202020202020202e61747472282766696c6c272c276e6f6e6527290a2020202020202020202020202e7374796c6528227374726f6b652d6f706163697479222c302e3235290a2020202020202020202020202e61747472282764272c20274d272b78332b272c272b79332b274c272b78342b272c272b7934290a2020202020202020202020202e6174747228277374726f6b652d7769647468272c7374726f6b655769647468293b0a0a2020202020202020666f7228766172206a3d303b6a266c743b3d6e3b6a2b2b297b0a2020202020202020202020206374726c203d205b2878342d7833292a6a2f6e2b7833202c202879342d7933292a6a2f6e2b79335d202c2020202020202020202020202020202020200a20202020202020202020202063757276654465736372697074696f6e3d2020200a2020202020202020202020202020202020202020274d27202b78312b272c2720202020202b79312b200a2020202020202020202020202020202020202020275127202b6374726c5b305d2b272c272b6374726c5b315d2b272c270a2020202020202020202020202020202020202020202020202b78322b272c2720202020202b79323b0a0a2020202020202020202020207376672e617070656e6428277061746827290a202020202020202020202020202020202e6174747228227374726f6b65222c2027626c756527290a202020202020202020202020202020202e61747472282766696c6c272c276e6f6e6527290a202020202020202020202020202020202e7374796c6528227374726f6b652d6f706163697479222c302e3235290a202020202020202020202020202020202e61747472282764272c2063757276654465736372697074696f6e290a202020202020202020202020202020202e6174747228277374726f6b652d7769647468272c7374726f6b655769647468293b20200a0a2020202020202020202020207376672e617070656e6428277061746827290a202020202020202020202020202020202e6174747228227374726f6b65222c2027626c756527290a202020202020202020202020202020202e61747472282766696c6c272c276e6f6e6527290a202020202020202020202020202020202e7374796c6528227374726f6b652d6f706163697479222c30290a202020202020202020202020202020202e6f6e28226d6f7573656f766572222c204f766572290a202020202020202020202020202020202e6f6e28226d6f7573656f7574222c204f7574290a202020202020202020202020202020202e61747472282764272c2063757276654465736372697074696f6e290a202020202020202020202020202020202e6174747228277374726f6b652d7769647468272c7374726f6b6557696474682a3235293b0a0a20202020202020207d0a0a202020207d0a20202020266c743b2f7363726970742667743b0a0a266c743b2f686561642667743b0a0a266c743b626f64792667743b0a20202020266c743b7363726970742667743b0a202020207661722077203d2031323638202c2068203d20363830202c207374726f6b655769647468203d20323b0a0a2020202076617220737667203d2064332e73656c6563742822626f647922290a202020202020202020202020202020202e617070656e64282273766722290a202020202020202020202020202020202e6174747228227769647468222c2077290a202020202020202020202020202020202e617474722822686569676874222c2068290a0a20202020637572766528352c203130302c3130302c203430302c353030293b0a0a0a20202020266c743b2f7363726970742667743b0a266c743b2f626f64792667743b0a266c743b2f68746d6c2667743b0a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","performance","numpy","linear-algebra","blas"]', '1', 6415, 2, 16, 1459148189, 1392016331, 21671040, 'http://stackoverflow.com/questions/21671040/link-atlas-mkl-to-an-installed-numpy', 'Link ATLAS/MKL to an installed Numpy', 0x3c703e3c7374726f6e673e544c3b44523c2f7374726f6e673e20686f7720746f206c696e6b2041544c41532f4d4b4c20746f206578697374696e67204e756d707920776974686f75742072656275696c64696e672e3c2f703e0a0a3c703e4920686176652075736564204e756d707920746f2063616c63756c617465207769746820746865206c61726765206d617472697820616e64204920666f756e642074686174206974206973207665727920736c6f772062656361757365204e756d7079206f6e6c7920757365203120636f726520746f20646f2063616c63756c6174696f6e2e20416674657220646f696e672061206c6f74206f66207365617263682049206669677572652074686174206d79204e756d707920646f6573206e6f74206c696e6b20746f20736f6d65206f7074696d697a6564206c696272617279206c696b652041544c41532f4d4b4c2e2048657265206973206d7920636f6e666967206f66206e756d70793a3c2f703e0a0a3c7072653e3c636f64653e2667743b2667743b2667743b696d706f7274206e756d7079206173206e700a2667743b2667743b2667743b6e702e5f5f636f6e6669675f5f2e73686f7728290a626c61735f696e666f3a0a202020206c6962726172696573203d205b27626c6173275d0a202020206c6962726172795f64697273203d205b272f7573722f6c6962275d0a202020206c616e6775616765203d206637370a6c617061636b5f696e666f3a0a202020206c6962726172696573203d205b276c617061636b275d0a202020206c6962726172795f64697273203d205b272f7573722f6c6962275d0a202020206c616e6775616765203d206637370a61746c61735f746872656164735f696e666f3a0a202020204e4f5420415641494c41424c450a626c61735f6f70745f696e666f3a0a202020206c6962726172696573203d205b27626c6173275d0a202020206c6962726172795f64697273203d205b272f7573722f6c6962275d0a202020206c616e6775616765203d206637370a20202020646566696e655f6d6163726f73203d205b28274e4f5f41544c41535f494e464f272c2031295d0a61746c61735f626c61735f746872656164735f696e666f3a0a20204e4f5420415641494c41424c450a6f70656e626c61735f696e666f3a0a20204e4f5420415641494c41424c450a6c617061636b5f6f70745f696e666f3a0a202020206c6962726172696573203d205b276c617061636b272c2027626c6173275d0a202020206c6962726172795f64697273203d205b272f7573722f6c6962275d0a202020206c616e6775616765203d206637370a20202020646566696e655f6d6163726f73203d205b28274e4f5f41544c41535f494e464f272c2031295d0a61746c61735f696e666f3a0a20204e4f5420415641494c41424c450a6c617061636b5f6d6b6c5f696e666f3a0a20204e4f5420415641494c41424c450a626c61735f6d6b6c5f696e666f3a0a20204e4f5420415641494c41424c450a61746c61735f626c61735f696e666f3a0a20204e4f5420415641494c41424c450a6d6b6c5f696e666f3a0a20204e4f5420415641494c41424c450a3c2f636f64653e3c2f7072653e0a0a3c703e466f72207468697320726561736f6e2c20492077616e7420746f206c696e6b2041544c41532f4d4b4c20746f204e756d70792e20486f77657665722c206d79204e756d707920697320696e7374616c6c65642066726f6d2050495020736f204920646f6e27742077616e7420746f20696e7374616c6c206d616e75616c6c79206265636175736520492077616e7420746f2075736520746865206c61746573742076657273696f6e2e2049206861766520646f6e6520736f6d652073656172636820627574207468657920617265206f6e6c7920666f72206275696c64696e672066726f6d20736372617463682e20466f72207468697320726561736f6e2c206d79207175657374696f6e206172653a3c2f703e0a0a3c756c3e0a3c6c693e41726520746865726520616e792077617920746f206c696e6b2041544c41532f4d4b4c20746f204e756d707920776974686f75742072656275696c64696e6720616761696e3f3c2f6c693e0a3c6c693e49206861766520666f756e6420746861742074686520636f6e66696720696e666f20697320736176656420696e203c7374726f6e673e5f3c656d3e636f6e6669673c2f656d3e5f2e70793c2f7374726f6e673e20696e2074686520696e7374616c6c656420666f6c646572206f66204e756d70792e20536f2077696c6c206d6f64696679696e6720697420736f6c7665206d792070726f626c656d3f204966207965732c20776f756c6420796f7520706c656173652073686f77206d6520686f773f3c2f6c693e0a3c2f756c3e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28');
INSERT INTO `so_questions` (`tags`, `is_answered`, `view_count`, `answer_count`, `score`, `last_activity_date`, `creation_date`, `question_id`, `link`, `title`, `body`, `has_more`, `quota_max`, `quota_remaining`, `createdAt`, `updatedAt`) VALUES
('["numpy","scipy","linear-algebra","eigenvalue"]', '0', 218, 2, 2, 1459486682, 1402715725, 24216273, 'http://stackoverflow.com/questions/24216273/error-when-computing-eigenvalues-of-a-scipy-linearoperator-gmres-did-not-conve', 'Error when computing eigenvalues of a scipy LinearOperator: &quot;gmres did not converge&quot;', 0x3c703e49276d20747279696e6720746f20736f6c76652061206c6172676520656967656e76616c75652070726f626c656d207769746820536369707920776865726520746865206d6174726978203c636f64653e413c2f636f64653e2069732064656e73652062757420492063616e20636f6d707574652069747320616374696f6e206f6e206120766563746f7220776974686f757420686176696e6720746f20617373656d626c65203c636f64653e413c2f636f64653e206578706c696369746c792e20536f20696e206f7264657220746f2061766f6964206d656d6f727920697373756573207768656e20746865206d6174726978204120676574732062696720492764206c696b6520746f20757365207468652073706172736520736f6c766572203c636f64653e73636970792e7370617273652e6c696e616c672e656967733c2f636f64653e20776974682061203c636f64653e4c696e6561724f70657261746f723c2f636f64653e207468617420696d706c656d656d656e7473207468697320616374696f6e2e3c2f703e0a0a3c703e4170706c79696e67203c636f64653e656967733c2f636f64653e20746f20616e206578706c69636974206e756d7079206172726179203c636f64653e413c2f636f64653e20776f726b732066696e652e20486f77657665722c2069662049206170706c79203c636f64653e656967733c2f636f64653e20746f2061203c636f64653e4c696e6561724f70657261746f723c2f636f64653e20696e7374656164207468656e207468652069746572617469766520736f6c766572206661696c7320746f20636f6e76657267652e20546869732069732074727565206576656e20696620746865203c636f64653e6d61747665633c2f636f64653e206d6574686f64206f6620746865203c636f64653e4c696e6561724f70657261746f723c2f636f64653e2069732073696d706c79206d61747269782d766563746f72206d756c7469706c69636174696f6e20776974682074686520676976656e206d6174726978203c636f64653e413c2f636f64653e2e3c2f703e0a0a3c703e41206d696e696d616c206578616d706c6520696c6c757374726174696e6720746865206661696c7572652069732061747461636865642062656c6f77202849276d207573696e672073686966742d696e76657274206d6f64652062656361757365204920616d20696e746572657374656420696e2074686520736d616c6c6573742066657720656967656e76616c756573292e205468697320636f6d70757465732074686520656967656e76616c756573206f6620612072616e646f6d206d6174726978203c636f64653e413c2f636f64653e206a7573742066696e652c20627574206661696c73207768656e206170706c69656420746f2061203c636f64653e4c696e6561724f70657261746f723c2f636f64653e2074686174206973206469726563746c7920636f6e7665727465642066726f6d203c636f64653e413c2f636f64653e2e204920747269656420746f20666964646c6520776974682074686520706172616d657465727320666f72207468652069746572617469766520736f6c76657220283c636f64653e76303c2f636f64653e2c203c636f64653e6e63763c2f636f64653e2c203c636f64653e6d6178697465723c2f636f64653e292062757420746f206e6f20617661696c2e3c2f703e0a0a3c703e416d2049206d697373696e6720736f6d657468696e67206f6276696f75733f20497320746865726520612077617920746f206d616b65207468697320776f726b3f20416e792073756767657374696f6e7320776f756c6420626520686967686c792061707072656369617465642e204d616e79207468616e6b73213c2f703e0a0a3c703e3c7374726f6e673e456469743a3c2f7374726f6e673e20492073686f756c6420636c617269667920776861742049206d65616e20627920226d616b65207468697320776f726b2220287468616e6b732c204469657472696368292e20546865206578616d706c652062656c6f77207573657320612072616e646f6d206d617472697820666f7220696c6c757374726174696f6e2e20486f77657665722c20696e206d79206170706c69636174696f6e2049206b6e6f7720746861742074686520656967656e76616c7565732061726520616c6d6f737420707572656c7920696d6167696e61727920286f7220616c6d6f737420707572656c79207265616c2069662049206d756c7469706c7920746865206d6174726978206279203c636f64653e316a3c2f636f64653e292e2049276d20696e746572657374656420696e207468652031302d323020736d616c6c6573742d6d61676e697475646520656967656e76616c7565732c206275742074686520616c676f726974686d20646f65736e2774206265686176652077656c6c2028692e652e2c206e657665722073746f7073206576656e20666f7220736d616c6c2d697368206d61747269782073697a65732920696620492073706563696679203c636f64653e77686963683d27534d273c2f636f64653e2e205468657265666f72652049276d207573696e672073686966742d696e76657274206d6f64652062792070617373696e672074686520706172616d6574657273203c636f64653e7369676d613d302e302c2077686963683d274c4d273c2f636f64653e2e2049276d20686170707920746f20747279206120646966666572656e7420617070726f61636820736f206c6f6e6720617320697420616c6c6f7773206d6520746f20636f6d7075746520612062756e6368206f6620736d616c6c6573742d6d61676e697475646520656967656e76616c7565732e203c2f703e0a0a3c7072653e3c636f64653e66726f6d2073636970792e7370617273652e6c696e616c6720696d706f727420656967732c204c696e6561724f70657261746f722c2061736c696e6561726f70657261746f720a696d706f7274206e756d7079206173206e700a0a23205365742061207365656420666f7220726570726f6475636962696c6974790a6e702e72616e646f6d2e736565642830290a0a232053697a65206f6620746865206d61747269780a4e203d203130300a0a232047656e657261746520612072616e646f6d206d6174726978206f662073697a65204e2078204e0a2320616e6420636f6d707574652069747320656967656e76616c7565730a41203d206e702e72616e646f6d2e72616e646f6d5f73616d706c6528284e2c204e29290a65696776616c73203d206569677328412c207369676d613d302e302c2077686963683d274c4d272c2072657475726e5f656967656e766563746f72733d46616c7365290a7072696e742065696776616c730a0a2320436f6e7665727420746865206d617472697820746f2061204c696e6561724f70657261746f720a415f6f70203d2061736c696e6561726f70657261746f722841290a0a232054727920746f20736f6c7665207468652073616d6520656967656e70726f626c656d20616761696e2e0a2320546869732074696d652069742070726f647563657320616e206572726f723a0a230a232056616c75654572726f723a204572726f7220696e20696e76657274696e67204d3a2066756e6374696f6e20676d72657320646964206e6f7420636f6e76657267652028696e666f203d2031303030292e0a65696776616c7332203d206569677328415f6f702c207369676d613d302e302c2077686963683d274c4d272c2072657475726e5f656967656e766563746f72733d46616c7365290a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["string","matlab","linear-algebra","symbolic-math","mupad"]', '1', 179, 2, 1, 1462088174, 1409010200, 25495923, 'http://stackoverflow.com/questions/25495923/algorithm-to-determine-if-a-symbolic-expression-is-a-linear-function', 'Algorithm to determine if a symbolic expression is a linear function', 0x3c703e497320746865726520616e20656173792077617920746f20636865636b206966206120766563746f722076616c7565642073796d626f6c69632066756e6374696f6e206973206c696e6561723f20496620736f2c20697320746865726520616e20656173792077617920746f20726570726573656e7420746869732065787072657373696f6e20696e2074686520666f726d203c636f64653e412a783c2f636f64653e2c207768657265203c636f64653e413c2f636f64653e20697320612073796d626f6c6963206d617472697820616e64203c636f64653e783c2f636f64653e2069732074686520617267756d656e742028692e652e20697320746865726520612077617920746f20226578747261637422203c636f64653e413c2f636f64653e20676976656e203c636f64653e783c2f636f64653e20616e64203c636f64653e412a783c2f636f64653e293f203c2f703e0a0a3c70726520636c6173733d226c616e672d6e6f6e65207072657474797072696e742d6f76657272696465223e3c636f64653e73796d732078312078322061206220633b0a667831203d205b612a2878312b7832293b20622a78312b632a78315d3b0a667832203d205b612a78312f6c6f67287832293b2078325e325d3b0a413d636865636b6c696e656172697479286678312c205b78312078325d272920252073686f756c642072657475726e205b612c20613b20622b632c20305d0a413d636865636b6c696e656172697479286678322c205b78312078325d272920252073686f756c642072657475726e2066616c73650a3c2f636f64653e3c2f7072653e0a0a3c68723e0a0a3c703e416e737765723a0a546865726520697320616e20656173792077617920746f20736f6c7665207468652070726f626c656d207573696e672061206275696c742d696e204d41544c41422066756e6374696f6e203c7374726f6e673e6571756174696f6e73546f4d61747269783c2f7374726f6e673e2e3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["matlab","linear-algebra","solver","differential-equations"]', '0', 152, 0, 0, 1460886591, 1417538728, 27254594, 'http://stackoverflow.com/questions/27254594/fast-linear-system-solver-for-large-systems', 'Fast linear system solver for large systems', 0x3c703e486f7720646f204920736f6c76652061206c61726765206c696e6561722073797374656d207768657265207468652073797374656d206d61747269782069732062616e64656420646961676f6e616c3f204a757374207573696e67203c636f64653e5c3c2f636f64653e2074616b6573206c6f6e676572207468616e204920776f756c64206c696b652e204920616d206f70656e20746f2075736520697465726174697665206d6574686f64732c206966207468697320697320746865206f6e6c7920616c7465726e61746976652c2062757420697320746865726520616e79206b6e6f776e20656666696369656e74206d2d66696c657320616c726561647920696d706c656d656e7465643f20576861742073686f756c642049206c6f6f6b20666f723f0a5468616e6b732061206c6f7421203c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["linear-algebra","intel-mkl"]', '0', 45, 1, 0, 1457415749, 1427228450, 29242129, 'http://stackoverflow.com/questions/29242129/using-the-three-array-bsr-format-in-mkl-for-rectangular-matrix-vector-products', 'Using the three array BSR format in MKL for rectangular matrix vector products', 0x3c703e4d4b4c2069732074686520696e74656c206d617468206b65726e656c206c696272617279207573656420666f722066617374206c696e65617220616c6765627261206f6e20435055732e204253522069732074686520626c6f636b2073706172736520726f7720666f726d617420666f7220737061727365206d617472696365732e2049206e65656420746f20636f6d707574652061206d617472697820766563746f722070726f64756374206f66206120626c6f636b20737061727365206d6174726978207573696e672074686520332061727261792042535220726570726573656e746174696f6e206f662061207370617273652072656374616e67756c6172206d61747269782e205468652066756e6374696f6e73207468617420657869737420666f722074686520332d61727261792076657273696f6e206f6e6c792074616b657320737175617265206d617472696365732e205468652066756e6374696f6e20746861742063616e2074616b652072656374616e67756c6172206d617472696365732072657175697265732074686520342061727261792076657273696f6e206f66207468652042535220666f726d61742e206d6b6c5f3f62737267656d76206973207468652076657273696f6e207468617420757365732074686520332d61727261792076657273696f6e20616e64206d6b6c5f3f6273726d76206973207468652066756e6374696f6e20746861742063616e207573652074616b652072656374616e67756c6172206d61747269636573206275742072657175697265732074686520342d61727261792076657273696f6e2e20497320616e796f6e6520617761726520696620697420697320706f737369626c6520746f20636f6d706c65746520746865206f7065726174696f6e206f6e20612072656374616e67756c6172206d617472697820776974686f7574207265736f7274696e6720746f2070616464696e67206f6e2074686520696e707574206f72206f757470757420766563746f72733f204920636865636b65642074686520646f63756d656e746174696f6e20666f7220616e7920636c756573206275742049206d61792068617665206d697373656420736f6d657468696e672e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["opengl","matrix","camera","webgl","linear-algebra"]', '1', 162, 1, 2, 1462141228, 1442236551, 32565827, 'http://stackoverflow.com/questions/32565827/whats-the-purpose-of-magic-4-of-last-row-in-matrix-4x4-for-3d-graphics', 'What&#39;s the purpose of magic 4 of last row in matrix 4x4 for 3D graphics?', 0x3c703e5768656e204920726561642074686520626f6f6b2061626f757420576562474c2c2049277665207365656e20746865206e657874206d6174726978206465736372697074696f6e3a3c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f33546e51502e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f33546e51502e706e672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e546865726520697320616e20696e666f726d6174696f6e2061626f757420746865206c61737420726f7720696e20626f6f6b20283c656d3e576562474c20426567696e6e6572277320477569646520426567696e6e6572277320477569646520446965676f2043616e746f722c204272616e646f6e204a6f6e65733c2f656d3e293a3c2f703e0a0a3c626c6f636b71756f74653e0a20203c703e546865206d7973746572696f757320666f7572746820726f772054686520666f7572746820726f7720646f6573206e6f74206265617220616e79207370656369616c0a20206d65616e696e672e2020456c656d656e7473206d342c206d382c206d31322061726520616c77617973207a65726f2e2020456c656d656e74206d20313620287468650a2020686f6d6f67656e656f757320636f6f7264696e617465292077696c6c20616c7761797320626520312e3c2f703e0a3c2f626c6f636b71756f74653e0a0a3c703e536f2c20696620746865206c61737420726f7720697320616c77617973203c636f64653e5b20302c20302c20302c2031205d3c2f636f64653e2c204920646f6e277420756e6465727374616e6420746865206e6578743a3c2f703e0a0a3c626c6f636b71756f74653e0a20203c703e576879206973206974206e6563657373617279206265207374726963746c79203c636f64653e5b20302c20302c20302c2031205d3c2f636f64653e2c20776879206e6f74206a75737420616c6c0a20207468652076616c7565732062652030206f72206576656e20736f6d65206f746865722076616c75653f3c2f703e0a3c2f626c6f636b71756f74653e0a0a3c703e4275742c20696620746f20766965772074686520736f7572636520636f6465206f66203c636f64653e676c4d61747269783c2f636f64653e206a617661736372697074206c6962726172792c2065786163746c7920746865206d6574686f64203c636f64653e7472616e736c61746528293c2f636f64653e2066726f6d20746865203c636f64653e6d6174343c2f636f64653e203c6120687265663d2268747470733a2f2f6769746875622e636f6d2f746f6a692f676c2d6d61747269782f626c6f622f6d61737465722f7372632f676c2d6d61747269782f6d6174342e6a73222072656c3d226e6f666f6c6c6f77223e68747470733a2f2f6769746875622e636f6d2f746f6a692f676c2d6d61747269782f626c6f622f6d61737465722f7372632f676c2d6d61747269782f6d6174342e6a733c2f613e3c2f703e0a0a3c703e596f752772652061626c6520746f2073656520746865206e6578743a3c2f703e0a0a3c7072653e3c636f64653e2f2a2a0a202a205472616e736c6174652061206d6174342062792074686520676976656e20766563746f72206e6f74207573696e672053494d440a202a0a202a2040706172616d207b6d6174347d206f75742074686520726563656976696e67206d61747269780a202a2040706172616d207b6d6174347d206120746865206d617472697820746f207472616e736c6174650a202a2040706172616d207b766563337d207620766563746f7220746f207472616e736c6174652062790a202a204072657475726e73207b6d6174347d206f75740a202a2f0a6d6174342e7363616c61722e7472616e736c617465203d2066756e6374696f6e20286f75742c20612c207629207b0a202020207661722078203d20765b305d2c2079203d20765b315d2c207a203d20765b325d2c0a20202020202020206130302c206130312c206130322c206130332c0a20202020202020206131302c206131312c206131322c206131332c0a20202020202020206132302c206132312c206132322c206132333b0a0a202020206966202861203d3d3d206f757429207b0a20202020202020206f75745b31325d203d20615b305d202a2078202b20615b345d202a2079202b20615b385d202a207a202b20615b31325d3b0a20202020202020206f75745b31335d203d20615b315d202a2078202b20615b355d202a2079202b20615b395d202a207a202b20615b31335d3b0a20202020202020206f75745b31345d203d20615b325d202a2078202b20615b365d202a2079202b20615b31305d202a207a202b20615b31345d3b0a20202020202020206f75745b31355d203d20615b335d202a2078202b20615b375d202a2079202b20615b31315d202a207a202b20615b31355d3b0a202020207d20656c7365207b0a2020202020202020613030203d20615b305d3b20613031203d20615b315d3b20613032203d20615b325d3b20613033203d20615b335d3b0a2020202020202020613130203d20615b345d3b20613131203d20615b355d3b20613132203d20615b365d3b20613133203d20615b375d3b0a2020202020202020613230203d20615b385d3b20613231203d20615b395d3b20613232203d20615b31305d3b20613233203d20615b31315d3b0a0a20202020202020206f75745b305d203d206130303b206f75745b315d203d206130313b206f75745b325d203d206130323b206f75745b335d203d206130333b0a20202020202020206f75745b345d203d206131303b206f75745b355d203d206131313b206f75745b365d203d206131323b206f75745b375d203d206131333b0a20202020202020206f75745b385d203d206132303b206f75745b395d203d206132313b206f75745b31305d203d206132323b206f75745b31315d203d206132333b0a0a20202020202020206f75745b31325d203d20613030202a2078202b20613130202a2079202b20613230202a207a202b20615b31325d3b0a20202020202020206f75745b31335d203d20613031202a2078202b20613131202a2079202b20613231202a207a202b20615b31335d3b0a20202020202020206f75745b31345d203d20613032202a2078202b20613132202a2079202b20613232202a207a202b20615b31345d3b0a20202020202020206f75745b31355d203d20613033202a2078202b20613133202a2079202b20613233202a207a202b20615b31355d3b0a202020207d0a0a2020202072657475726e206f75743b0a7d3b0a3c2f636f64653e3c2f7072653e0a0a3c703e49207368616c6c20686967686c6967687420746865206c696e653a3c2f703e0a0a3c7072653e3c636f64653e6f75745b31355d203d20613033202a2078202b20613133202a2079202b20613233202a207a202b20615b31355d3b0a3c2f636f64653e3c2f7072653e0a0a3c703e546865206c617374206f6e6520282074686520686f6d6f67656e656f757320636f6f7264696e6174652029206973206d6f64696679696e672c20736f20697420636f756c64206265206e6f7420657175616c20312e303f3c2f703e0a0a3c703e536f2c20492072617468657220646f6e277420756e6465727374616e642e2e2e3c2f703e0a0a3c703e49207365652c207468617420696e7465726e616c20337833206d617472697820726570726573656e747320726f746174696f6e7320616e64203c636f64653e5b206d31332c206d31342c206d3135205d3c2f636f64653e2069732061207472616e736c6174696f6e20766563746f7220666f7220746865206368616e67696e6720746865206f726967696e20706f736974696f6e206f662063616d6572612c20627574207768617427732061626f757420746865206c61737420726f7720616e642077687920736f6d6574696d657320492073656520736f6d652063616c63756c6174696f6e73206f6e20697420696e206c69627261726965733f3c2f703e0a0a3c703e50533c2f703e0a0a3c703e416c736f204920737570706f736520746865726520697320736f6d65206b696e64206f66203c636f64653e6d6167696320333c2f636f64653e20666f722074686520337833206d6174726978207768696368206973207573656420666f72207468652032442d7472616e73666f726d6174696f6e732c20616d20492072696768743f3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["python","scipy","linear-algebra","preconditions"]', '1', 197, 1, 2, 1458833048, 1443615371, 32865832, 'http://stackoverflow.com/questions/32865832/preconditioned-conjugate-gradient-and-linearoperator-in-python', 'Preconditioned Conjugate Gradient and LinearOperator in python', 0x3c703e5b486f6d65776f726b5d204920616d20676f696e6720746f20736f6c766520746865206c696e6561722073797374656d2041783d622062792074686520507265636f6e646974696f6e656420436f6e6a7567617465204772616469656e74206d6574686f642c20616e64204920757365207370696c752066756e6374696f6e2066726f6d2073636970792e7370617273652e6c696e616c6720666f722074686520707265636f6e646974696f6e65722e20412069732061207370617273652073796d6d6574726963203136322a313632206d61747269782e2053696e636520746865207370696c7520676976657320616e20617070726f78696d6174696f6e20746f2074686520696e7665727365206f6620412c20736179204d20617070726f78696d6174657320412c20616e6420736f207370696c75284129206769766573204d5e2d312c2077686963682069732074686520707265636f6e646974696f6e65722e20492066696e6420746861742077652063616e206469726563746c792067697665732074686520707265636f6e646974696f6e657220696e2074686520707974686f6e20436f6e6a7567617465204772616469656e742066756e6374696f6e2c20627574206d7920636f64652062656c6f7720646f6573206e6f7420776f726b2e3c2f703e0a0a3c7072653e3c636f64653e4d5f696e76657273653d73636970792e7370617273652e6c696e616c672e7370696c752841290a4d323d73636970792e7370617273652e6c696e616c672e4c696e6561724f70657261746f7228283136322c313632292c4d5f696e76657273652e736f6c7665290a78333d73636970792e7370617273652e6c696e616c672e636728412c622c4d32290a547970654572726f7220202020202020202020202020202020202020202020202020202020202020202054726163656261636b20286d6f737420726563656e742063616c6c206c617374290a266c743b69707974686f6e2d696e7075742d38342d3836663866393164663864322667743b20696e20266c743b6d6f64756c652667743b28290a2d2d2d2d2667743b20312078333d73636970792e7370617273652e6c696e616c672e636728412c622c4d32290a0a2f55736572732f72756f62696e6768616e2f616e61636f6e64612f6c69622f707974686f6e332e342f736974652d7061636b616765732f73636970792f7370617273652f6c696e616c672f69736f6c76652f6974657261746976652e707920696e20636728412c20622c2078302c20746f6c2c206d6178697465722c2078747970652c204d2c2063616c6c6261636b290a0a2f55736572732f72756f62696e6768616e2f616e61636f6e64612f6c69622f707974686f6e332e342f736974652d7061636b616765732f73636970792f7370617273652f6c696e616c672f69736f6c76652f6974657261746976652e707920696e206e6f6e5f7265656e7472616e742866756e632c202a612c202a2a6b77290a2020202020383320202020207472793a0a20202020203834202020202020202020645b275f5f656e7465726564275d203d20547275650a2d2d2d2667743b20383520202020202020202072657475726e2066756e63282a612c202a2a6b77290a20202020203836202020202066696e616c6c793a0a20202020203837202020202020202020645b275f5f656e7465726564275d203d2046616c73650a0a2f55736572732f72756f62696e6768616e2f616e61636f6e64612f6c69622f707974686f6e332e342f736974652d7061636b616765732f73636970792f7370617273652f6c696e616c672f69736f6c76652f6974657261746976652e707920696e20636728412c20622c2078302c20746f6c2c206d6178697465722c2078747970652c204d2c2063616c6c6261636b290a2020202032313920406e6f6e5f7265656e7472616e740a202020203232302064656620636728412c20622c2078303d4e6f6e652c20746f6c3d31652d352c206d6178697465723d4e6f6e652c2078747970653d4e6f6e652c204d3d4e6f6e652c2063616c6c6261636b3d4e6f6e65293a0a2d2d2667743b203232312020202020412c4d2c782c622c706f737470726f63657373203d206d616b655f73797374656d28412c4d2c78302c622c7874797065290a20202020323232200a2020202032323320202020206e203d206c656e2862290a0a2f55736572732f72756f62696e6768616e2f616e61636f6e64612f6c69622f707974686f6e332e342f736974652d7061636b616765732f73636970792f7370617273652f6c696e616c672f69736f6c76652f7574696c732e707920696e206d616b655f73797374656d28412c204d2c2078302c20622c207874797065290a2020202031303820202020202020202078203d207a65726f73284e2c2064747970653d7874797065290a202020203130392020202020656c73653a0a2d2d2667743b2031313020202020202020202078203d2061727261792878302c2064747970653d7874797065290a202020203131312020202020202020206966206e6f742028782e7368617065203d3d20284e2c3129206f7220782e7368617065203d3d20284e2c29293a0a202020203131322020202020202020202020202072616973652056616c75654572726f7228274120616e642078206861766520696e636f6d70617469626c652064696d656e73696f6e7327290a0a547970654572726f723a20666c6f6174282920617267756d656e74206d757374206265206120737472696e67206f722061206e756d6265722c206e6f7420274c696e6561724f70657261746f7227200a3c2f636f64653e3c2f7072653e0a0a3c703e416c736f2c20746865207175657374696f6e2068696e747320492077696c6c206e65656420746f20757365204c696e6561724f70657261746f7220696e746572666163652c204920646f206e6f7420756e6465727374616e6420776861742069732065786163746c79204c696e6561724f70657261746f7220646f696e6720616e6420776879207765206e65656420697420686572652e3c2f703e0a0a3c703e416e792073756767657374696f6e20776f756c64206265206170707265636961746564210a5468616e6b7320696e20616476616e6365213c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","matrix","linear-algebra","eigenvector","eigenvalue"]', '1', 194, 2, 4, 1462301983, 1445426885, 33258139, 'http://stackoverflow.com/questions/33258139/matlab-not-returning-orthonormal-matrix-of-eigenvectors', 'Matlab Not Returning Orthonormal Matrix of Eigenvectors', 0x3c703e5768656e20492074727920746f2066696e642074686520656967656e2d6465636f6d706f736974696f6e206f662061206d617472697820696e204d61746c6162207468617420686173206120726570656174656420656967656e76616c756520627574206973204e4f54206465666563746976652c206974206973206e6f742072657475726e696e6720616e206f7274686f6e6f726d616c206d6174726978206f66206569676e65766563746f72732e20466f72206578616d706c653a3c2f703e0a0a3c7072653e3c636f64653e6b203d20353b0a72657065617473203d20313b0a0a252046697273742067656e657261746520612072616e646f6d206d6174726978206f66206569676e65766563746f72732074686174206973206f7274686f6e6f726d616c0a56203d206f7274682872616e64286b29293b0a0a25204e6f772067656e6572617465206120766563746f72206f6620656967656e76616c75657320776974682074686520676976656e206e756d626572206f6620726570656174730a44203d2072616e64286b2c31293b0a666f722069203d20313a726570656174730a202020202520507574206f6e652072616e646f6d2076616c756520696e746f20616e6f7468657220286e6f7465207468697320736f6d6574696d65732077696c6c20726573756c7420696e0a2020202025206c657373207468616e2074686520676976656e206e756d626572206f662072657065617473206966207765206576657220696e707574207468652073616d650a2020202025206e756d626572290a2020202044286365696c286b2a72616e6428292929203d2044286365696c286b2a72616e64282929293b0a656e640a0a41203d2056272a646961672844292a563b0a0a25204e6f77207465737420746865206569676e65766563746f72206d6174726978206f6620410a5b565f412c20445f415d203d206569672841293b0a0a6469737028565f412a565f4127202d20657965286b29290a3c2f636f64653e3c2f7072653e0a0a3c703e4920616d2066696e64696e672074686174206d79206d6174726978206f6620656967656e766563746f7273203c636f64653e565f413c2f636f64653e206973206e6f74206f7274686f676f6e616c20692e652e203c636f64653e565f412a565f41273c2f636f64653e206973206e6f7420657175616c6c696e6720746865206964656e74697479206d6174726978202874616b696e6720696e746f206163636f756e7420726f756e64696e67206572726f7273292e3c2f703e0a0a3c703e492077617320756e6465722074686520696d7072657373696f6e2074686174206966206d79206d617472697820776173207265616c20616e642073796d6d6574726963207468656e204d61746c616220776f756c642072657475726e20616e206f7274686f676f6e616c206d6174726978206f6620656967656e766563746f72732c20736f20776861742069732074686520697373756520686572653f3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["matrix","linear-algebra","sympy"]', '1', 34, 1, 0, 1458759892, 1445714421, 33322317, 'http://stackoverflow.com/questions/33322317/finding-an-answer-to-a-singular-matrix-equation-if-it-exists-in-sympy', 'Finding an answer to a singular matrix equation if it exists in SymPy', 0x3c703e537570706f7365207765206861766520746865206d6174726978206571756174696f6e203c636f64653e412a78203d20623c2f636f64653e207768657265203c636f64653e413c2f636f64653e20697320737175617265206275742073696e67756c61722e205468656e20696e2067656e6572616c20746865206571756174696f6e2065697468657220686173206e6f20736f6c7574696f6e73206f7220696e66696e6974656c79206d616e7920736f6c7574696f6e732e20496620697420646f6573206861766520736f6c7574696f6e732c20492764206c696b6520746f2066696e6420746865697220666f726d203c656d3e73796d626f6c6963616c6c793c2f656d3e20696e207465726d73206f662066726565207661726961626c6573207573696e672053796d50792e203c2f703e0a0a3c703e49206b6e6f772069662077652063616e2066696e64206f6e6520737065636966696320736f6c7574696f6e203c636f64653e783c2f636f64653e2c207468656e20627920616464696e6720766563746f72732066726f6d20746865206e756c6c7370616365206f66203c636f64653e413c2f636f64653e206f6e746f203c636f64653e783c2f636f64653e207765206d61792066696e642074686520726573742c20736f207468652070726f626c656d206973207265647563656420746f2066696e64696e67206a757374206f6e6520736f6c7574696f6e2e20496e204d617468656d6174696361207468652066756e6374696f6e203c636f64653e4c696e656172536f6c76653c2f636f64653e2077696c6c206769766520796f752073756368206120736f6c7574696f6e2c2062757420756e666f7274756e6174656c7920696e2053796d507920616c6c206f662074686520736f6c76657273207365656d20746f207265717569726520746861742041206265206e6f6e2d73696e67756c61722e3c2f703e0a0a3c703e446f657320616e796f6e65206b6e6f7720686f772049206d696768742066696e642073756368206120736f6c7574696f6e20283c656d3e73796d626f6c6963616c6c793c2f656d3e29207573696e672053796d50793f2049277665206265656e206c6f6f6b696e6720696e746f20726f6c6c696e67206d79206f776e20616c676f726974686d20746f20646f20746869732c20706f737369626c79206279207573696e67203c636f64653e412e7272656628293c2f636f64653e20746f20707574203c636f64653e413c2f636f64653e20696e746f207265647563656420726f7720656368656c6f6e20666f726d61742066697273742c206275742049276d206e6f7420636f6e666964656e7420656e6f75676820696e206d79206c696e65617220616c676562726120746f206b6e6f77206966207468697320776f756c6420776f726b20737461626c792e20416e6f7468657220706f73736962696c697479206d696768742062652063616c63756c6174696e67207468652070736575646f696e76657273652c20627574207468652066756e6374696f6e203c636f64653e70696e7628293c2f636f64653e20636f6d706c61696e732061626f75742073696e67756c6172206d617472696365732e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c","opengl","matrix","linear-algebra"]', '1', 345, 5, 4, 1462399066, 1448244488, 33862730, 'http://stackoverflow.com/questions/33862730/row-major-vs-column-major-confusion', 'Row-major vs Column-major confusion', 0x3c703e49277665206265656e2072656164696e672061206c6f742061626f757420746869732c20746865206d6f72652049207265616420746865206d6f726520636f6e66757365642049206765742e3c2f703e0a0a3c703e4d7920756e6465727374616e64696e673a20496e20726f772d6d616a6f7220726f7773206172652073746f72656420636f6e746967756f75736c7920696e206d656d6f72792c20696e20636f6c756d6e2d6d616a6f7220636f6c756d6e73206172652073746f72656420636f6e746967756f75736c7920696e206d656d6f72792e20536f206966207765206861766520612073657175656e6365206f66206e756d62657273203c636f64653e5b312c202e2e2e2c20395d3c2f636f64653e20616e642077652077616e7420746f2073746f7265207468656d20696e206120726f772d6d616a6f72206d61747269782c207765206765743a3c2f703e0a0a3c7072653e3c636f64653e7c312c20322c20337c0a7c342c20352c20367c0a7c372c20382c20397c0a3c2f636f64653e3c2f7072653e0a0a3c703e7768696c652074686520636f6c756d6e2d6d616a6f722028636f7272656374206d652069662049276d2077726f6e67292069733a3c2f703e0a0a3c7072653e3c636f64653e7c312c20342c20377c0a7c322c20352c20387c0a7c332c20362c20397c0a3c2f636f64653e3c2f7072653e0a0a3c703e7768696368206973206566666563746976656c7920746865207472616e73706f7365206f66207468652070726576696f7573206d61747269782e3c2f703e0a0a3c703e4d7920636f6e667573696f6e3a2057656c6c2c204920646f6e27742073656520616e7920646966666572656e63652e2049662077652069746572617465206f6e20626f746820746865206d617472696365732028627920726f777320696e20746865206669727374206f6e652c20616e6420627920636f6c756d6e7320696e20746865207365636f6e64206f6e6529207765276c6c20636f766572207468652073616d652076616c75657320696e207468652073616d65206f726465723a203c636f64653e312c20322c20332c202e2e2e2c20393c2f636f64653e3c2f703e0a0a3c703e4576656e206d6174726978206d756c7469706c69636174696f6e206973207468652073616d652c2077652074616b652074686520666972737420636f6e746967756f757320656c656d656e747320616e64206d756c7469706c79207468656d207769746820746865207365636f6e64206d617472697820636f6c756d6e732e20536f20736179207765206861766520746865206d6174726978203c636f64653e4d3c2f636f64653e3a3c2f703e0a0a3c7072653e3c636f64653e7c312c20302c20347c200a7c352c20322c20377c200a7c362c20302c20307c0a3c2f636f64653e3c2f7072653e0a0a3c703e4966207765206d756c7469706c79207468652070726576696f757320726f772d6d616a6f72206d6174726978203c636f64653e523c2f636f64653e2077697468203c636f64653e4d3c2f636f64653e2c2074686174206973203c636f64653e522078204d3c2f636f64653e207765276c6c206765743a3c2f703e0a0a3c7072653e3c636f64653e7c312a31202b20322a30202b20332a342c20312a35202b20322a32202b20332a372c206574637c0a7c6574632e2e207c0a7c6574632e2e207c0a3c2f636f64653e3c2f7072653e0a0a3c703e4966207765206d756c7469706c792074686520636f6c756d6e2d6d616a6f72206d6174726978203c636f64653e433c2f636f64653e2077697468203c636f64653e4d3c2f636f64653e2c2074686174206973203c636f64653e432078204d3c2f636f64653e2062792074616b696e672074686520636f6c756d6e73206f66203c636f64653e433c2f636f64653e20696e7374656164206f662069747320726f77732c207765206765742065786163746c79207468652073616d6520726573756c742066726f6d203c636f64653e522078204d3c2f636f64653e3c2f703e0a0a3c703e49276d207265616c6c7920636f6e66757365642c2069662065766572797468696e67206973207468652073616d652c2077687920646f2074686573652074776f207465726d73206576656e2065786973743f2049206d65616e206576656e20696e20746865206669727374206d6174726978203c636f64653e523c2f636f64653e2c204920636f756c64206c6f6f6b2061742074686520726f777320616e6420636f6e7369646572207468656d20636f6c756d6e732e2e2e3c2f703e0a0a3c703e416d2049206d697373696e6720736f6d657468696e673f205768617420646f657320726f772d6d616a6f7220767320636f6c2d6d616a6f722061637475616c6c7920696d706c79206f6e206d79206d6174726978206d6174683f204927766520616c77617973206c6561726e656420696e206d79204c696e65617220416c676562726120636c61737365732074686174207765206d756c7469706c7920726f77732066726f6d20746865206669727374206d6174726978207769746820636f6c756d6e732066726f6d20746865207365636f6e64206f6e652c20646f65732074686174206368616e676520696620746865206669727374206d61747269782077617320696e20636f6c756d6e2d6d616a6f723f20646f207765206e6f77206861766520746f206d756c7469706c792069747320636f6c756d6e73207769746820636f6c756d6e732066726f6d20746865207365636f6e64206d6174726978206c696b6520492064696420696e206d79206578616d706c65206f72207761732074686174206a75737420666c6174206f75742077726f6e673f3c2f703e0a0a3c703e416e7920636c6172696669636174696f6e7320617265207265616c6c79206170707265636961746564213c2f703e0a0a3c703e3c7374726f6e673e454449543a3c2f7374726f6e673e204f6e65206f6620746865206f74686572206d61696e20736f7572636573206f6620636f6e667573696f6e2049276d20686176696e6720697320474c4d2e2e2e20536f204920686f766572206f76657220697473206d6174726978207479706520616e64206869742046313220746f2073656520686f77206974277320696d706c656d656e7465642c207468657265204920736565206120766563746f722061727261792c20736f2069662077652068617665206120337833206d6174726978207765206861766520616e206172726179206f66203320766563746f72732e204c6f6f6b696e67206174207468652074797065206f662074686f736520766563746f72732049207361772027636f6c5f747970652720736f204920617373756d656420746861742065616368206f6e65206f662074686f736520766563746f727320726570726573656e74206120636f6c756d6e2c20616e6420746875732077652068617665206120636f6c756d6e2d6d616a6f722073797374656d2072696768743f3c2f703e0a0a3c703e57656c6c2c204920646f6e2774206b6e6f7720746f20626520686f6e6573742e20492077726f74652074686973207072696e742066756e6374696f6e20746f20636f6d70617265206d79207472616e736c6174696f6e206d6174726978207769746820676c6d27732c20492073656520746865207472616e736c6174696f6e20766563746f7220696e20676c6d20617420746865206c61737420726f772c20616e64206d696e6520697320617420746865206c61737420636f6c756d6e2e2e2e203c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f714d786a512e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f714d786a512e706e672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e546869732061646473206e6f7468696e6720627574206d6f726520636f6e667573696f6e2e20596f752063616e20636c6561726c79207365652074686174206561636820766563746f7220696e203c636f64653e676c6d5472616e736c6174653c2f636f64653e206d617472697820726570726573656e7473206120726f7720696e20746865206d61747269782e20536f2e2e2e2074686174206d65616e73207468617420746865206d617472697820697320726f772d6d616a6f722072696768743f20576861742061626f7574206d79206d61747269783f202849276d207573696e67206120666c6f61742061727261795b31365d2920746865207472616e736c6174696f6e2076616c7565732061726520696e20746865206c61737420636f6c756d6e2c20646f65732074686174206d65616e206d79206d617472697820697320636f6c756d6e2d6d616a6f7220616e642049206469646e2774206e6f772069743f203c656d3e747269657320746f2073746f7020686561642066726f6d207370696e6e696e673c2f656d3e3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["python","numpy","linear-algebra","matrix-multiplication","numpy-broadcasting"]', '1', 137, 4, 2, 1458234559, 1448797184, 33982359, 'http://stackoverflow.com/questions/33982359/why-does-numpy-dot-behave-in-this-way', 'Why does numpy.dot behave in this way?', 0x3c703e49276d20747279696e6720746f20756e6465727374616e6420776879206e756d70792773203c636f64653e646f743c2f636f64653e2066756e6374696f6e206265686176657320617320697420646f65733a3c2f703e0a0a3c7072653e3c636f64653e4d203d206e702e6f6e65732828392c203929290a5631203d206e702e6f6e65732828392c29290a5632203d206e702e6f6e65732828392c203529290a5633203d206e702e6f6e65732828322c20392c203529290a5634203d206e702e6f6e65732828332c20322c20392c203529290a3c2f636f64653e3c2f7072653e0a0a3c703e4e6f77203c636f64653e6e702e646f74284d2c205631293c2f636f64653e20616e64203c636f64653e6e702e646f74284d2c205632293c2f636f64653e206265686176652061730a65787065637465642e2042757420666f72203c636f64653e56333c2f636f64653e20616e64203c636f64653e56343c2f636f64653e2074686520726573756c74207375727072697365730a6d653a3c2f703e0a0a3c7072653e3c636f64653e2667743b2667743b2667743b206e702e646f74284d2c205633292e73686170650a28392c20322c2035290a2667743b2667743b2667743b206e702e646f74284d2c205634292e73686170650a28392c20332c20322c2035290a3c2f636f64653e3c2f7072653e0a0a3c703e49206578706563746564203c636f64653e28322c20392c2035293c2f636f64653e20616e64203c636f64653e28332c20322c20392c2035293c2f636f64653e20726573706563746976656c792e204f6e20746865206f746865722068616e642c203c636f64653e6e702e6d61746d756c3c2f636f64653e0a646f657320776861742049206578706563743a20746865206d6174726978206d756c7469706c792069732062726f6164636173740a6f76657220746865206669727374203c656d3e4e202d20323c2f656d3e2064696d656e73696f6e73206f6620746865207365636f6e6420617267756d656e7420616e640a74686520726573756c7420686173207468652073616d652073686170653a3c2f703e0a0a3c7072653e3c636f64653e2667743b2667743b2667743b206e702e6d61746d756c284d2c205633292e73686170650a28322c20392c2035290a2667743b2667743b2667743b206e702e6d61746d756c284d2c205634292e73686170650a28332c20322c20392c2035290a3c2f636f64653e3c2f7072653e0a0a3c703e536f206d79207175657374696f6e20697320746869733a20776861742069732074686520726174696f6e616c6520666f720a3c636f64653e6e702e646f743c2f636f64653e206265686176696e6720617320697420646f65733f20446f657320697420736572766520736f6d6520706172746963756c617220707572706f73652c0a6f722069732069742074686520726573756c74206f66206170706c79696e6720736f6d652067656e6572616c2072756c653f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["apache-spark","linear-algebra","svd","apache-spark-mllib"]', '0', 128, 0, 2, 1461583074, 1453987034, 35062600, 'http://stackoverflow.com/questions/35062600/native-library-missing-warning-while-running-svd-on-10kx10k-dense-matrix', 'Native library missing warning while running SVD on 10Kx10K dense matrix', 0x3c703e4920616d20646f696e6720535644206f6e20612064656e7365206d6174726978206f662073697a65203130303030783130303030207573696e6720636f6d70757465535644206d6574686f64206f6e20496e6465786564526f774d6174726978206f6e20417063686520537061726b2e205468652072756e206c6f672073686f7773207761726e696e6720617320666f6c6c6f77733c2f703e0a0a3c7072653e3c636f64653e5741524e20424c41533a204661696c656420746f206c6f616420696d706c656d656e746174696f6e2066726f6d3a20636f6d2e6769746875622e666f6d6d696c2e6e65746c69622e4e617469766553797374656d424c41530a0a5741524e20424c41533a204661696c656420746f206c6f616420696d706c656d656e746174696f6e2066726f6d3a20636f6d2e6769746875622e666f6d6d696c2e6e65746c69622e4e6174697665526566424c41530a0a5741524e204c415041434b3a204661696c656420746f206c6f616420696d706c656d656e746174696f6e2066726f6d3a20636f6d2e6769746875622e666f6d6d696c2e6e65746c69622e4e617469766553797374656d4c415041434b0a0a5741524e204c415041434b3a204661696c656420746f206c6f616420696d706c656d656e746174696f6e2066726f6d3a20636f6d2e6769746875622e666f6d6d696c2e6e65746c69622e4e61746976655265664c415041434b0a3c2f636f64653e3c2f7072653e0a0a3c703e4b696e646c79206c6574206d65206b6e6f7720696620746861742061666665637473207468652072756e6e696e672074696d65206f66206d7920737061726b206a6f6220616e642069662079657320686f7720746f20696e7374616c6c207468656d206f6e2043656e744f532e3c2f703e0a0a3c703e5468616e6b7320696e20416476616e63652e2e2e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["linear-algebra","sparse-matrix","numerical-methods"]', '0', 55, 1, 0, 1459495950, 1454906196, 35262413, 'http://stackoverflow.com/questions/35262413/linear-iterative-solver-vs-direct-solver-stability', 'Linear iterative solver vs direct solver stability', 0x3c703e49732069746572617469766520736f6c766572206d6f726520737461626c65207468616e2064697265637420736f6c766572206261736564206f6e204c5520666163746f72697a6174696f6e2e20466f72204c5520626173656420736f6c7665722c20776520616c77617973206861766520636f6e6428412920266c743b20636f6e64284c29202a20636f6e642855292c20736f20666163746f72697a6174696f6e20616d706c6966696573206e756d65726963616c20696e61636375726163792e20536f20696e20746865206576656e74206f6620616e20696c6c20636f6e646974696f6e6564206d617472697820412c2077686f736520636f6e646974696f6e206e756d626572206973206c61726765207468616e20316531302c2077696c6c20697420626520626574746572206f6666207573696e672069746572617469766520736f6c76657220666f722073746162696c69747920616e64206e756d65726963616c2061636375726163793f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","plot","linear-algebra"]', '0', 39, 2, 0, 1457945487, 1456077684, 35539798, 'http://stackoverflow.com/questions/35539798/plotting-vectors-with-same-length', 'Plotting vectors with same length', 0x3c7072653e3c636f64653e66756e6374696f6e20535328412c622c78290a0a73756d203d20412a782b623b0a0a78617869733d6c696e7370616365282d31302c3130293b0a796c6162656c28277927290a786c6162656c28277827290a0a737562706c6f7428312c322c31290a706c6f742878617869732c73756d290a61786973285b302031203020315d290a0a737562706c6f7428312c322c32290a706c6f742878617869732c78290a3c2f636f64653e3c2f7072653e0a0a3c703e492067657420746865206572726f723a3c2f703e0a0a3c626c6f636b71756f74653e0a20203c703e4572726f72207573696e6720706c6f7420566563746f7273206d757374206265207468652073616d65206c656e6774682e3c2f703e0a20200a20203c703e4572726f7220696e20535320286c696e65203132293c2f703e0a20200a20203c703e706c6f742878617869732c73756d293c2f703e0a3c2f626c6f636b71756f74653e0a0a3c703e492067617665207468652041206d617472697820612032783220616e6420766563746f727320622026616d703b207820616e2072616e646f6d2032783120766563746f722e20546865207761792049207365652c2069742773207468652073616d65206c656e6774682e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["java","math","linear-algebra","nonlinear-functions","apache-commons-math"]', '1', 98, 2, 2, 1458028603, 1456753572, 35701194, 'http://stackoverflow.com/questions/35701194/how-to-solve-this-set-of-nonlinear-trigonometric-equations-in-java', 'How to solve this set of nonlinear trigonometric equations in Java?', 0x3c703e4920616d20747279696e6720746f20736f6c766520612073797374656d206f6620747269676f6e6f6d6574726963206571756174696f6e7320696e203c636f64653e4a6176613c2f636f64653e2c20627574204920646f6e2774206b6e6f7720776865726520746f2073746172742e20492776652075736564203c636f64653e636f6d6d6f6e732d6d617468333c2f636f64653e206265666f726520746f20736f6c76652073696d706c65206c696e6561722073657473206f66206571756174696f6e732c2062757420746869732069732061626f7665206d7920686561642e204571756174696f6e73204920616d20747279696e6720746f20736f6c76653a3c2f703e0a0a3c756c3e0a3c6c693e3c703e61202d2065202b20623c656d3e636f73ceb83c7375623e313c2f7375623e202b20633c2f656d3e73696eceb83c7375623e313c2f7375623e202b20642a73696e28ceb83c7375623e323c2f7375623e2bceb83c7375623e313c2f7375623e293d207a203c2f703e3c2f6c693e0a3c6c693e3c703e2820623c656d3e73696eceb83c7375623e313c2f7375623e202b20633c2f656d3e636f73ceb83c7375623e313c2f7375623e202b20642a636f7328ceb83c7375623e323c2f7375623e2dceb83c7375623e313c2f7375623e29202a2073696eceb83c7375623e303c2f7375623e203d20783c2f703e3c2f6c693e0a3c6c693e3c703e2820623c656d3e73696eceb83c7375623e313c2f7375623e202b20633c2f656d3e636f73ceb83c7375623e313c2f7375623e202b20642a636f7328ceb83c7375623e323c2f7375623e2dceb83c7375623e313c2f7375623e29202a2073696eceb83c7375623e303c2f7375623e203d20793c2f703e3c2f6c693e0a3c2f756c3e0a0a3c703e2c20776865726520612c622c632c6420616e6420652061726520636f6e7374616e74732e20496e2070726163746963616c207465726d732c20676976656e20782c20792c20616e64207a2c2049206e65656420746f20736f6c766520666f7220ceb83c7375623e303c2f7375623e2c20ceb83c7375623e313c2f7375623e2c20ceb83c7375623e323c2f7375623e2e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["linear-algebra","lapack","cusolver","qr-decomposition"]', '0', 26, 1, 0, 1457377900, 1457256872, 35825278, 'http://stackoverflow.com/questions/35825278/lapack-orthonormalization-function-for-rectangular-matrix', 'Lapack Orthonormalization Function for Rectangular Matrix', 0x3c703e492077617320776f6e646572696e672069662074686572652077617320612066756e6374696f6e20696e204c617061636b20666f72206f7274686f6e6f726d616c697a696e672074686520636f6c756d6e73206f66206120766572792074616c6c20616e6420736b696e6e79206d61747269782e203c6120687265663d22687474703a2f2f737461636b6f766572666c6f772e636f6d2f7175657374696f6e732f343531353130332f6c617061636b2d6f7274686f6e6f726d616c697a6174696f6e2d66756e6374696f6e223e412073696d696c61722070726576696f7573207175657374696f6e2061736b65642074686973207175657374696f6e2c2070726573756d61626c7920696e2074686520636f6e74657874206f66206120737175617265206d61747269783c2f613e2e204d792073657474696e6720697320617320666f6c6c6f77733a2049206861766520616e204d206279204e206d617472697820412074686174204920616d20747279696e6720746f206f7274686f6e6f726d616c697a652074686520636f6c756d6e73206f662e3c2f703e0a0a3c703e536f2c206d792066697273742074686f756768742077617320746f20646f2061207172206465636f6d706f736974696f6e2e205468652066756e6374696f6e7320666f7220646f696e672061207172206465636f6d706f736974696f6e20696e204c617061636b207365656d20746f2062652064676571726620616e6420646f726d71722e2047726561742e20486f77657665722c206d792070726f626c656d20697320617320666f6c6c6f77733a206d79206d6174726978204120697320736f2074616c6c2c2074686174204920646f6e27742077616e7420746f2061637475616c6c7920636f6d7075746520616c6c206f6620512c2062656361757365206974206973204d206279204d2e20496e20666163742c20492063616e2774206166666f726420746f20696e7374616e746961746520616e204d206279204d206d617472697820617420616c6c20647572696e6720616e79206f66206d7920636f6d7075746174696f6e2028697420776f756c64206e6f742066697420696e206d656d6f7279292e204920776f756c642072617468657220636f6d70757465206a75737420746865206d61747269782074686174203c6120687265663d2268747470733a2f2f656e2e77696b6970656469612e6f72672f77696b692f51525f6465636f6d706f736974696f6e2352656374616e67756c61725f6d6174726978222072656c3d226e6f666f6c6c6f77223e77696b6970656469612063616c6c732051313c2f613e2e20486f77657665722c20492063616e2774207365656d20746f2066696e6420612077617920746f206d616b65207468697320776f726b2e3c2f703e0a0a3c703e546865207765697264207468696e672069732c20746861742049207468696e6b20697420697320706f737369626c652e204e756d70792c20696e20706172746963756c61722c2068617320612066756e6374696f6e203c6120687265663d2268747470733a2f2f6769746875622e636f6d2f6e756d70792f6e756d70792f626c6f622f76312e31302e302f6e756d70792f6c696e616c672f6c696e616c672e7079234c3631372d4c383236222072656c3d226e6f666f6c6c6f77223e6e756d70792e6c696e616c672e71723c2f613e2074686174206170706561727320746f20646f206a75737420746869732e20486f77657665722c206576656e2061667465722072656164696e6720746865697220736f7572636520636f64652c20492063616e277420666967757265206f757420686f77207468657920617265207573696e67206c617061636b2063616c6c7320746f20676574207468697320746f20776f726b2e3c2f703e0a0a3c703e446f20666f6c6b7320686176652069646561733f204920776f756c64207374726f6e676c7920707265666572207468697320746f206f6e6c7920757365206c617061636b2066756e6374696f6e732062656361757365204920616d20686f70696e6720746f20706f7274207468697320636f646520746f204375534f4c56452c2077686963682068617320696d706c656d656e746564207365766572616c206c617061636b2066756e6374696f6e732028696e636c7564696e672064676571726620616e6420646f726d71722920666f7220746865204750552e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28');
INSERT INTO `so_questions` (`tags`, `is_answered`, `view_count`, `answer_count`, `score`, `last_activity_date`, `creation_date`, `question_id`, `link`, `title`, `body`, `has_more`, `quota_max`, `quota_remaining`, `createdAt`, `updatedAt`) VALUES
('["r","matrix","linear-algebra","rcpp","armadillo"]', '1', 83, 1, 2, 1457281000, 1457280402, 35829153, 'http://stackoverflow.com/questions/35829153/is-there-a-faster-way-to-do-this-cholesky-factorization-in-rcpp-c', 'Is there a faster way to do this Cholesky factorization in Rcpp/c++?', 0x3c703e5468697320697320612070726f626c656d2061726f736520696e206d79204d61726b6f7620436861696e204d6f6e7465204361726c6f20284d434d432920616c676f726974686d2e20416e642049206665656c20746869732070726f626c656d20697320717569746520636f6d6d6f6e6c7920656e636f756e746572656420657370656369616c6c7920696e2068696572617263686963616c20476175737369616e206d6f64656c732e2048656e636520697420776f756c642062652067726561742069662074686572652069732061206d756368206d6f726520656666696369656e7420736f6c7574696f6e2e20536f207468652070726f626c656d206973206c696b6520746869733a3c2f703e0a0a3c703e492068617665206d616e7920706f73697469766520696e746567657220766563746f7273203c636f64653e78693c2f636f64653e2c20666f72203c636f64653e693c2f636f64653e2066726f6d203120746f206e2c206120702e732e642e206d6174726978203c636f64653e413c2f636f64653e20616e64206120702e732e642e206d6174726978203c636f64653e423c2f636f64653e2e20466f72206576657279203c636f64653e78693c2f636f64653e20492077616e7420746f20636f6d707574652074686520666f6c6c6f77696e672043686f6c65736b7920666163746f72697a6174696f6e3a3c2f703e0a0a3c626c6f636b71756f74653e0a20203c703e63686f6c28206b726f6e2820646961676d61742820786920292c20412029202b204220293c2f703e0a3c2f626c6f636b71756f74653e0a0a3c703e536f203c636f64653e6b726f6e2820646961676d61742820786920292c20412029202b20423c2f636f64653e2069732074686520636f76617269616e6365206d617472697820666f722061206d756c74697661726961746520476175737369616e20616e6420492077616e7420746f2073616d706c652066726f6d207468697320476175737369616e2068656e6365206e656564207468652043686f6c65736b7920666163746f72697a6174696f6e206f662069742e205468652064696d656e73696f6e20666f72203c636f64653e413c2f636f64653e20616e64203c636f64653e423c2f636f64653e20617265206e6f7420736d616c6c20616e64204920686176652061206c61726765203c636f64653e6e3c2f636f64653e2068656e636520636f6d707574696e67207468652061626f76652043686f6c65736b7920666163746f72697a6174696f6e20666f7220616c6c203c636f64653e78693c2f636f64653e206973207265616c6c792074696d652d636f6e73756d696e672e2042656c6f7720697320746865203c636f64653e526370703c2f636f64653e2066756e6374696f6e20492077726f7465207573696e67203c636f64653e5263707041726d6164696c6c6f3c2f636f64653e3a3c2f703e0a0a3c7072653e3c636f64653e23696e636c75646520266c743b636d6174682667743b0a23696e636c75646520266c743b526d6174682e682667743b0a23696e636c75646520225263707041726d6164696c6c6f2e68220a2f2f205b5b526370703a3a646570656e6473285263707041726d6164696c6c6f295d5d0a7573696e67206e616d6573706163652061726d613b0a7573696e67206e616d65737061636520526370703b0a0a2f2f205b5b526370703a3a6578706f72745d5d0a6d617420746573745f43286d617420412c206d617420422c206d61742058297b0a2020696e74206e5f78203d20582e6e5f636f6c733b0a2020696e7420645f42203d20422e6e5f726f77733b0a20206d61742073616d706c6528645f422c206e5f78293b0a20206d6174206d535f63686f6c5f696e763b0a2020666f722028696e742069203d20303b206920266c743b206e5f783b20692b2b297b0a202020206d535f63686f6c5f696e76203d20696e76287472696d617475282063686f6c286b726f6e28646961676d61742820582e636f6c28692920292c4129202b2042292029293b0a2020202073616d706c652e636f6c286929203d206d535f63686f6c5f696e762a72616e646e28645f42293b0a20207d0a202072657475726e2873616d706c65293b0a7d0a3c2f636f64653e3c2f7072653e0a0a3c703e4920616c736f20746573742074686520636f6d7075746174696f6e616c20656666696369656e6379207573696e672074686520666f6c6c6f77696e6720636f646520636f6d706172696e6720697420746f20697473205220636f756e746572706172743a3c2f703e0a0a3c7072653e3c636f64653e746573745f5220266c743b2d2066756e6374696f6e28412c422c58297b0a20206e5f7820266c743b2d206e636f6c2858290a2020645f4220266c743b2d206e636f6c2842290a202072657320266c743b2d20736170706c7928313a6e5f782c2066756e6374696f6e2878297b0a202020206d535f63686f6c20266c743b2d2063686f6c28206b726f6e65636b657228206469616728585b2c785d292c412029202b204220290a2020202072657475726e28206d535f63686f6c252a2561732e6d61747269782820726e6f726d28645f4229202920290a20207d290a202072657475726e28726573290a7d0a0a232053696d756c61746520446174610a523120266c743b2d206d617472697828726e6f726d2832342a32292c32342c32290a4120266c743b2d205231252a257428523129202b20302e312a64696167283234290a523220266c743b2d206d617472697828726e6f726d283236342a32292c3236342c32290a4220266c743b2d205232252a257428523229202b20302e312a6469616728323634290a5820266c743b2d206d61747269782872706f69732831312a323137382c2035292c31312c32313738290a0a72657320266c743b2d2062656e63686d61726b287265735f5220266c743b2d20746573745f5228412c20422c2058292c0a202020202020202020202020207265735f4320266c743b2d20746573745f4328412c20422c2058292c0a20202020202020202020202020636f6c756d6e733d63282274657374222c20227265706c69636174696f6e73222c2022656c6170736564222c202272656c617469766522292c0a202020202020202020202020206f726465723d2272656c6174697665222c0a202020202020202020202020207265706c69636174696f6e73203d2032290a3c2f636f64653e3c2f7072653e0a0a3c703e416e642074686520726573756c7420697320617320666f6c6c6f77733c2f703e0a0a3c7072653e3c636f64653e2667743b207072696e742872657329200a2020202020202020202020202020202020202020202074657374207265706c69636174696f6e7320656c61707365642072656c61746976650a31207265735f5220266c743b2d20746573745f5228412c20422c20582920202020202020202020202032202031382e39323020202020312e3030300a32207265735f4320266c743b2d20746573745f4328412c20422c20582920202020202020202020202032202032302e37323420202020312e3039350a3c2f636f64653e3c2f7072653e0a0a3c703e41732063616e206265207365656e2c20612073696e676c652072756e20697320617070726f78696d6174656c79203130207365636f6e642c20616e6420746869732069732073696d706c79206e6f74206665617369626c6520696e2061204d434d4320616c676f726974686d2e20416c736f2c2073696e636520746865203c636f64653e63686f6c28293c2f636f64653e20646f6d696e617465732074686520636f6d7075746174696f6e616c20636f6d706c65786974792c2074686520696d70726f76656d656e74206f66207573696e67203c636f64653e526370703c2f636f64653e206f7665722070757265203c636f64653e523c2f636f64653e206973207472697669616c2e20427574206d61796265204920646964206e6f7420777269746520746865206d6f737420656666696369656e7420636f64653f20536f20616e79206164766963653f3c2f703e0a0a3c703e53696e636520746865206d617472697820696e73696465203c636f64653e63686f6c28293c2f636f64653e2069732076657279207374727563747572656420616e6420746865206f6e6c79207468696e6720746861742069732076617279696e67206973203c636f64653e78693c2f636f64653e2c206d6179626520746865726520697320736f6d6520616c676562726120747269636b2074686174204920646f206e6f74206b6e6f7720746861742063616e20736f6c7665207468697320656666696369656e746c793f2049206861766520706f7374656420746869732061732061206c696e6561722d616c6765627261207175657374696f6e20756e646572203c7374726f6e673e4d617468656d61746963733c2f7374726f6e673e20616e64206865726520697320746865203c6120687265663d22687474703a2f2f6d6174682e737461636b65786368616e67652e636f6d2f7175657374696f6e732f313638343937382f6661737465722d63686f6c65736b792d666163746f72697a6174696f6e2d6f662d646961672d6d6174686266782d692d6f74696d65732d6d6174686266612d6d6174223e6c696e6b3c2f613e2e20556e666f7274756e6174656c7920736f2066617220492068617665206e6f7420726563656976656420616e7920736f6c7574696f6e2c2070656f706c6520646f20706f696e74206f75742074686174207468697320697320656d62617272617373696e676c7920706172616c6c656c2e3c2f703e0a0a3c703e416e7920616476696365206f6e20636f64652f616c67656272612077696c6c2062652068656c7066756c21205468616e6b7320616865616420666f7220796f75722074696d652e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["linear-algebra","edge-detection","supervised-learning","patching"]', '0', 22, 0, 0, 1457282605, 1457282605, 35829547, 'http://stackoverflow.com/questions/35829547/overcompleteness-edge-detection-patching', 'Overcompleteness edge detection / patching', 0x3c703e4920616d20686176696e672074726f75626c657320756e6465727374616e64696e672074686520646566696e6974696f6e73206f66206f76657220636f6d706c6574656e6573733a20496e20616e206f766572636f6d706c6574652062617369732c20746865206e756d626572206f6620626173697320766563746f72732069732067726561746572207468616e207468652064696d656e73696f6e616c697479206f662074686520696e7075742c20616e642074686520726570726573656e746174696f6e206f6620616e20696e707574206973206e6f74206120756e6971756520636f6d62696e6174696f6e206f6620626173697320766563746f72732e3c2f703e0a0a3c703e536f206c65747320736179207765206861766520626173697320766563746f72733a205b28302c302c312c31292c28302c312c312c30292c28312c312c302c30295d3c2f703e0a0a3c703e536f20746865206e756d626572206f6620626173697320766563746f727320746f74616c7320746f20332e3c2f703e0a0a3c703e54686973206d65616e7320746861742074686520696e7075742064696d656e73696f6e206d75737420626520266c743b20333f3c2f703e0a0a3c703e4d79206d61696e20676f616c20697320746f2073656520686f7720746869732072656c6174657320746f20696d616765207061746368696e67207769746820737061727365206f766572636f6d706c65746520636f64652e3c2f703e0a0a3c703e4865726520697320746865207468657369732074686174204920616d20617474656d7074696e6720746f206469676573743a203c6120687265663d22687474703a2f2f747469632e756368696361676f2e6564752f7e677265676f72792f7468657369732f74686573697343686170746572362e706466222072656c3d226e6f666f6c6c6f77223e687474703a2f2f747469632e756368696361676f2e6564752f7e677265676f72792f7468657369732f74686573697343686170746572362e7064663c2f613e205061676520372074616c6b732061626f75742074686520737061727365206f766572636f6d706c65746520636f64652e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","arrays","algorithm","numpy","linear-algebra"]', '1', 70, 1, 9, 1458539678, 1457334607, 35838037, 'http://stackoverflow.com/questions/35838037/efficient-reduction-of-multiple-tensors-in-python', 'Efficient reduction of multiple tensors in Python', 0x3c703e49206861766520666f7572206d756c746964696d656e73696f6e616c2074656e736f7273203c636f64653e765b692c6a2c6b5d3c2f636f64653e2c203c636f64653e615b692c732c6c5d3c2f636f64653e2c203c636f64653e775b6a2c732c742c6d5d3c2f636f64653e2c203c636f64653e785b6b2c742c6e5d3c2f636f64653e20696e204e756d70792c20616e64204920616d20747279696e6720746f20636f6d70757465207468652074656e736f72203c636f64653e7a5b6c2c6d2c6e5d3c2f636f64653e20676976656e2062793a3c2f703e0a0a3c703e3c636f64653e7a5b6c2c6d2c6e5d203d2073756d5f7b692c6a2c6b2c732c747d20765b692c6a2c6b5d202a20615b692c732c6c5d202a20775b6a2c732c742c6d5d202a20785b6b2c742c6e5d3c2f636f64653e3c2f703e0a0a3c703e416c6c207468652074656e736f7273206172652072656c61746976656c7920736d616c6c2028736179206c65737320746861742033326b20656c656d656e747320696e20746f74616c292c20686f77657665722049206e65656420746f20706572666f726d207468697320636f6d7075746174696f6e206d616e792074696d65732c20736f204920776f756c64206c696b65207468652066756e6374696f6e20746f2068617665206173206c6974746c65206f7665726865616420617320706f737369626c652e3c2f703e0a0a3c703e4920747269656420746f20696d706c656d656e74206974207573696e67203c636f64653e6e756d70792e65696e73756d3c2f636f64653e206c696b6520746869733a3c2f703e0a0a3c7072653e3c636f64653e7a203d206e702e65696e73756d2827696a6b2c69736c2c6a73746d2c6b746e272c20762c20612c20772c2078290a3c2f636f64653e3c2f7072653e0a0a3c703e62757420697420776173207665727920736c6f772e204920616c736f2074726965642074686520666f6c6c6f77696e672073657175656e6365206f66203c636f64653e6e756d70792e74656e736f72646f743c2f636f64653e2063616c6c733a3c2f703e0a0a3c7072653e3c636f64653e7a203d206e702e7a65726f732828612e73686170655b2d315d2c772e73686170655b2d315d2c782e73686170655b2d315d29290a666f72207320696e2072616e676528612e73686170655b315d293a0a2020666f72207420696e2072616e676528782e73686170655b315d293a0a20202020726573203d206e702e74656e736f72646f7428762c20615b3a2c732c3a5d2c2028302c3029290a20202020726573203d206e702e74656e736f72646f74287265732c20775b3a2c732c742c3a5d2c2028302c3029290a202020207a202b3d206e702e74656e736f72646f74287265732c20785b3a2c732c3a5d2c2028302c3029290a3c2f636f64653e3c2f7072653e0a0a3c703e696e73696465206f66206120646f75626c6520666f72206c6f6f7020746f2073756d206f766572203c636f64653e733c2f636f64653e20616e64203c636f64653e743c2f636f64653e2028626f7468203c636f64653e733c2f636f64653e20616e64203c636f64653e743c2f636f64653e20617265207665727920736d616c6c2c20736f2074686174206973206e6f7420746f6f206d756368206f6620612070726f626c656d292e205468697320776f726b6564206d756368206265747465722c20627574206974206973207374696c6c206e6f742061732066617374206173204920776f756c64206578636570742e2049207468696e6b2074686973206d61792062652062656361757365206f6620616c6c20746865206f7065726174696f6e732074686174203c636f64653e74656e736f72646f743c2f636f64653e206e6565647320746f20706572666f726d20696e7465726e616c6c79206265666f72652074616b696e67207468652061637475616c2070726f647563742028652e672e207065726d7574696e67207468652061786573292e3c2f703e0a0a3c703e492077617320776f6e646572696e672069662074686572652069732061206d6f726520656666696369656e742077617920746f20696d706c656d656e742074686973206b696e64206f66206f7065726174696f6e7320696e204e756d70792e204920616c736f20776f756c646e2774206d696e6420696d706c656d656e74696e672074686973207061727420696e20437974686f6e2c206275742049276d206e6f742073757265207768617420776f756c642062652074686520726967687420616c676f726974686d20746f207573652e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["time-complexity","linear-algebra"]', '0', 32, 2, 1, 1457735811, 1457392167, 35855978, 'http://stackoverflow.com/questions/35855978/is-omn-in-on2', 'Is O(mn) in O(n^2)?', 0x3c703e53696d706c65207175657374696f6e2e20576f726b696e67207769746820616e206d2078206e206d617472697820616e642049276d20646f696e6720736f6d65204f286d6e29206f7065726174696f6e732e204d79207175657374696f6e206973206966204f286d6e2920697320696e204f286e5e32292e204c6f6f6b696e67206174207468652057696b697065646961206f6e20626967204f204920776f756c64207468696e6b20736f20627574204927766520616c77617973206265656e207072657474792062616420617420636f6d706c657869747920626f756e647320736f20492077617320686f70696e6720736f6d656f6e6520636f756c6420636c61726966792e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","arrays","numpy","linear-algebra"]', '1', 62, 3, 0, 1457892838, 1457882837, 35972103, 'http://stackoverflow.com/questions/35972103/numpy-dot-products-of-3-matrixes', 'numpy dot products of 3 matrixes', 0x3c703e49276d206c6f6f6b696e6720746f20636f6d62696e652033206d6174726978657320696e206120706172746963756c6172207761792c2049276d207375726520746869732077696c6c206265206561737920666f7220616e796f6e65207573656420746f207573696e67206e756d70793a3c2f703e0a0a3c7072653e3c636f64653e77203d206e702e6172726179285b5b2d302e34363733333536372c2020302e33383836343733325d2c0a20202020202020202020202020202020205b2d302e34323433363836372c202d312e30383736303039385d2c0a20202020202020202020202020202020205b2d312e30313131383734312c2020302e39393039363436365d5d292020200a0a61203d206172726179285b5b20302e36333132373336382c2020302e30303136373737352c2020302e39373831323238345d5d290a0a64203d205b5b2d302e34333235323939375d5d202320616c74686f7567682064206973206c656e677468203120696e2074686973206578616d706c652c20697473206f6674656e202667743b3120696e206c656e67746820616e6420636f6465206e6565647320746f2062652061626c6520746f2067656e6572616c697a652c2074686572652077696c6c20616c77617973206265207468652073616d65206c656e677468206f6620636f6c7320616e6420616e6420617272617973206265747765656e206120616e6420772c20692e6520696e2074686973206578616d706c652074686572652061726520332061727261797320696e207720616e642031206f66206c656e677468203320696e20612028706c6561736520657863757365206d79207465726d696e6f6c6f67792c204920616d206e657720746f206c696e65617220616c6765627261292e0a3c2f636f64653e3c2f7072653e0a0a3c703e4920616d20747279696e6720746f20636f6d62696e65207468656d20746f2066696e6420647820736f20746861743a3c2f703e0a0a3c7072653e3c636f64653e647831203d205b2d302e34363733333536372c2020302e33383836343733325d202a20302e3633313237333638202a202d302e34333235323939370a647832203d205b2d302e34323433363836372c202d312e30383736303039385d202a20302e3030313637373735202a202d302e34333235323939370a647833203d205b2d312e30313131383734312c2020302e39393039363436365d202a20302e3937383132323834202a202d302e34333235323939370a3c2f636f64653e3c2f7072653e0a0a3c703e69662064206973203e206c656e67746820312c20652e672e20643d206e702e6172726179285b5b2d302e34333235323939375d2c5b302e38373530303030395d5d29207468656e3a3c2f703e0a0a3c7072653e3c636f64653e6478315f31203d205b2d302e34363733333536372c2020302e33383836343733325d202a20302e3633313237333638202a202d302e34333235323939370a6478325f31203d205b2d302e34323433363836372c202d312e30383736303039385d202a20302e3030313637373735202a202d302e34333235323939370a6478335f31203d205b2d312e30313131383734312c2020302e39393039363436365d202a20302e3937383132323834202a202d302e34333235323939370a6478315f32203d205b2d302e34363733333536372c2020302e33383836343733325d202a20302e3633313237333638202a20302e38373530303030390a6478325f32203d205b2d302e34323433363836372c202d312e30383736303039385d202a20302e3030313637373735202a20302e38373530303030390a6478335f32203d205b2d312e30313131383734312c2020302e39393039363436365d202a20302e3937383132323834202a20302e38373530303030390a3c2f636f64653e3c2f7072653e0a0a3c703e4920747269656420616c6c206f66207468657365206275742077697468207365656d696e676c79206e6f20737563636573732c20756e6c6573732049276d206d697373696e6720736f6d657468696e673f3c2f703e0a0a3c7072653e3c636f64653e6f7574203d206e702e646f7428642c207729202a2061200a6f7574203d206e702e646f7428642c207729202a20612e54200a6f7574203d206e702e646f7428642c20772e5429202a2061200a6f7574203d206e702e646f7428612c207729202a20640a6f7574203d206e702e646f7428612c20772e5429202a20640a3c2f636f64653e3c2f7072653e0a0a3c703e492067657420616e206572726f7220696e206d616e792063617365733a3c2f703e0a0a3c7072653e3c636f64653e56616c75654572726f723a207368617065732028332c312920616e642028332c3229206e6f7420616c69676e65643a2031202864696d20312920213d2033202864696d2030290a3c2f636f64653e3c2f7072653e0a0a3c703e616e7920706f696e7465727320746f2068656c7020736f6c7665207468697320776f756c64206265206d7563682061707072656369617465643c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["java","c++","math","linear-algebra","simplex"]', '1', 44, 1, 2, 1457941051, 1457901243, 35975471, 'http://stackoverflow.com/questions/35975471/get-vertexes-of-object-by-simplex-method', 'Get vertexes of object by simplex method', 0x3c703e492764206c696b6520746f2066696e642061207665727465786573206f66206f626a656374732c2077686963682069732064657465726d696e656420627920736f6d65206571756174696f6e732e0a466f72206578616d706c652e3c2f703e0a0a3c7072653e3c636f64653e4571313a2020203278202b2079202b20207a20266c743b3d2031323b0a4571323a2020202078202b20792020202020202667743b3d2032333b0a4571333a2020202078202b2079202b20207a20266c743b3d2031303b0a3c2f636f64653e3c2f7072653e0a0a3c703e416e642069742773206c696d697465642062793c2f703e0a0a3c7072653e3c636f64653e78202667743b3d20300a79202667743b3d20300a7a203d2667743b20300a3c2f636f64653e3c2f7072653e0a0a3c703e416e6420697420676976657320612068657861686564726f6e2e20492077616e7420746f206b6e6f7720706f736974696f6e73206f662076657274657865732c2077686963682074686973206f626a65637420697320637265617465642066726f6d2e203c2f703e0a0a3c703e497320746865206f6e6c792077617920746f20646f207468697320697320746f206d616b65206120636f646520746861742077696c6c20636865636b20616c6c20706f737369626c6520766172696174696f6e73206f662074686973206571756174696f6e733f3c2f703e0a0a3c7072653e3c636f64653e6172726179203d20617272617920776974682074686973206571756174696f6e7320283620656c656d656e7473290a0a666f72282069203d20313b206920266c743b3d2061727261792e6c656e6768743b20692b2b20297b0a20666f7228206a203d20313b206a20266c743b3d2061727261792e6c656e6768743b206a2b2b20297b0a2020666f7228206b203d20313b206b20266c743b3d2061727261792e6c656e6768743b206b2b2b20297b0a202020202f2f616e6420746865726520636865636b20697320736f6c7665206f66206120766172696174696f6e20697320706f737369626c650a20207d2020200a207d202020200a7d0a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","python-2.7","matrix","vector","linear-algebra"]', '0', 11, 1, 0, 1457906605, 1457905110, 35976192, 'http://stackoverflow.com/questions/35976192/vector-changes-to-matrix-at-computation', 'vector changes to matrix at computation', 0x3c703e546869732069732070726f6261626c79206120726f6f6b6965206d697374616b6520746861742049276d206d697373696e6720736f6d6577686572652062757420492063616e277420666f7220746865206c696665206f66206d652066696e6420616e797468696e672072656c6174656420746f206d792070726f626c656d206f6e20746865207765622e3c2f703e0a0a3c703e492068617665206120766563746f72203c636f64653e62313c2f636f64653e206f662073697a65203c636f64653e3520627920313c2f636f64653e2c20616e642069206861766520616e6f7468657220766563746f72203c636f64653e64736462313c2f636f64653e20776869636820697320616c736f203c636f64653e3520627920313c2f636f64653e2e3c2f703e0a0a3c703e5768656e2049207772697465203c636f64653e6231202b3d207461752a64736462313c2f636f64653e20492067657420746865206572726f7220226e6f6e2d62726f61646361737461626c65206f7574707574206f706572616e6420776974682073686170652028352c312920646f65736e2774206d61746368207468652062726f6164636173742073686170652028352c3529223c2f703e0a0a3c703e4e6f772c206e6f206f6e65206f662074686573652069732061206d61747269782e2049206576656e2064656c657465642074686973206c696e6520616e6420696e7374656164207072696e74656420626f74682073697a657320666f7220623120616e642064736462312e20466f72206231206974207072696e7465642028352c312920616e6420666f72206473646231206974207072696e7465642028352c292e20746175206973206a7573742061207363616c61722e3c2f703e0a0a3c703e576879206973206974206368616e67696e6720647364623120746f206120352062792035206d6174726978207768656e20636f6d707574696e673f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","r","signal-processing","linear-algebra","noise"]', '0', 36, 0, 0, 1457970702, 1457970702, 35992141, 'http://stackoverflow.com/questions/35992141/signal-processing-remove-noise-for-a-series-of-spectra', 'Signal processing-remove noise for a series of spectra', 0x3c703e4920616d2061206368656d69737420616e64206d65617375726564206120736572696573206f662073706563747261206f66206f6e6520636f6d706f756e6420756e64657220696e6372656173696e672074656d70657261747572652e20282d3230302064656772656520746f203020646567726565292e20546865207368617065206f66207370656374726120697320766572792073696d696c617220617420646966666572656e742074656d70657261747572652e20546865206f6e6c7920646966666572656e63652069732074686520696e74656e736974793a206174206869676865722074656d70657261747572652074686520696e74656e73697479206973206c6f7765722e200a4d792070726f626c656d20697320617420686967682074656d70657261747572652c20652e672e2030206465677265652c20746865207265616c207369676e616c277320696e74656e7369747920697320717569746520636c6f736520746f20746865206261636b67726f756e64206e6f697365277320616d706c69747564652c207768696368206d616b6520746865207370656374726120617420686967682074656d70657261747572652076657279206e6f6973792e204920747269656420736f6d652073696d706c6520736d6f6f7468696e67206d6574686f64206275742074686520726573756c74206973206e6f7420676f6f642e0a546865206e6f697365206973206d756368206c657373206166666563746564206279207468652074656d7065726174757265206368616e6765207468616e20746865207265616c207369676e616c287768696368206d65616e732077652063616e20617373756d6520746865206261636b67726f756e64206e6f69736520646f65736e2774206368616e676520746f6f206d756368292e20546875732c204920776f6e64657220697320746865726520616e79206d6574686f6420746861742063616e2072656d6f766520746865206e6f697365286261636b67726f756e6429207573696e672074686520736572696573206f662073706563747261204920686176652c2073696e63652074686579207368617265207468652022636f6d6d6f6e22206261636b67726f756e64206e6f6973652e203c2f703e0a0a3c703e416e7920696e666f726d6174696f6e2028652e672e206e616d65206f66206d6574686f642c20746f6f6c7320696e20707974686f6e206f7220522c207265666572656e6365292077696c6c2062652068656c7066756c2e205468616e6b7320666f7220796f75722068656c70213c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matrix","row","linear-algebra"]', '0', 6, 0, 0, 1457982202, 1457982202, 35995919, 'http://stackoverflow.com/questions/35995919/incremental-sparse-row-echelon-matrix', 'Incremental sparse row echelon matrix', 0x3c703e417373756d6520796f7520686176652061206c696e6561722073797374656d20636f6e73697374696e67206f6620616e20612d7072696f726920756e6b6e6f776e206e756d626572206f6620737061727365206571756174696f6e732e2054686520676f616c20697320746f20646566696e6520746865206d65616e696e67206f662074686520696e6372656d656e74616c202261646420616e206571756174696f6e22206f7065726174696f6e3a3c2f703e0a0a3c756c3e0a3c6c693e54686520696e707574206973207468652063757272656e742073797374656d20696e20726f772d656368656c6f6e20666f726d20616e642061206e6577206571756174696f6e20726570726573656e74656420627920612073706172736520766563746f72206f6620636f656666696369656e747320666f72206561636820756e6b6e6f776e7320616e64206120636f6e7374616e742e2054686520766563746f722063616e206861766520616e206172626974726172792064696d656e73696f6e202868656e6365207468652073797374656d2063616e2067726f7720696e2073697a6529203c2f6c693e0a3c6c693e546865206f757470757420697320746865206e65772073797374656d20696e20726f7720656368656c6f6e20666f726d2e3c2f6c693e0a3c2f756c3e0a0a3c703e496e206f7264657220746f206d61696e7461696e2074686520726f7720656368656c6f6e20666f726d2c206d79206964656120697320746f20646f2074686520666f6c6c6f77696e673a3c2f703e0a0a3c756c3e0a3c6c693e50726f63656564207468726f75676820746865206e6f6e2d7a65726f20656e7472696573206f662074686520766563746f7220696e206f726465723a0a0a3c756c3e0a3c6c693e6966207468652073797374656d20616c726561647920636f6e7461696e73206120726f772077697468207468697320656c656d656e74206265696e6720746865206c656164696e6720656c656d656e743a0a0a3c756c3e0a3c6c693e6d756c7469706c7920746865206578697374696e6720726f7720776974682074686520636f656666696369656e7420666f756e6420696e2074686520766563746f722c2073756274726163742074686520726573756c742066726f6d2074686520766563746f7220616e6420737461727420616761696e3c2f6c693e0a3c2f756c3e3c2f6c693e0a3c6c693e656c7365206469766964652074686520766563746f722062792074686520636f656666696369656e7420616e64206164642061732061206e657720726f7720746f20746865206d61747269783c2f6c693e0a3c2f756c3e3c2f6c693e0a3c2f756c3e0a0a3c703e4973207468697320616c676f726974686d20636f72726563743f204469642049206d69737320616e7920636f726e65722063617365733f2049732074686572652061206d6f726520656666696369656e742c2063616e6f6e6963616c2076617269616e743f203c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","matrix","linear-algebra"]', '1', 46, 1, 0, 1457988238, 1457985101, 35996761, 'http://stackoverflow.com/questions/35996761/matlab-creating-matrix-with-multiple-diagonals-using-diag', 'MATLAB: creating matrix with multiple diagonals using diag()', 0x3c703e49206e65656420746f206d616b652061206d61747269782074686174206c6f6f6b73206c696b652074686973206279207573696e67206469616720636f6d6d616e642066726f6d204d41544c41422e3c2f703e0a0a3c7072653e3c636f64653e202020205b302020302020372020302020323b0a2020202020302020302020302020332020303b0a2020202020302020302020302020302020313b0a2020202020302020302020302020302020303b0a2020202020302020302020302020302020305d0a3c2f636f64653e3c2f7072653e0a0a3c703e49206669677572656420686f7720746f20646f3c2f703e0a0a3c7072653e3c636f64653e202020205b302020302020372020302020303b0a2020202020302020302020302020332020303b0a2020202020302020302020302020302020313b0a2020202020302020302020302020302020303b0a2020202020302020302020302020302020305d0a3c2f636f64653e3c2f7072653e0a0a3c703e4275742063616e2774207365656d7320746f20696e7365727420322061742074686520666972737420726f772f666966746820636f6c756d6e2e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["normalization","linear-algebra","raytracing"]', '1', 63, 1, 0, 1458088714, 1458023433, 36004155, 'http://stackoverflow.com/questions/36004155/finding-normal-of-sphere-in-ray-tracer-porgram', 'Finding Normal of Sphere in Ray Tracer Porgram', 0x3c703e49276d20776f726b696e67206f6e2061207261792074726163657220666f72207370686572657320616e642049276d20747279696e6720746f20696d706c656d656e7420616e20696c6c756d696e6174652066756e6374696f6e20746f2063616c63756c61746520746865206c6967687420696e74656e7369747920706572207261792e2049276d2063757272656e746c7920737475636b206f6e2063616c63756c6174696e67207468652064696666757365207265666c656374696f6e3a3c2f703e0a0a3c703e476976656e20612072617920522c20612073706865726520532c206120706f696e742050207768657265205220696e746572736563747320532c20616e642061206c6967687420736f75726365204c3c2f703e0a0a3c703e4920756e6465727374616e64207468617420746f20757365204c616d626572742773204c617720746f2063616c63756c6174652064696666757365207265666c656374696f6e2c2049206e65656420746865206c6967687420646972656374696f6e20766563746f7220616e6420746865206e6f726d616c20766563746f722e203c2f703e0a0a3c703e49206b6e6f7720492063616e2067657420746865206c6967687420646972656374696f6e20766563746f722062792063616c63756c6174696e67204c202d20502e2049276d20737475636b206e6f77206f6e2063616c63756c6174696e6720746865206e6f726d616c2e203c2f703e0a0a3c703e49206b6e6f772049206e65656420746f207573652074686520696e7665727365206f66207468652053207472616e73666f726d206d617472697820627574204920646f6e277420756e6465727374616e6420636f6e6365707475616c6c79207768617420696e76657274696e67207468652053207472616e73666f726d206d617472697820646f657320736f20492077617320686f70696e6720746f2067657420736f6d652067756964616e6365206f6e20686f7720746f20646f20746869732e203c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["algorithm","linear-algebra","sparse-matrix"]', '1', 21, 1, 0, 1458112116, 1458051244, 36013785, 'http://stackoverflow.com/questions/36013785/how-to-find-non-zero-elements-of-matrix-at-a-where-a-is-sparse-crs-ccs-matr', 'How to find non-zero elements of matrix A^T * A where A is sparse (crs/ccs) matrix?', 0x3c703e492068617665207665727920737061727365206c61726765206d6174726978203c636f64653e413c2f636f64653e20283c636f64653e413c2f636f64653e2069732061203c6120687265663d2268747470733a2f2f656e2e77696b6970656469612e6f72672f77696b692f5370617273655f6d617472697823436f6d707265737365645f7370617273655f726f775f2e32384353522e32435f4352535f6f725f59616c655f666f726d61742e3239222072656c3d226e6f666f6c6c6f77223e636f6d7072657373656420726f772073746f726167653c2f613e293c2f703e0a0a3c703e492077616e7420746f20706572666f726d20736f6d6520636f6d7075746174696f6e73206f766572203c636f64653e42203d20415e54202a20413c2f636f64653e206d61747269782e20427574203c636f64653e423c2f636f64653e2073686f756c642062652073706172736520746f6f20647565207370617273697479206f66203c636f64653e413c2f636f64653e2e3c2f703e0a0a3c703e486f7720692063616e20636f6d7075746520226d61736b22206f66203c636f64653e423c2f636f64653e3f20224d61736b2220697320636f6c756d6e20696e646963657320616e6420726f77206f666673657473206f6620636f6d7072657373656420726f772073746f726167652e3c2f703e0a0a3c703e4f6e6c792077617920776869636820692073656520697320746f2069746572617465206f76657220726f777320696e206e6573746564206c6f6f707320286279206920616e64206a2920616e6420636865636b2028692c206a2920656c656d656e74206f662042206173206e6f6e2d7a65726f20696620726f7773206920616e64206a206f6620412068617665206174206c65617374206f6e6520636f6d6d6f6e206e6f6e2d7a65726f20636f6c756d6e2e204275742069207468696e6b20697320736c6f772e3c2f703e0a0a3c703e505320536f72727920666f72206d7920706f6f7220656e676c6973683c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["php","linear-algebra","algebra"]', '1', 34, 1, 0, 1458112484, 1458076513, 36022304, 'http://stackoverflow.com/questions/36022304/phps-gauss-jordan-elimination-code', 'php&#39;s Gauss-Jordan Elimination code', 0x3c703e492764206c696b6520746f207772697465206120636f646520746f206d616b6520676175737369616e20656c696d696e6174696f6e2c206920676f7420746869733a3c2f703e0a0a3c7072653e3c636f64653e66756e6374696f6e2067617573732824412c20247829207b0a0a20202020666f72202824693d303b20246920266c743b20636f756e74282441293b2024692b2b29207b0a202020202020202024415b24695d5b5d203d2024785b24695d3b0a202020207d0a20202020246e203d20636f756e74282441293b0a0a20202020666f72202824693d303b20246920266c743b20246e3b2024692b2b29207b0a2020202020202020246d6178456c203d206162732824415b24695d5b24695d293b0a2020202020202020246d6178526f77203d2024693b0a2020202020202020666f722028246b3d24692b313b20246b20266c743b20246e3b20246b2b2b29207b0a202020202020202020202020696620286162732824415b246b5d5b24695d29202667743b20246d6178456c29207b0a20202020202020202020202020202020246d6178456c203d206162732824415b246b5d5b24695d293b0a20202020202020202020202020202020246d6178526f77203d20246b3b0a2020202020202020202020207d0a20202020202020207d0a0a0a2020202020202020666f722028246b3d24693b20246b20266c743b20246e2b313b20246b2b2b29207b0a20202020202020202020202024746d70203d2024415b246d6178526f775d5b246b5d3b0a20202020202020202020202024415b246d6178526f775d5b246b5d203d2024415b24695d5b246b5d3b0a20202020202020202020202024415b24695d5b246b5d203d2024746d703b0a20202020202020207d0a0a2020202020202020666f722028246b3d24692b313b20246b20266c743b20246e3b20246b2b2b29207b0a2020202020202020202020202463203d202d24415b246b5d5b24695d2f24415b24695d5b24695d3b0a202020202020202020202020666f722028246a3d24693b20246a20266c743b20246e2b313b20246a2b2b29207b0a202020202020202020202020202020206966202824693d3d246a29207b0a202020202020202020202020202020202020202024415b246b5d5b246a5d203d20303b0a202020202020202020202020202020207d20656c7365207b0a202020202020202020202020202020202020202024415b246b5d5b246a5d202b3d202463202a2024415b24695d5b246a5d3b0a202020202020202020202020202020207d0a2020202020202020202020207d0a20202020202020207d0a202020207d0a0a202020202478203d2061727261795f66696c6c28302c20246e2c2030293b0a20202020666f72202824693d246e2d313b202469202667743b202d313b2024692d2d29207b0a202020202020202024785b24695d203d2024415b24695d5b246e5d2f24415b24695d5b24695d3b0a2020202020202020666f722028246b3d24692d313b20246b202667743b202d313b20246b2d2d29207b0a20202020202020202020202024415b246b5d5b246e5d202d3d2024415b246b5d5b24695d202a2024785b24695d3b0a20202020202020207d0a202020207d0a6966202821696e5f61727261792866616c73652c2024782c207472756529297b0a2069662824785b305d202667743b3d20302026616d703b26616d703b2024785b315d202667743b3d20302026616d703b26616d703b2024785b325d202667743b3d2030297b0a72657475726e2024783b0a7d0a7d0a0a7d0a3c2f636f64653e3c2f7072653e0a0a3c703e45766572797468696e67206973204f4b20627574207768656e2069207075742076616c756573206c696b6520746869733a3c2f703e0a0a3c7072653e3c636f64653e2441203d20617272617928617272617928312c312c30292c617272617928332c352c34292c617272617928312c302c3029293b0a2478203d20617272617928322c33302c30293b0a0a0a0a7c203120312030207c202032207c200a7c203120302030207c202030207c0a7c203320352034207c203330207c0a3c2f636f64653e3c2f7072653e0a0a3c703e54686520726573756c742073686f756c642062653a2028302c322c35292c20627574206d792066756e6374696f6e2072657475726e73206e756c6c2e203c2f703e0a0a3c703e4920646f6e2774206b6e6f7720776861742069732077726f6e6720776974682069742e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","math","linear-algebra"]', '0', 77, 1, 4, 1458224343, 1458218787, 36060975, 'http://stackoverflow.com/questions/36060975/how-to-compute-smallest-non-zero-eigenvalue', 'How to compute smallest non-zero eigenvalue', 0x3c703e476976656e206120706f7369746976652073656d692d646566696e697465206d6174726978204d204920776f756c64206c696b6520746f2066696e642069747320736d616c6c657374206e6f6e2d7a65726f20656967656e76616c75652e20496e20707974686f6e207468697320636f6465206c6f6f6b732074656d7074696e673c2f703e0a0a3c7072653e3c636f64653e696d706f7274206e756d7079206173206e700a28772c7629203d206e702e6c696e616c672e65696768284d290a6d696e77203d206e702e616d696e2877290a696620286e702e6973636c6f7365286d696e772c302920616e64206d696e77202667743b2030293a0a202020207072696e74204d2c206d696e770a3c2f636f64653e3c2f7072653e0a0a3c703e4865726520697320616e206578616d706c6520736d616c6c20696e707574206d61747269782e3c2f703e0a0a3c7072653e3c636f64653e5b2036202032202d34202d325d0a5b2032202036202030202d365d0a5b2d342020302020362020305d0a5b2d32202d362020302020365d0a3c2f636f64653e3c2f7072653e0a0a3c703e556e666f7274756e6174656c7920696620796f7520747279207468697320796f752077696c6c20676574203c636f64653e382e3930323338343033383238652d31363c2f636f64653e2e20204920646f6e2774206b6e6f7720696e2067656e6572616c20686f7720746f2074656c6c206966207665727920736d616c6c206e756d6265727320617265206d65616e7420746f206265207a65726f206f72206e6f742e3c2f703e0a0a3c703e486f772063616e20796f752066696e642074686520736d616c6c657374206e6f6e2d7a65726f20656967656e76616c7565206f662061206d61747269782028616e642062652073757265206974207265616c6c79206973206e6f6e2d7a65726f293f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c#","linear-algebra","mathnet"]', '0', 25, 0, 0, 1458220231, 1458220231, 36061535, 'http://stackoverflow.com/questions/36061535/how-to-generate-sub-matrix-from-matrix-with-headers-and-list-of-headers', 'How to generate sub matrix from matrix with headers and list of headers?', 0x3c703e49206861766520612074797065203c636f64653e53796d6d65747269634d617472697857697468486561646572733c2f636f64653e207769746820612067656e6572616c20737472756374757265206c696b652074686973203c2f703e0a0a3c7072653e3c636f64653e7075626c696320636c6173732053796d6d65747269634d61747269785769746848656164657273266c743b542667743b200a202020207b0a20202020202020207072697661746520726561646f6e6c792044696374696f6e617279266c743b542c20696e742667743b205f636f6c756d6e4865616465727357697468496e6469636573203d200a202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020206e65772044696374696f6e617279266c743b542c20696e742667743b28293b0a20202020202020207072697661746520726561646f6e6c792044696374696f6e617279266c743b542c20696e742667743b205f726f774865616465727357697468496e6469636573203d200a202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020206e65772044696374696f6e617279266c743b542c20696e742667743b28293b0a20202020202020207072697661746520726561646f6e6c79204d6174726978266c743b646f75626c652667743b205f646174613b0a0a20202020202020207075626c6963204d61747269785769746848656164657273280a2020202020202020202020204c697374266c743b542667743b20636f6c756d6e486561646572732c0a2020202020202020202020204d6174726978266c743b646f75626c652667743b2064617461200a202020202020202020202020290a20202020202020207b0a2020202020202020202020202f2f20656e73757265206d61747269782069732073796d6d657472696320686572650a2020202020202020202020202f2f2073657420726f772068656164657273207468652073616d6520617320636f6c756d6e2068656164657273202873696e63652073796d6d6574726963290a20202020202020207d0a20202020202020202f2f206d6574686f647320746f206665746368205f646174612c20686561646572732c206120666577206f74686572207468696e67732e200a202020207d0a3c2f636f64653e3c2f7072653e0a0a3c703e4e6f74652074686174203c636f64653e4d6174726978266c743b646f75626c652667743b3c2f636f64653e2069732061203c6120687265663d22687474703a2f2f6e756d65726963732e6d617468646f746e65742e636f6d2f6170692f4d6174684e65742e4e756d65726963732e4c696e656172416c67656272612f4d6174726978253630312e68746d222072656c3d226e6f666f6c6c6f77223e3c636f64653e4d6174684e65742e4e756d65726963732e4c696e656172416c67656272612e4d61747269783c2f636f64653e3c2f613e20747970652e3c2f703e0a0a3c703e4e6f7720492077616e7420746f20637265617465206120737461746963206d6574686f6420746861742069732070617373656420612066756c6c2073796d6d6574726963206d617472697820616e642061206c697374206f66206865616465727320617320706172616d65746572732c20616e642072657475726e732061206e65772073796d6d6574726963206d61747269782077697468206f6e6c792074686f736520706173736564206865616465727320696e636c7564656420617320726f77732f636f6c756d6e732e202049276d20686176696e67206120686172642074696d652066696e64696e6720616e792075736566756c20666163696c697469657320696e203c6120687265663d22687474703a2f2f6e756d65726963732e6d617468646f746e65742e636f6d2f6170692f4d6174684e65742e4e756d65726963732e4c696e656172416c67656272612f222072656c3d226e6f666f6c6c6f77223e4d6174684e65742e4e756d65726963732e4c696e656172416c67656272613c2f613e20746f2068656c70206d652061737369676e2061206e6577206d617472697820746f206f6e6c792074686f736520686561646572732070617373656420746f206d79206d6574686f642e2049732074686572652061206e6963652077617920746f20646f20746869733f204f722077696c6c2074686520696e6576697461626c6520736f6c7574696f6e2062652073696d706c792072656164696e6720746865206d617472697820726f7720627920726f7720696e746f20736f6d6520656e756d657261626c65206261736564206f6e2074686520636f6c756d6e2f726f77206865616465727320616e64207468656e2067656e65726174696e672061206e6577206d61747269782066726f6d2074686520656e756d657261626c653f3c2f703e0a0a3c7072653e3c636f64653e7075626c696320737461746963204d61747269785769746848656164657273266c743b542667743b2047656e657261746553756253796d6d65747269634d6174726978280a2020202020202020202020204d61747269785769746848656164657273266c743b542667743b2066756c6c53796d6d65747269634d61747269782c204c697374266c743b542667743b206e6565646564466163746f7273290a202020207b0a2020202020202020202f2f20637265617465206d6174726978206f66206f6e6c792074686f736520636f6c756d6e732f726f77732077697468206865616465727320696e206e6565646564466163746f72730a202020207d0a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28');
INSERT INTO `so_questions` (`tags`, `is_answered`, `view_count`, `answer_count`, `score`, `last_activity_date`, `creation_date`, `question_id`, `link`, `title`, `body`, `has_more`, `quota_max`, `quota_remaining`, `createdAt`, `updatedAt`) VALUES
('["matlab","optimization","linear-algebra","matrix-multiplication","matrix-math"]', '0', 40, 0, 1, 1458412444, 1458254360, 36072963, 'http://stackoverflow.com/questions/36072963/matlab-multiply-a-matrix-by-individual-sections-of-another-matrix-and-get-the-di', 'Matlab Multiply A Matrix By Individual Sections of Another Matrix And Get the Diagonal Elements', , NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["matlab","linear-algebra"]', '1', 45, 1, 2, 1459349639, 1458274967, 36076094, 'http://stackoverflow.com/questions/36076094/how-can-i-choose-gaussian-elimination-to-solve-ax-b-in-matlab', 'How can I choose Gaussian Elimination to solve Ax=b in MATLAB?', 0x3c703e4920686176652061207175657374696f6e2061626f757420736f6c76696e67206c696e656172206571756174696f6e203c636f64653e41783d623c2f636f64653e2c20696e207768696368203c636f64653e783c2f636f64653e20697320756e6b6e6f776e2c204120697320737175617265206d6174726978203c636f64653e4e784e3c2f636f64653e20616e64206e6f6e2d73696e67756c6172206d61747269782e3c2f703e0a0a3c703e54686520766563746f72203c636f64653e783c2f636f64653e2063616e20626520736f6c766564206279203c2f703e0a0a3c7072653e3c636f64653e783d696e762841292a62200a3c2f636f64653e3c2f7072653e0a0a3c703e6f723c2f703e0a0a3c7072653e3c636f64653e783d415c62200a3c2f636f64653e3c2f7072653e0a0a3c703e496e204d61746c61622c2074686520e280985ce2809920636f6d6d616e6420696e766f6b657320616e20616c676f726974686d20776869636820646570656e64732075706f6e2074686520737472756374757265206f6620746865206d6174726978204120616e6420696e636c7564657320636865636b732028736d616c6c206f7665726865616429206f6e2070726f70657274696573206f6620412e2048656e63652c20497420686967686c7920646570656e6473206f6e2041207374727563747572652e20486f77657665722c20412073747275637475726520697320756e6b6e6f776e2028692e652072616e646f6d206d6174726978292e20492077616e7420746f206d65617375726520636f6d706c6578697479206f662061626f7665206571756174696f6e2e2048656e63652c20746f20666169726c7920636f6d70617269736f6e2c2049206e65656420746f20666978656420746865206d6574686f64207768696368204920757365642e20496e207468697320636173652c20492063686f6f736520476175737369616e20456c696d696e6174696f6e2028474529207769746820636f6d706c6578697479203c636f64653e4f284e5e33293c2f636f64653e204d79207175657374696f6e20697320686f772063616e20492063686f6f73652f66697820746865206d6574686f642028692e652e2047452920746f20736f6c76652061626f7665206571756174696f6e3f203c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["algorithm","matlab","machine-learning","linear-algebra","linear-regression"]', '0', 52, 1, 0, 1458575381, 1458403608, 36103949, 'http://stackoverflow.com/questions/36103949/line-projected-linear-discriminant-analysis', 'Line Projected - Linear discriminant analysis', 0x3c703e4920686176652074776f207175657374696f6e2e200a4920686176652074686520617474616368656420636f646520666f72206c696e656172206469736372696d696e616e7420616e616c797369732c2074686174206465616c7320776974682074776f20636c6173736573202d656163682074776f2066656174757265732e204974206973207468652076657279206261736963206f6e652e200a486f77657665722c3c2f703e0a0a3c703e4920646f6e2774206b6e6f7720776879206d792070726f6a6563746564206c696e65206973206e6f74207468652073616d6520617320746865207475746f7269616c2e20506c656173652074656c6c206d65207768657265206973207468652077726f6e6720696d706c656d656e746174696f6e2049206469642077697468207265737065637420746f207064662061747461636865642e2020203c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f72657365617263682e63732e74616d752e6564752f707269736d2f6c656374757265732f70722f70725f6c31302e706466222072656c3d226e6f666f6c6c6f77223e687474703a2f2f72657365617263682e63732e74616d752e6564752f707269736d2f6c656374757265732f70722f70725f6c31302e7064663c2f613e0a3c6120687265663d22687474703a2f2f7777772e64692e756e6976722e69742f646f63756d656e74692f4f63636f7272656e7a61496e732f6d61746469642f6d61746469643433373737332e706466222072656c3d226e6f666f6c6c6f77223e687474703a2f2f7777772e64692e756e6976722e69742f646f63756d656e74692f4f63636f7272656e7a61496e732f6d61746469642f6d61746469643433373737332e7064663c2f613e3c2f703e0a0a3c7072653e3c636f64653e25204669736865722773206c696e656172206469736372696d696e616e742e200a25203a20786920697320636f6c756d6e20766563746f72206f6620776869636820656c656d656e742069732074657374206d65747269632e200a25205468657265666f72652073697a65206f6620726f7720697320746865206e756d626572206f662074657374206d6574726963732e200a25204e756d626572206f6620636f6c756d6e20697320746865206e756d626572206f66206461746120736574732e200a25207831203d2072616e6428322c20333029202b20302e37352e2a6f6e657328322c3330293b20255b6431283a2c633129206431283a2c6332295d273b0a25207832203d2072616e6428322c20333029202b20302e33202e2a6f6e657328322c3330293b20255b6432283a2c633129206432283a2c6332295d273b0a78313d5b3120323b3220333b3320333b3420353b3520355d272020252074686520666972737420636c6173732035206f62736572766174696f6e730a78323d5b3120303b3220313b3320313b3320323b3520335d27202520746865207365636f6e6420636c6173732036206f62736572766174696f6e730a6d31203d206d65616e2878312729273b200a6d32203d206d65616e2878322729273b200a6d203d206d31202b206d323b200a537731203d207a65726f732873697a652878312c2031292c2073697a652878312c3129293b200a537732203d207a65726f732873697a652878312c2031292c2073697a652878312c3129293b200a202020666f722069203d20313a73697a652878312c31290a20202020202020537731203d2020537731202b20287831283a2c69292d6d31292a287831283a2c69292d6d3129273b0a202020656e640a2020666f722069203d20313a73697a652878322c31290a2020202020537732203d2020537732202b20287832283a2c69292d6d32292a287832283a2c69292d6d3229273b0a2020656e640a0a205377203d20537731202b205377323b200a2077203d2053775e282d31292a286d322d6d31293b0a20207363617474657228783128312c3a292c20783128322c3a292c2031302c2027726f27293b0a686f6c64206f6e3b0a7363617474657228783228312c3a292c20783228322c3a292c31302c27626f27293b0a63203d20302e352e2a6d3b202541766572616765206d65616e2e69652e206d2f320a717569766572286328312c31292c206328322c31292c20312c202d7728312c31292f7728322c3129293b0a717569766572286328312c31292c206328322c31292c202d312c207728312c31292f7728322c3129293b0a717569766572287728312c31292c7728322c31292c20302e35290a686f6c64206f66663b0a6669677572653b200a7931203d207831272a773b200a7932203d207832272a773b200a68697374285b79312079325d290a6e6577793d77272a6e6577703b0a256e657770206973206e657720706f696e740a64696666313d616273286d312d6e657779293b0a64696666323d616273286d322d6e657779293b0a6966206469666631202667743b3d64696666320a2020256e65777020697320696e636c7564656420696e20636c617373310a656c73650a0a256e65777020697320696e636c7564656420696e20636c617373320a0a0a2049742068617320746f20626520736f6d657468696e672073696d696c617220746f2074686520666f6c6c6f77696e6720706963747572650a0a5b215b736d7468672073696d69616c7220746f2074686520666f6c6c6f77696e672066696e616c20726573756c74735d5b335d5d5b335d0a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","numpy","computer-vision","vectorization","linear-algebra"]', '0', 31, 0, 0, 1458428111, 1458428111, 36108213, 'http://stackoverflow.com/questions/36108213/using-numpy-to-find-all-possible-distance-vectors-in-a-coordinate-grid', 'Using numpy to find all possible distance vectors in a coordinate grid', 0x3c703e49276d20747279696e6720746f20696d706c656d656e742046616269616e2054696d6d277320707570696c20747261636b696e6720616c676f726974686d205b3c6120687265663d22687474703a2f2f7777772e696e622e756e692d6c75656265636b2e64652f7075626c696b6174696f6e656e2f706466732f546942613131622e7064665d222072656c3d226e6f666f6c6c6f77223e687474703a2f2f7777772e696e622e756e692d6c75656265636b2e64652f7075626c696b6174696f6e656e2f706466732f546942613131622e7064665d3c2f613e20616e6420746865206571756174696f6e207265717569726573207468617420492066696e6420616c6c20706f737369626c652064697374616e636520766563746f72732077697468696e206120636f6f7264696e61746520677269642e204d7920696d706c656d656e746174696f6e2069736e277420776f726b696e6720636f72726563746c792c20616e642049207468696e6b20697427732062656361757365206f66207468697320737465702e2049206b6e6f7720492073686f756c64207370656564207570206d7920696d706c656d656e746174696f6e207573696e672062726f616463617374696e672c2062757420616e7920696e736967687420696e746f206f7468657220706f737369626c6520696d70726f76656d656e747320776f756c642062652061707072656369617465642e204920776f756c6420616c736f20626520637572696f757320746f206b6e6f7720616e7920747269636b7320746f2074657374696e6720636f6465206c696b6520746869732e20446964204920646f20746869732072696768743f3c2f703e0a0a3c7072653e3c636f64653e6579655f6c656e203d206e702e6172616e6765286579652e73686170655b305d292023207468697320697320757375616c6c7920696e207468652072616e6765206f662033302d34300a78782c7979203d206e702e6d65736867726964286579655f6c656e2c6579655f6c656e29202320636f6f7264696e61746573206f6620657665727920706f696e7420696e207468652065796520696d6167650a58312c5832203d206e702e6d657368677269642878782e726176656c28292c78782e726176656c2829290a59312c5932203d206e702e6d657368677269642879792e726176656c28292c79792e726176656c2829290a44782c4479203d205b58312d58322c59312d59325d0a446c656e203d206e702e737172742844782a2a322b44792a2a32290a44782c4479203d205b44782f446c656e2c2044792f446c656e5d20236e6f726d616c697a65640a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["image","linear-algebra","svd","homography"]', '0', 16, 0, 0, 1458571417, 1458571417, 36134113, 'http://stackoverflow.com/questions/36134113/using-svd-how-to-do-image-homograpy', 'Using SVD, how to do Image homograpy', 0x3c703e492077616e7420696d61676520686f6d6f677261706879206279206170706c79696e672074686520686f6d6f677261706879206d617472697820682e3c2f703e0a0a3c703e54686520686f6d6f677261706879206d61747269782068206973206f627461696e65642062792073656c656374696e6720636f6c756d6e206f66206d6174726978205620696e207468652073696e67756c61722076616c7565206465636f6d706f736974696f6e20285356442920636f72726573706f6e64696e6720746f2074686520736d616c6c6573742073696e67756c61722076616c75652e3c2f703e0a0a3c703e466f72206578616d706c652c20546865206d61747269782044206973206f627461696e6564206279205b55204420565d203d205356442841292e20546865206d617472697820442069732062656c6f772e0a3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f57444c666f2e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f57444c666f2e706e672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e4920646f6e2774206b6e6f772074686520736d616c6c6573742073696e67756c61722076616c75652065786163746c792e20486f77657665722c2049206b6e6f7720746861742074686520686f6d6f677261706879206d61747269782068206973206f627461696e65642062792073656c656374696e672039746820636f6c756d6e206f66206d617472697820562e3c2f703e0a0a3c703e496e206f7468657220776f7264732c2049206861766520746f2073656c6563742074686520736d616c6c6573742073696e676c7561722076616c75652061732039746820646961676f6e616c20656c656d656e7420666f726d20746865206d617472697820442e2049732069742066616c736520696620492073656c6563742074686520736d616c6c6573742073696e67756c61722076616c75652061732031312e363333333f3c2f703e0a0a3c703e506c65617365206578706c61696e2061626f75742069742e0a436f756c6420796f7520657870616c61696e20686f7720746f2073656c6563742074686520736d616c6c6573742073696e67756c61722076616c75652066726f6d20746865206d617472697820443f3c2f703e0a0a3c703e5468616e6b732e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matrix","linear-algebra","eigenvalue","eigenvector"]', '0', 24, 0, 0, 1458596880, 1458596019, 36142041, 'http://stackoverflow.com/questions/36142041/power-iteration-method-for-n-largest-eigenvalues', 'Power iteration method for n largest eigenvalues', 0x3c703e4920646f206120506f77657220497465726174696f6e206f6e206d6174726978204d20746f20676574206e20646f6d696e616e7420656967656e76616c7565732e3c2f703e0a0a3c7072653e3c636f64653e4d31203d205b302e3431373020202020302e303030313b20302e3732303320202020302e333032335d0a3c2f636f64653e3c2f7072653e0a0a3c703e57697468696e206d7920666972737420697465726174696f6e204920776f756c64206765742074686520666f6c6c6f77696e6720726573756c74733a3c2f703e0a0a3c7072653e3c636f64653e656967656e766563746f72313a205b302e313538322020202020302e393837345d0a656967656e76616c7565313a20205b302e343137375d0a3c2f636f64653e3c2f7072653e0a0a3c703e4275742064756520746f206d7920616c676f726974686d2049206f6e6c7920686176652074686520666972737420646f6d696e616e7420656967656e766563746f72206e6f726d616c697a656420627920746865206d6178696d756d20616e642074686520656967656e76616c75653a3c2f703e0a0a3c7072653e3c636f64653e20656967656e766563746f724e6f726d3a205b302e313630322020202020312e3030305d0a20656967656e76616c7565313a20205b302e343137375d0a3c2f636f64653e3c2f7072653e0a0a3c703e4e6f726d616c6c79204920776f756c64206e6f7720646f2074686520666f6c6c6f77696e672063616c63756c6174696f6e20746f20676574206d79206e65787420696e697469616c206d61747269783a203c2f703e0a0a3c7072653e3c636f64653e204d32203d204d31202d20656967656e76616c756531202a20656967656e766563746f7231202a207472616e73706f736528656967656e766563746f723129200a3c2f636f64653e3c2f7072653e0a0a3c703e696e7374656164204920776f756c6420646f3a203c2f703e0a0a3c7072653e3c636f64653e204d32203d204d31202d20656967656e76616c756531202a20656967656e766563746f724e6f726d202a207472616e73706f736528656967656e766563746f724e6f726d29200a3c2f636f64653e3c2f7072653e0a0a3c703e42757420756e666f7274756e6174656c7920697420646f6573206e6f7420776f726b2e20492067657420612077726f6e67207365636f6e6420656967656e76616c75652e2e2e205768617420646f2049206861766520746f20646f20746f206d616b65207468697320776f726b20636f72726563746c793f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","algorithm","linear-algebra","maximization"]', '1', 75, 1, 2, 1458615570, 1458609025, 36144528, 'http://stackoverflow.com/questions/36144528/c-algorithm-for-solving-maximisation-in-linear-programming', 'C++ Algorithm for solving maximisation in linear programming', 0x3c703e4920616d206c6561726e696e672061626f7574206d6178696d69736174696f6e2077697468206c696e6561722070726f6772616d6d696e672c20616e64206861766520636f6d65206163726f737320616e20616c676f726974686d20666f72206d6178696d69736174696f6e20776974682074776f207661726961626c657320283c7374726f6e673e73696c7665723c2f7374726f6e673e20616e64203c7374726f6e673e676f6c643c2f7374726f6e673e20696e207468697320696e7374616e63652920627574204920616d20756e7375726520776861742061206365727461696e2073656374696f6e206f662074686520636f646520697320646f696e673a3c2f703e0a0a3c7072653e3c636f64653e7573696e67206e616d657370616365207374643b0a0a0a636c6173732050726563696f757353746f6e6573207b0a2020696e74206e3b0a2020766563746f72266c743b696e742667743b2061733b0a2020766563746f72266c743b696e742667743b2061673b0a3c2f636f64653e3c2f7072653e0a0a3c703e5468652066756e6374696f6e2062656c6f77206973207468652073656374696f6e204920616d20756e636c656172206f6e3a3c2f703e0a0a3c7072653e3c636f64653e2020646f75626c65206d6178672028646f75626c65207329207b0a20202020646f75626c652067203d20303b0a20202020666f722028696e7420693d303b2069266c743b6e3b20692b2b290a2020202020206966202873203d3d2030290a202020202020202067202b3d2061675b695d3b0a202020202020656c7365206966202861735b695d20266c743b3d207329200a202020202020202073202d3d2061735b695d3b0a202020202020656c7365207b0a202020202020202067202b3d2028312d732f61735b695d292a61675b695d3b0a202020202020202073203d20303b0a2020202020207d0a2020202072657475726e20673b0a20207d0a3c2f636f64653e3c2f7072653e0a0a3c703e5468652072657374206f662074686520636f64652069732062656c6f772028666f7220636f6e74657874292c20696620616e796f6e65206b6e6f7773206f6620736f6d652072656c6576616e7420706170657273206f6e207468697320616c676f726974686d2c206f722063616e2070726f766964652061206272696566206578706c616e6174696f6e206f6e20746869732066756e6374696f6e204920776f756c6420617070726563696174652069742067726561746c793c2f703e0a0a3c7072653e3c636f64653e7075626c69633a0a2020646f75626c652076616c756528766563746f7220266c743b696e742667743b2073696c7665722c20766563746f7220266c743b696e742667743b20676f6c6429207b0a202020206e203d2073696c7665722e73697a6528293b0a202020206173203d2073696c7665723b0a202020206167203d20676f6c643b0a20202020666f722028696e7420693d303b2069266c743b6e3b20692b2b29200a202020202020666f722028696e74206a3d692b313b206a266c743b6e3b206a2b2b29200a20202020202020206966202861735b6a5d2a61675b695d202667743b2061735b695d2a61675b6a5d29207b0a20202020202020202020737761702861735b695d2c2061735b6a5d293b0a20202020202020202020737761702861675b695d2c2061675b6a5d293b0a20202020202020207d0a20202020646f75626c65206c6f203d20303b0a20202020646f75626c65206869203d2035312a3130303b0a20202020646f75626c652044203d2031652d31303b0a202020207768696c6520286c6f2b4420266c743b2068692026616d703b26616d703b206c6f2a28312b442920266c743b20686929207b0a202020202020646f75626c65206d6964203d20286c6f2b6869292f323b0a202020202020696620286d696420266c743b3d206d617867286d696429290a20202020202020206c6f203d206d69643b0a202020202020656c73650a20202020202020206869203d206d69643b0a202020207d0a2020202072657475726e206c6f3b0a20207d0a7d3b200a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","numpy","linear-algebra","svd"]', '1', 25, 1, 0, 1458665239, 1458651272, 36154950, 'http://stackoverflow.com/questions/36154950/can-i-get-data-spread-noise-from-singular-value-decomposition', 'Can I get data spread (noise) from singular value decomposition?', 0x3c703e49276d2077617320686f70696e6720746f207573652073696e67756c61722076616c7565206465636f6d706f736974696f6e20746f20657374696d61746520746865207374616e6461726420646576696174696f6e206f6620656c6970746f696420646174612e202049276d206e6f742073757265206966207468697320697320746865206265737420617070726f61636820616e642049206d6179206265206f7665727468696e6b696e672074686520656e746972652070726f6365737320736f2049206e65656420736f6d652068656c702e3c2f703e0a0a3c703e492073696d756c6174656420736f6d652064617461207573696e672074686520666f6c6c6f77696e67207363726970742e2e2e3c2f703e0a0a3c7072653e3c636f64653e66726f6d206d6174706c6f746c696220696d706f7274207079706c6f7420617320706c740a696d706f7274206e756d70790a0a0a646566207376645f6578616d706c6528293a0a20202020232073696d756c61746520736f6d6520646174612e2e2e0a202020202320782076616c7565732068617665207374616e6461726420646576696174696f6e20333030300a202020207864617461203d206e756d70792e72616e646f6d2e6e6f726d616c28302c20333030302c2035303030292e72657368617065282d312c2031290a202020202320792076616c756573207374616e6461726420646576696174696f6e203330300a202020207964617461203d206e756d70792e72616e646f6d2e6e6f726d616c28302c203330302c2035303030292e72657368617065282d312c2031290a2020202023206170706c7920736f6d6520726f746174696f6e0a2020202079646174615f726f7461746564203d207964617461202b20287864617461202a20302e35290a2020202064617461203d206e756d70792e68737461636b282878646174612c2079646174615f726f746174656429290a0a2020202023206765742073696e67756c61722076616c7565730a202020206c6566745f73696e67756c61725f6d61747269782c2073696e67756c61725f76616c7565732c2072696768745f73696e67756c61725f6d6174726978203d206e756d70792e6c696e616c672e7376642864617461290a202020207072696e74202773696e67756c61722076616c756573272c2073696e67756c61725f76616c7565730a0a202020202320706c6f7420646174612e2e2e2e0a20202020706c742e7363617474657228646174615b3a2c20305d2c20646174615b3a2c20315d2c20733d35290a20202020706c742e796c696d282d31353030302c203135303030290a20202020706c742e73686f7728290a0a7376645f6578616d706c6528290a3c2f636f64653e3c2f7072653e0a0a3c703e49206765742073696e67756c61722076616c756573206f662e2e2e3c2f703e0a0a3c7072653e3c636f64653e2667743b2667743b2667743b2073696e67756c61722076616c756573205b203233343030312e373132323836373820202031383835302e34353135353934325d0a3c2f636f64653e3c2f7072653e0a0a3c703e4d792064617461206c6f6f6b73206c696b6520746869732e2e2e3c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f65443739532e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f65443739532e706e672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e492077617320756e6465722074686520617373756d7074696f6e2074686174207468652073696e67756c61722076616c75657320776f756c642067697665206d6520736f6d6520696e6469636174696f6e206f662074686520737072656164206f662064617461207265676172646c657373206f66206974277320726f746174696f6e2c2072696768743f20204275742074686573652076616c7565732c205b3233343030312e373132323836373820202031383835302e34353135353934325d2c206d616b65206e6f2073656e736520746f206d652e20204d79207374616e6461726420646576696174696f6e732077657265203330303020616e64203330302e2020446f2074686573652073696e67756c61722076616c75657320726570726573656e742076617269616e63653f2020486f7720646f204920636f6e76657274207468656d3f203c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["math","3d","linear-algebra"]', '0', 26, 1, 1, 1458770087, 1458652779, 36155478, 'http://stackoverflow.com/questions/36155478/projection-of-points-on-plane-and-the-inverse-transformation', 'Projection of points on plane and the inverse transformation', 0x3c703e69276d20776f726b696e67206f6e20612070726f6a65637420776865726520692068617665206120636c6f7564206f6620706f696e747320696e20737061636520617320696e70757420646174612c206d7920676f616c20697320746f20637265617465206120737572666163652e3c2f703e0a0a3c703e49207374617274656420627920636f6d707574696e6720612072656772657373696f6e20706c616e20666f722074686520636c6f75642c207468656e20692070726f6a6563746564206d7920706f696e7473206f6e2074686520706c616e65207573696e6720646f742070726f6475637473203a203c2f703e0a0a3c703e4d7920706c616e6520697320726570726573656e746564206279206120706f696e7420616e642061206e6f726d616c202c206920636f6e737472756374207468652061786973206f662074686520706c616e652773207370616365207573696e672063726f73732070726f6475637473207468656e2070726f6a656374206561636820706f696e74206f6e20746865736520617869732e3c2f703e0a0a3c703e7468656e206920747269616e67756c61746520696e20324420287468617427732074686520706f696e74206f66207468652077686f6c65206f7065726174696f6e292e3c2f703e0a0a3c703e4d792070726f626c656d2069732074686174206d7920706f696e7473206e6f772061726520696e2074686520706c616e6520737061636520616e6420692077616e7420746f20676574207468656d206261636b20746f20746865697220696e6974616c20706f736974696f6e2028696e766572736520746865207472616e73666f726d6174696f6e2920746f2068617665206d792073757266616365204f4e206d7920706f696e74732e3c2f703e0a0a3c703e7468616e6b20796f75203a293c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28');
INSERT INTO `so_questions` (`tags`, `is_answered`, `view_count`, `answer_count`, `score`, `last_activity_date`, `creation_date`, `question_id`, `link`, `title`, `body`, `has_more`, `quota_max`, `quota_remaining`, `createdAt`, `updatedAt`) VALUES
('["opengl","lwjgl","linear-algebra"]', '1', 47, 2, 0, 1458846902, 1458659950, 36158351, 'http://stackoverflow.com/questions/36158351/opengl-java-matrix4f-implementation', 'OpenGL Java Matrix4f implementation', , NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["linear-algebra","sparse-matrix","eigen","preconditions"]', '1', 68, 2, 1, 1458992953, 1458786007, 36192186, 'http://stackoverflow.com/questions/36192186/which-sparse-linear-solver-is-faster-sparselu-or-bicgstab', 'Which sparse linear solver is faster? SparseLU or BiCGSTAB?', 0x3c703e492074657374656420456967656e2773205370617273654c5520616e64204269634753544142206d6574686f64206f6e20736f6d6520737061727365206d61747269782c2077686f73652064656e736520636f756e7465727061727473272073697a652072616e6765732066726f6d20333030302a3330303020746f2031363030302a31363030302e20416c6c207468652063617365732073686f77732074686174205370617273654c552069732061726f756e642031332520666173746572207468616e204269634753544142206d6574686f642e203c2f703e0a0a3c703e49206469646e2774206665656420746865204269434753544142206120526f774d616a6f7220737061727365206d61747269782c206f72206769766520697420616e79207072652d636f6e646974696f6e65722e2054686174206d696768742062652074686520726561736f6e206f6620736c6f772e3c2f703e0a0a3c703e536f204920616d20776f6e646572696e672c206966204920646f20626f7468206d6574686f64732077656c6c2c207768696368206f6e652073686f756c64206265206661737465723f3c2f703e0a0a3c703e486f772061626f757420696620746865206d61747269782073697a6520676f657320757020746f206d696c6c696f6e732a6d696c6c696f6e733f3c2f703e0a0a3c703e5468616e6b732061206c6f74213c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","linear-algebra"]', '0', 26, 0, 1, 1458837002, 1458837002, 36205248, 'http://stackoverflow.com/questions/36205248/python-dealing-with-repeated-eigenvalues', 'Python dealing with repeated eigenvalues', 0x3c703e436f6e736964657220412061207265616c2073796d6d6574726963206d617472697820616e643c2f703e0a0a3c7072653e3c636f64653e696d706f72742073636970790a28732c75293d73636970792e6c696e616c672e656967682841290a3c2f636f64653e3c2f7072653e0a0a3c703e496620412068617320726570656174656420656967656e76616c756573207468656e2074686520636f6c756d6e73206f66207520617265206e6f74206e65636573736172696c79206f7274686f6e6f726d616c2e205768617420697320746865206d6f737420656666696369656e742077617920746f206f627461696e2061206261736973206f66206f7274686f6e6f726d616c20656967656e766563746f727320696e20707974686f6e3f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","numpy","linear-algebra"]', '1', 26, 1, 2, 1459115748, 1458921339, 36223341, 'http://stackoverflow.com/questions/36223341/numpy-linalg-pinv-hangs-for-some-infinite-values-but-not-for-others', 'numpy.linalg.pinv() hangs for some infinite values (but not for others)', 0x3c703e496e206d7920636f64652049206e65656420746f20636f6d707574652070736575646f696e7665727365206f66206d6174726963657320616e64206974206d61792068617070656e207468617420736f6d65206f662074686520656c656d656e7473206f6620746865206d61747269782061726520696e66696e69746520283c636f64653e6e702e696e663c2f636f64653e292e20536f6d6574696d657320746865203c636f64653e70696e7628293c2f636f64653e2066756e6374696f6e2068616e646c65732069742077656c6c20616e642072657475726e7320736f6d657468696e672c2062757420736f6d6574696d6573206974206a7573742068616e6773207769746820313030252043505520757361676520616e642049206e65656420746f206b696c6c207468652070726f636573732e20536565207468652064656d6f6e7374726174696f6e2062656c6f773a3c2f703e0a0a3c7072653e3c636f64653e507974686f6e20332e342e332b202864656661756c742c204f637420313420323031352c2031363a30333a353029200a547970652022636f70797269676874222c20226372656469747322206f7220226c6963656e73652220666f72206d6f726520696e666f726d6174696f6e2e0a0a49507974686f6e20342e312e32202d2d20416e20656e68616e63656420496e74657261637469766520507974686f6e2e0a3f2020202020202020202d2667743b20496e74726f64756374696f6e20616e64206f76657276696577206f662049507974686f6e27732066656174757265732e0a25717569636b726566202d2667743b20517569636b207265666572656e63652e0a68656c702020202020202d2667743b20507974686f6e2773206f776e2068656c702073797374656d2e0a6f626a6563743f2020202d2667743b2044657461696c732061626f757420276f626a656374272c2075736520276f626a6563743f3f2720666f722065787472612064657461696c732e0a0a496e205b315d3a20696d706f7274206e756d7079206173206e700a496e205b325d3a20696d706f7274206e756d70792e6c696e616c67206173206c610a496e205b335d3a2078203d206e702e6172726179285b5b3535302e302c20315d2c205b312c206e702e696e665d5d290a496e205b345d3a206c612e70696e762878290a4f75745b345d3a200a6172726179285b5b20302e2c2020302e5d2c0a202020202020205b20302e2c2020302e5d5d290a496e205b355d3a2078203d206e702e6172726179285b5b6e702e696e662c206e702e696e665d2c205b6e702e696e662c206e702e696e665d5d290a496e205b365d3a206c612e70696e762878290a4f75745b365d3a200a6172726179285b5b206e616e2c20206e616e5d2c0a202020202020205b206e616e2c20206e616e5d5d290a496e205b375d3a2078203d206e702e6172726179285b5b3535302e302c20315d2c205b6e702e696e662c206e702e696e665d5d290a496e205b385d3a206c612e70696e762878292020232068657265206974206a7573742068756e6720616e6420492068616420746f206b696c6c2069742066726f6d206f7574736964650a4b696c6c65640a3c2f636f64653e3c2f7072653e0a0a3c703e57687920646f657320746869732068617070656e3f2057687920646f657320697420646f2066696e6520666f7220736f6d6520617272616e67656d656e74206f66203c636f64653e696e663c2f636f64653e7320627574206974206a7573742068616e677320666f72206f746865723f204d6967687420746869732062652061206275672028692e652e2073686f756c64207468652076616c75657320626520636865636b6564206669727374293f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","opencv","linear-algebra","basis"]', '0', 15, 0, 1, 1459019949, 1459018689, 36239521, 'http://stackoverflow.com/questions/36239521/computing-null-space-via-opencv', 'computing null space via opencv', 0x3c703e497320746865726520616e20616c7465726e617469766520636f6d6d616e6420696e204f70656e435620746f203c636f64653e6e756c6c3c2f636f64653e20636f6d6d616e6420696e204d41544c41422c20776869636820676976656e206120766563746f72203c636f64653e763c2f636f64653e20636f6d707574657320616e206f7274686f676f6e616c20626173697320666f7220746865206e756c6c207370616365207768696368203c636f64653e763c2f636f64653e206973206f6e65206f662069747320626173697320766563746f72733f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","arrays","numpy","matrix","linear-algebra"]', '1', 49, 2, 3, 1459105916, 1459101767, 36250729, 'http://stackoverflow.com/questions/36250729/convert-triangle-matrix-to-square-python-numpy', 'Convert triangle matrix to square (Python | NumPy)?', 0x3c703e49276d20646f696e6720736f6d6520636f6d7075746174696f6e7320206f6e20612066756c6c206d6174726978207468617420697320726564756e64616e742028692e652e2063616e206265206120747269616e676c65206d617472697820772f6f206c6f73696e6720696e666f292e202049207265616c697a656420492063616e20636f6d70757465206f6e6c7920746865206c6f77657220706f7274696f6e206f662074686520747269616e676c6520666f722066617374657220726573756c74732e20486f772063616e20492070726f6a65637420746865206c6f77657220747269616e676c6520696e746f20746865207570706572206f6e63652049276d20646f6e653f3c2f703e0a0a3c703e3c7374726f6e673e496e206f7468657220776f7264732c20686f772063616e2049207265766572736520746865203c636f64653e6e702e7472696c3c2f636f64653e206d6574686f643f3c2f7374726f6e673e203c2f703e0a0a3c7072653e3c636f64653e7072696e742044465f7661722e61735f6d617472697828290a23205b5b3120312030203120312031203020312030203020305d0a2320205b3120312031203120312030203120302031203120315d0a2320205b3020312031203020302030203020302030203020305d0a2320205b3120312030203120302030203020302030203020305d0a2320205b3120312030203020312030203020302030203020305d0a2320205b3120302030203020302031203120302030203020305d0a2320205b3020312030203020302031203120302030203020305d0a2320205b3120302030203020302030203020312031203020305d0a2320205b3020312030203020302030203020312031203020305d0a2320205b3020312030203020302030203020302030203120305d0a2320205b3020312030203020302030203020302030203020315d5d0a7072696e74206e702e7472696c2844465f7661722e61735f6d61747269782829290a23205b5b3120302030203020302030203020302030203020305d0a2320205b3120312030203020302030203020302030203020305d0a2320205b3020312031203020302030203020302030203020305d0a2320205b3120312030203120302030203020302030203020305d0a2320205b3120312030203020312030203020302030203020305d0a2320205b3120302030203020302031203020302030203020305d0a2320205b3020312030203020302031203120302030203020305d0a2320205b3120302030203020302030203020312030203020305d0a2320205b3020312030203020302030203020312031203020305d0a2320205b3020312030203020302030203020302030203120305d0a2320205b3020312030203020302030203020302030203020315d5d0a3c2f636f64653e3c2f7072653e0a0a3c703e3c7374726f6e673e486f7720746f20636f6e76657274206974206261636b20746f20612066756c6c206d61747269783f3c2f7374726f6e673e203c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","linear-algebra"]', '0', 22, 1, 1, 1459212213, 1459195164, 36270116, 'http://stackoverflow.com/questions/36270116/how-do-i-define-a-hyperplane-in-python-given-4-points-how-do-i-then-define-the', 'How do I define a hyperplane in Python given 4 points? How do I then define the intersection of 4 hyperplanes (this should be a point)?', 0x3c703e492068617665203420706f696e747320696e20523420616e6420746865697220636f2d6f7264696e617465733a3c2f703e0a0a3c7072653e3c636f64653e50313a5b78312c2079312c207a312c2077315d200a50323a5b78322c2079322c207a322c2077325d0a50333a5b78332c2079332c207a332c2077335d0a50343a5b78342c2079342c207a342c2077345d0a3c2f636f64653e3c2f7072653e0a0a3c703e486f7720646f2049206e6f7720646566696e652061206879706572706c616e65206f7574206f6620746865736520706f696e74732020696e20507974686f6e3f3c2f703e0a0a3c703e416c736f20676976656e20746861742049206861766520746865206571756174696f6e73206f662034206879706572706c616e657320686f7720646f20492067657420746865697220696e74657273656374696f6e202877686963682073686f756c64206265206120706f696e74293f3c2f703e0a0a3c703e5468616e6b73210a4f2e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["linear-algebra","linear-programming","linear"]', '0', 28, 0, 0, 1459201962, 1459201962, 36271861, 'http://stackoverflow.com/questions/36271861/is-there-a-way-to-find-if-there-exists-a-solution-such-that-all-the-variables-in', 'Is there a way to find if there exists a solution such that all the variables in a system of linear equations are either 0 or 1 in P time?', 0x3c703e4e6f7465207468697320697320646966666572656e742066726f6d2042696e61727920496e74656765722050726f6772616d6d696e6720617320697420646f6573206e6f7420696e766f6c766520696e657175616c69746965732e3c2f703e0a0a3c703e416e206578616d706c6520776f756c6420626520612b62203d20312e204120736f6c7574696f6e20776f756c642062652061203d20302c2062203d20312e2049206a7573742077616e74203120736f6c7574696f6e2c206f72206576656e20696620746865726520657869737473206120736f6c7574696f6e2e2049207468696e6b20746869732073686f756c6420626520706f737369626c65206275742068617665206e6f206964656120686f7720746f2070726f636565642061626f75742069742e2049207761732072656164696e672074686973203c6120687265663d22687474703a2f2f7777772e6d6174682e727574676572732e6564752f7e736b313233332f636f75727365732f414e542d4631342f6c6563332e706466222072656c3d226e6f666f6c6c6f77223e687474703a2f2f7777772e6d6174682e727574676572732e6564752f7e736b313233332f636f75727365732f414e542d4631342f6c6563332e7064663c2f613e20776865726520746865792063616e2066696e6420696e746567657220736f6c7574696f6e7320696e20502074696d652c204920776173206e6f74207375726520686f7720746869732063616e20626520737769746368656420746f2066696e6420736f6c7574696f6e7320776869636820617265206f6e6c792030206f7220312e3c2f703e0a0a3c703e497420776f756c6420626520677265617420696620697420636f756c64206265206578706c61696e656420696e2065617379207465726d7320736f206120326e642d3372642079656172206d6174682f63732073747564656e7420696e20636f6c6c65676520636f756c6420756e6465727374616e642e20416e6420696620616e796f6e652063616e2070726f76696465206120736f6c766572206f722061206c696272617279206f7220636f64652077686963682063616e20736f6c766520697420776f756c64206265206f662067726561742067726561742068656c702e3c2f703e0a0a3c703e5468616e6b73213c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","matrix","linear-algebra"]', '1', 23, 3, 0, 1459253016, 1459218250, 36274315, 'http://stackoverflow.com/questions/36274315/simple-matrix-matlab-mannipulation', 'Simple Matrix matlab mannipulation', 0x3c703e54686973207175657374696f6e2072656c6174657320746f206261736963206c696e65617220616c67656272613a3c2f703e0a0a3c7072653e3c636f64653e77203d205b3130302032303020333030203430305d27200a4d203d205b302e3333373820302e313830303b302e3132353220302e313230303b20302e3337353920302e343930303b20302e3136313120302e323130305d0a3c2f636f64653e3c2f7072653e0a0a3c703e546865206571756174696f6e2072656c6174696e67207468656d2069732077203d204d782e2057652061726520746f6c6420746f2066696e6420782e205768696c652078206973206a7573742073696d706c7920772a4d5e2d312c20746865206d61747269782064696d656e73696f6e7320646f206e6f74206d6174636820666f7220746865206d756c7469706c69636174696f6e2e20497320746865726520612077617920666f72206d6520746f206f627461696e20783f203c2f703e0a0a3c703e5468652068696e7420676976656e20746f20757320697320746f2022636865636b2072726566285b4d20775d2920746f2073656520696620746865206571756174696f6e2072656c6174696e67207820616e64207720697320636f6e73697374656e742e223c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","python-3.x","linear-algebra"]', '0', 35, 0, 0, 1459310769, 1459310465, 36299442, 'http://stackoverflow.com/questions/36299442/how-to-solve-linear-algebra-equation-az-b-where-z-is-non-positive-python', 'How to solve Linear Algebra equation Az=b where z is non-positive? [PYTHON]', 0x3c703e486920492077616e7420746f20736f6c76652061204c696e65617220416c6765627261206571756174696f6e203c636f64653e417a203d20423c2f636f64653e20776865726520746865203c7374726f6e673e3c656d3e6f7574707574206d6174726978207661726961626c6573206172653c2f656d3e3c2f7374726f6e673e203c7374726f6e673e3c656d3e6e6f6e2d706f7369746976653c2f656d3e3c2f7374726f6e673e2e3c2f703e0a0a3c703e3c656d3e6578616d706c652e3c2f656d3e3c2f703e0a0a3c7072653e3c636f64653e41203d206e702e6172726179285b5b312c325d0a20202020202020202020202020205b332c345d5d0a0a62203d206e702e6172726179285b312c325d290a0a7a203d205b782c795d0a3c2f636f64653e3c2f7072653e0a0a3c703e736f6c76696e67207573696e67203c636f64653e7a203d206e702e6c696e616c672e736f6c766528412c62293c2f636f64653e206769766573206d6520626f746820706f73697469766520616e64206e65676174697665207661726961626c657320666f72203c636f64653e783c2f636f64653e20616e64203c636f64653e793c2f636f64653e2e492077616e7420746865207661726961626c657320746f206265203c636f64653e2d783c2f636f64653e20616e64203c636f64653e2d793c2f636f64653e2e20486f7720646f204920646f20746869733f205468616e6b20796f7520736f206d756368213c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["vector","linear-algebra","calculus"]', '0', 22, 1, 0, 1459342978, 1459342032, 36309328, 'http://stackoverflow.com/questions/36309328/why-dot-product-of-vectors-perpendicular-to-normal-vector-is-equal-to-zero', 'Why dot product of vectors perpendicular to normal vector is equal to zero?', 0x3c703e57687920646f742070726f64756374206f6620766563746f72732070657270656e646963756c617220746f206e6f726d616c20766563746f7220697320657175616c20746f207a65726f3f3c2f703e0a0a3c703e506c6561736520666f6c6c6f7720746865206c696e6b203c6120687265663d22687474703a2f2f7777772e6d617468732e757379642e6564752e61752f752f4d4f572f766563746f72732f766563746f72732d31332f762d31332d312e68746d6c222072656c3d226e6f666f6c6c6f77223e766563746f72206571756174696f6e206f66206120706c616e653c2f613e20746f206765742073686f7274206465736372697074696f6e20616e64206669677572652e3c2f703e0a0a3c703e4f6e2061626f7665206c696e6b20796f7520636f756c642066696e6420646f742070726f64756374202872202d20725f6f29202e206e203d20302e20506c656173652070726f7669646520627269656620616e642073696d706c65206578706c616e6174696f6e20666f7220776879206974277320657175616c20746f207a65726f2e2049206861766520616c7265616479207365617263686564206e756d65726f7573207765627369746573206173206d6f7374206f66207468656d2070726f766964652074686520726561736f6e20626568696e642074686973206973206265636175736520697427732070657270656e646963756c617220746f206e6f726d616c20766563746f722c2074686572652068617320746f20626520626574746572206578706c616e6174696f6e2e3c2f703e0a0a3c703e5468616e6b20796f7520666f7220796f75722074696d652e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","vector","linear-algebra","matlab-figure","projection"]', '1', 57, 1, 0, 1459444261, 1459383975, 36322123, 'http://stackoverflow.com/questions/36322123/draw-the-vector-w-as-well-as-the-projection-of-another-vector-onto-w', 'Draw the vector w as well as the projection of another vector onto w', 0x3c703e486f772063616e2049203c7374726f6e673e706c6f743c2f7374726f6e673e2074686520766563746f72203c7374726f6e673e773c2f7374726f6e673e2077697468207468652070726f6a65637465642064617461206f6e746f207468697320766563746f723f0a486572652069732074686520636f6465202d20616e64206d7920747269616c7320746f20706c6f74207468652077656967687420766563746f722077697468203c7374726f6e673e79313c2f7374726f6e673e20616e64203c7374726f6e673e79323c2f7374726f6e673e2e3c2f703e0a0a3c7072653e3c636f64653e78313d5b3120323b3220333b3320333b3420353b3520355d2020252074686520666972737420636c6173732035206f62736572766174696f6e730a78323d5b3120303b3220313b3320313b3320323b3520333b3620355d0a6d31203d206d65616e287831293b200a6d32203d206d65616e287832293b200a6d203d206d31202b206d323b200a64313d78312d7265706d6174286d312c352c31293b0a64323d78322d7265706d6174286d322c362c31293b0a63203d20302e352e2a6d3b200a537731203d206431272a64313b0a537732203d206432272a64323b0a5377203d20537731202b205377323b200a696e765377203d20696e76285377293b0a773d20696e7653772a286d312d6d322927202574686973206973206d7920766563746f722070726f6a65637465640a73636174746572287831283a2c31292c207831283a2c32292c2031302c2027726f27293b0a686f6c64206f6e3b0a73636174746572287832283a2c31292c207832283a2c32292c2031302c27626f27293b0a257468697320697320686f77206920706c6f7420746865206465636973696f6e20626f756e646172792c2062757420697420646f65736e2774207365656d7320636f72726563742e200a717569766572286328312c31292c206328312c32292c20312c202d7728312c31292f7728322c3129293b0a717569766572286328312c31292c206328312c32292c202d312c207728312c31292f7728322c3129293b0a0a617578773d20772f6e6f726d2877293b0a706c6f74285b3020617578772831295d2c205b3020617578772832295d29200a686f6c64206f66663b0a6669677572653b200a7931203d2078312a773b200a7932203d2078322a773b200a68697374285b793127207932275d290a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["svm","vectorization","linear-algebra","matlab-figure","projection"]', '0', 7, 0, 0, 1459479921, 1459479921, 36347314, 'http://stackoverflow.com/questions/36347314/plot-decision-boundary-and-projected-line', 'Plot decision boundary and projected line', 0x3c703e492068617665204c696e656172204469736372696d696e616e7420416e616c797369732e4974206973206561737920746f20696d706c656d656e7420627574206e6f20736f7572636520636f64652074656c6c7320686f7720746f20706c6f7420746865206465636973696f6e20626f756e64617279206265747765656e207468652074776f20636c6173736573203c7374726f6e673e783120616e642078323c2f7374726f6e673e20696e206f7264657220746f20636c617373696679207468656d2e205468652073616d6520636f646520776f726b656420776974682074686520636f6d6d656e7420646174612c20627574207768656e204920707574206d79207265616c20646174612c206974206469646e27742070726f6a656374656420616e6420706c6f7420746865206c696e65206265747765656e207468652074776f20766563746f727320783120616e642078322e204920686176652070726f626c656d206f6e20686f7720746f207363616c6520616e642070726f6a65637420746865206c696e6520696e746f206d79206461746120783120616e642078322e204d792070726f6a6563746564206c696e65206c6f6f6b73206e6f7420676f6f6420617420616c6c2e20436f756c6420796f7520617373697374206d6520706c656173652e205468616e6b20796f7520696e20616476616e63652e200a3c6120687265663d22687474703a2f2f7777772e6373642e75776f2e63612f7e6f6c67612f436f75727365732f4353343334615f353431612f4c656374757265382e706466222072656c3d226e6f666f6c6c6f77223e4865726520697320686f772049206c6561726e6564204c444120666f722074776f20636c61737365733c2f613e3c2f703e0a0a3c7072653e3c636f64653e252078313d5b3120323b3220333b3320333b3420353b3520355d20200a252078323d5b3120303b3220313b3320313b3320323b3520333b3620355d0a78313d5b32333920302e37323b3332342e3620302e38333b3333312e3820302e39353b3333342e3320302e38333b3235392e3720302e38393b3231322e3320302e38383b3230342e3720302e36353b3235332e383620302e37353b3235382e393420302e38355d202020200a78323d5b3332392e36362c20302e39353b3436392e36382c20312e34363b3435392e37342c312e31313b203239332e3220302e36343b3239372e383820302e39383b3236372e3920302e38323b3337342e3120312e32393b3333332e363220302e37345d0a0a6d31203d206d65616e287831293b200a6d32203d206d65616e287832293b200a6d203d206d31202b206d323b200a64313d78312d7265706d6174286d312c392c31293b0a64323d78322d7265706d6174286d322c382c31293b0a63203d20302e352e2a6d3b200a537731203d206431272a64313b0a537732203d206432272a64323b0a5377203d20537731202b205377323b200a696e765377203d20696e76285377293b0a773d20696e7653772a286d312d6d3229270a0a73636174746572287831283a2c31292c207831283a2c32292c2031302c2027726f27293b0a20686f6c64206f6e3b0a2073636174746572287832283a2c31292c207832283a2c32292c2031302c27626f27293b0a202554686973206d616b657320746865206c696e65206e6f7420706c6f747465642061732069742073686f756c642064726177206120626967206c696e6520616c6c2074686520776179207468652067726170682e200a20717569766572286328312c31292c206328312c32292c20312c202d7728312c31292f7728322c3129293b0a20717569766572286328312c31292c206328312c32292c202d312c207728312c31292f7728322c3129293b0a0a20617578773d20772f6e6f726d2877293b0a0a706c6f74285b3020617578772831295d2c205b3020617578772832295d29200a20686f6c64206f66663b0a206669677572653b200a207931203d2078312a773b200a207932203d2078322a773b200a0a2068697374285b793127207932275d290a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","python-3.x","numpy","linear-algebra","equation-solving"]', '1', 64, 2, -1, 1459511075, 1459508921, 36354807, 'http://stackoverflow.com/questions/36354807/solving-linear-equations-w-three-variables-using-numpy', 'Solving linear equations w. three variables using numpy', 0x3c703e49276d2063757272656e746c7920696e206e656564206f66206120636c6173732c207768696368206d7573742062652061626c6520746f20646973706c617920616e6420736f6c766520616e206571756174696f6e2073797374656d206c696b652074686973206f6e653a3c2f703e0a0a3c7072653e3c636f64653e7c2032782d34792b347a3d3820207c0a7c203334782b33792d7a3d3330207c0a7c20782b792b7a3d3130382020207c0a3c2f636f64653e3c2f7072653e0a0a3c703e492074686f7567687420697420776f756c64206265206120676f6f64206964656120746f207772697465206120636c61737320746f207472616e73666f726d20746865206c6566742d73696465207468696e6773206f66207468652065716174696f6e2073797374656d20696e746f2061206d61747269782d6c696b65206f626a6563742c2068657265206973207468652073656c662d6d6164652d6d617472697820666f7220746869732073797374656d3a3c2f703e0a0a3c7072653e3c636f64653e2f3220202d342020345c0a7c3334203320202d317c0a5c31202031202020312f0a3c2f636f64653e3c2f7072653e0a0a3c703e492068617665207772697474656e20746869732063757272656e746c793a3c2f703e0a0a3c7072653e3c636f64653e636c617373206d796d6174726978286f626a656374293a0a20202020646566205f5f696e69745f5f2873656c66293a0a20202020202020206f3131203d204e6f6e650a20202020202020206f3132203d204e6f6e650a20202020202020206f3132203d204e6f6e650a20202020202020206f3231203d204e6f6e650a20202020202020206f3232203d204e6f6e650a20202020202020206f3233203d204e6f6e650a20202020202020206f3331203d204e6f6e650a20202020202020206f3332203d204e6f6e650a20202020202020206f3333203d204e6f6e650a0a202020206465662073657428726f772c20636f6c756d6e2c2076616c7565293a0a2020202020202020737472696e67203d20276f272b73747228726f77292b73747228636f6c756d6e292b27203d20272b7374722876616c7565290a20202020202020206578656328737472696e67290a0a2020202064656620736f6c76652873656c662c206c697374776974687269676874736964657468696e6773293a0a2020202020202020234865726520492077616e7420746f20736f6c7665207468652073797374656d2e205468697320636f64652073686f756c6420726561642020746865207468726565202020200a20202020202020202376616c756573206f7574206f6620746865206c69737420616e6420736f6c766573207468652073797374656d2049742073686f756c642072657475726e207468650a20202020202020202376616c75657320666f7220782c207920616e64207a20696e2061207475706c653a2028782c20792c207a290a2020202020202020706173730a3c2f636f64653e3c2f7072653e0a0a3c703e492073656172636865642061206d6f64756c6520746f20736f6c7665206c696e65617220616c67656272612070726f6e6c656d732c20616e64204920666f756e64206e756d70792e204927766520736561726368656420696e20746865206d616e75616c20627574206469646e27742066696e64207175697465206d7920736f6c7574696f6e206f66206d792070726f626c656d3c2f703e0a0a3c703e486f772063616e204920777269746520746865203c636f64653e736f6c76653c2f636f64653e2066756e63746f696e3f3c2f703e0a0a3c703e456469743a3c2f703e0a0a3c703e707974686f6e2073686f756c6420696e7465727072657465206974206c696b6520746869733c2f703e0a0a3c7072653e3c636f64653e2f6f31312c206f32312c206f33315c2020203132330a7c6f32312c206f32322c206f33327c203d203435360a5c6f33312c206f33322c206f33332f2020203738390a3c2f636f64653e3c2f7072653e0a0a3c703e456469743a20492077616e7420746f20736f6c766520697420772065786163746c79203320766172732c20616e642072657475726e2069742061732061203c7374726f6e673e7475706c653c2f7374726f6e673e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["algorithm","matlab","matrix","linear-algebra"]', '0', 34, 0, 1, 1459643296, 1459629423, 36378432, 'http://stackoverflow.com/questions/36378432/optimized-distance-calculation-for-data-cube', 'Optimized Distance Calculation for Data Cube', 0x3c703e497320746865726520616e206f7074696d697a656420736f6c7574696f6e20666f722063616c63756c6174696e6720612064697374616e6365206d617472697820666f72207468652064697374616e636573206265747765656e20736c6963657320696e206120637562653f20466f72206578616d706c652c20492068617665206120646174612063756265203c636f64653e433c2f636f64653e20776974682064696d656e73696f6e73206e2674696d65733b6d2674696d65733b742e20492077616e7420746865203c636f64653e693c2f636f64653e2d74682c203c636f64653e6a3c2f636f64653e2d746820696e646578206f66206d792064697374616e6365206d6174726978203c636f64653e443c2f636f64653e20746f20626520657175616c20746f203c2f703e0a0a3c7072653e3c636f64653e4428692c6a29203d206e6f726d2843283a2c3a2c69292d43283a2c3a2c6a29290a3c2f636f64653e3c2f7072653e0a0a3c703e416e6420492764206c696b6520746f20646f2074686973206e6f6e2d6974657261746976656c792e203c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","numpy","linear-algebra","eigenvalue","eigenvector"]', '1', 37, 2, 1, 1459753584, 1459717265, 36391125, 'http://stackoverflow.com/questions/36391125/numpy-modal-matrix-and-diagonal-eigenvalues', 'Numpy - Modal matrix and diagonal Eigenvalues', 0x3c703e492077726f746520612073696d706c65204c696e65617220416c676562726120636f646520696e20507974686f6e204e756d707920746f2063616c63756c6174652074686520446961676f6e616c206f6620456967656e56616c7565732062792063616c63756c6174696e6720244d5e7b2d317d2e412e4d2420284d20697320746865204d6f64616c204d61747269782920616e64206974277320776f726b696e6720737472616e67652e3c2f703e0a0a3c703e4865726527732074686520436f6465203a3c2f703e0a0a3c7072653e3c636f64653e696d706f7274206e756d7079206173206e700a0a6172726179203d206e702e6172616e6765283136290a6172726179203d2061727261792e7265736861706528342c202d31290a7072696e74286172726179290a0a5b5b20302020312020322020335d0a205b20342020352020362020375d0a205b20382020392031302031315d0a205b31322031332031342031355d5d0a0a656967656e76616c7565732c20656967656e766563746f7273203d206e702e6c696e616c672e656967286172726179290a0a7072696e7420656967656e76616c7565730a5b2020332e3234363432343932652b303120202d322e3436343234393230652b3030202020312e3932393739373934652d313520202d342e3039353736303039652d31365d0a0a7072696e7420656967656e766563746f72730a5b5b2d302e3131343137363435202d302e37333237373831202020302e35343530303136342020302e30303133353135315d0a205b2d302e3333303030343620202d302e3238393734383335202d302e36383630323637312020302e34303634343530345d0a205b2d302e35343538333237352020302e3135333238313339202d302e3236323935313520202d302e38313639343436205d0a205b2d302e37363136363038392020302e35393633313131332020302e34303339373635372020302e34303931343830355d5d0a0a696e7665727365456967656e566563746f7273203d206e702e6c696e616c672e696e7628656967656e766563746f72732920234d5e282d31290a646961676f6e616c3d20696e7665727365456967656e566563746f72732e646f74286172726179292e646f7428656967656e766563746f72732920234d5e282d31292e412e4d0a0a7072696e7428646961676f6e616c290a5b5b2020332e3234363432343932652b303120202d312e3036353831343130652d3134202020352e3332393037303532652d3135202020302e3030303030303030652b30305d0a205b2020372e3534393531363537652d313520202d322e3436343234393230652b303020202d312e3732303834353639652d313520202d322e3232303434363035652d31365d0a205b202d322e3830373337323133652d3135202020312e3436373638353033652d3135202020322e3333353437383532652d3136202020372e3235353932353631652d31365d0a205b202d362e3232333139383633652d313520202d392e3639363536303830652d313620202d312e3338303530363538652d3330202020312e3937323135323236652d33315d5d0a3c2f636f64653e3c2f7072653e0a0a3c703e7468652066696e616c2027646961676f6e616c27206d61747269782073686f756c64206265206120646961676f6e616c206d6174726978207769746820456967656e56616c756573206f6e20746865206d61696e20646961676f6e616c20616e64207a65726f7320656c736577686572652e206275742069742773206e6f742e2e2e207468652074776f206669727374206d61696e20646961676f6e616c2076616c7565732041524520656967656e76616c75657320627574207468652074776f207365636f6e64206172656e27742028616c74686f756768206a757374206c696b65207468652074776f207365636f6e6420656967656e76616c7565732c207468657920617265206e6561726c79207a65726f292e3c2f703e0a0a3c703e616e6420627920746865207761792061206e756d626572206c696b6520242d312e3036353831343130652d313424206973206c69746572616c6c79207a65726f20736f20686f772063616e2049206d616b65206e756d70792073686f77207468656d206173207a65726f3f3c2f703e0a0a3c703e5768617420616d204920646f696e672077726f6e673f3c2f703e0a0a3c703e5468616e6b732e2e2e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","numpy","matrix","linear-algebra","determinants"]', '1', 81, 3, 3, 1459752664, 1459749800, 36395509, 'http://stackoverflow.com/questions/36395509/python-numpy-treat-really-small-numbers-as-zero', 'Python Numpy - Treat really small numbers as zero', 0x3c703e492077616e7420746f2063616c63756c617465207468652044657465726d696e616e74206f6620612053696e67756c6172204d61747269782028776869636820686173206120302064657465726d696e616e74292077697468204e756d707920616e64207768656e2049207072696e74207468652064657465726d696e616e742069742073686f77732061207265616c6c7920736d616c6c206e756d62657220287768696368206973206e6561726c79207a65726f203d202d372e3039393734383134363939652d33302920627574206e6f74207a65726f20697473656c662e2e2e3c2f703e0a0a3c703e7768656e20492074727920746f207072696e74207468652064657465726d696e616e742065697468657220776974682025732c202564206f722025662c20736f6d6574696d65732069742773207a65726f2c20736f6d6574696d6573202d3020616e6420736f6d6574696d6573202d372e3039393734383134363939652d3330202e3c2f703e0a0a3c703e4865726527732074686520436f6465203a3c2f703e0a0a3c7072653e3c636f64653e696d706f7274206e756d7079206173206e700a0a6172726179203d206e702e6172616e6765283136290a6172726179203d2061727261792e7265736861706528342c202d31290a64657465726d696e616e74203d206e702e6c696e616c672e646574286172726179290a0a7072696e74282244657465726d696e616e742069732025732220252064657465726d696e616e74290a7072696e74282244657465726d696e616e742069732025642220252064657465726d696e616e74290a7072696e74282244657465726d696e616e742069732025662220252064657465726d696e616e74290a0a44657465726d696e616e74206973202d372e3039393734383134363939652d33300a44657465726d696e616e7420697320300a44657465726d696e616e74206973202d302e3030303030300a3c2f636f64653e3c2f7072653e0a0a3c703e486f772063616e2049206d616b65204e756d7079207472656174207265616c6c7920736d616c6c206e756d626572732073756368206173202d372e3039393734383134363939652d3330206173207a65726f20616e642073686f77207a65726f20746f206d652e204920616c736f2061736b6564203c6120687265663d2268747470733a2f2f737461636b6f766572666c6f772e636f6d2f7175657374696f6e732f33363339313132352f6e756d70792d6d6f64616c2d6d61747269782d616e642d646961676f6e616c2d656967656e76616c756573223e74686973207175657374696f6e3c2f613e206265666f72652c20696620796f752074616b652061206c6f6f6b20617420746865206d617472697820796f7520736565207468617420697427732066696c6c65642077697468207265616c6c7920736d616c6c206e756d6265727320627574206e6f74207a65726f207768696c652069742073686f756c64206265206120646961676f6e616c206d61747269782077697468206e756d62657273206f6e2074686520646961676f6e616c20616e64207a65726f7320656c736577686572652e2e2e3c2f703e0a0a3c703e5468616e6b20796f752e2e2e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","octave","linear-algebra"]', '1', 29, 1, 0, 1459776027, 1459772778, 36402622, 'http://stackoverflow.com/questions/36402622/octave-access-value-from-a-matrix-by-passing-indices-in-a-vector', 'Octave: Access value from a matrix by passing indices in a vector?', 0x3c703e49206e65656420746f206163636573732f656469742076616c75657320696e20616e203c636f64653e6e3c2f636f64653e2064696d656e73696f6e616c206d6174726978203c636f64653e4d3c2f636f64653e2c2062792070617373696e67206120766563746f72203c636f64653e563c2f636f64653e2c20636f6e7461696e696e6720696e64696365732e3c2f703e0a0a3c703e6c65743c62723e0a3c636f64653e4d203d205b20312c322c333b0a20202020202020342c352c363b0a20202020202020372c382c393b5d3b3c2f636f64653e203c2f703e0a0a3c703e696e64657820766563746f72732062653c2f703e0a0a3c703e3c636f64653e56313d5b322c315d3b0a2056323d5b312c325d3b3c2f636f64653e3c2f703e0a0a3c703e6e6f772c20203c636f64653e4d285631293c2f636f64653e2073686f756c642067697665203c636f64653e343c2f636f64653e203c62723e200a616e6420203c636f64653e4d285632293c2f636f64653e2073686f756c642067697665203c636f64653e323c2f636f64653e3b3c2f703e0a0a3c703e70726f626c656d206973203c636f64653e6e3c2f636f64653e206973206e6f7420666978656420616e64204920646f6e27742077616e7420646f206c6f6f70696e6720746f206163636573732076616c756573206c696b65203c636f64653e4d286964785f312c6964785f322c2e2e2e6964785f6e293c2f636f64653e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["r","linear-algebra"]', '0', 11, 1, -1, 1459783730, 1459783265, 36406629, 'http://stackoverflow.com/questions/36406629/is-there-a-way-to-find-the-row-column-spaces-of-a-matrix-in-r', 'Is there a way to find the Row/Column spaces of a matrix in R?', 0x3c703e492077617320706f7365642074686973207175657374696f6e206279206120636f2d776f726b657220616e642074686520616e73776572206973206578706563746564206f66206d652e204265696e67207175697465206e657720746f20522c2061732077656c6c206173206f6e6c79206265696e672068616c66776179207468726f756768206d79206669727374206c696e65617220616c676562726120636f757273652c20686f757273206f6620736561726368696e6720646964206e6f74207969656c6420616e20616e737765722e20416e792068656c70206865726520776f756c64206265206d756368206170707265636961746564213c2f703e0a0a3c703e4920756e6465727374616e642074686973207175657374696f6e20697320666169726c7920766167756520616e64206e6f742064657461696c65642c2062757420746861742069732065786163746c7920686f772069742077617320706f73656420746f206d652e20492077696c6c2074727920746f2061646420616e792064657461696c732069662061736b65642e3c2f703e0a0a3c703e5468697320697320616c736f206d79206669727374207175657374696f6e206f6e20686572652c20736f20492061706f6c6f67697a65206966204920616d206e6f742070726f7065726c7920706f73696e672061207175657374696f6e2e204665656c206672656520746f206372697469717565206d652c204920616d206865726520746f206c6561726e2e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28');
INSERT INTO `so_questions` (`tags`, `is_answered`, `view_count`, `answer_count`, `score`, `last_activity_date`, `creation_date`, `question_id`, `link`, `title`, `body`, `has_more`, `quota_max`, `quota_remaining`, `createdAt`, `updatedAt`) VALUES
('["python","scipy","linear-algebra"]', '0', 25, 0, 1, 1459888308, 1459888308, 36436478, 'http://stackoverflow.com/questions/36436478/scipy-linearoperator-on-a-matrix', 'Scipy LinearOperator on a matrix', 0x3c703e4920686176652061206c696e6561722066756e6374696f6e203c636f64653e413c2f636f64653e20746861742077686f736520696e70757420616e64206f7574707574206973203c636f64653e286d2c6e293c2f636f64653e6e756d70792061727261792e20492077616e7420746f20757365204347206f7220474d52455320746f20736f6c766520612073797374656d203c636f64653e41287829203d20623c2f636f64653e2e20497320746865726520616e792077617920492063616e20646566696e65207363697079203c636f64653e4c696e6561724f70657261746f723c2f636f64653e20776974686f757420726573686170696e672074686520696e70757420616e64206f757470757420696e73696465206d792066756e6374696f6e203c636f64653e413c2f636f64653e3f3c2f703e0a0a3c703e4578616d706c653a3c2f703e0a0a3c7072653e3c636f64653e696d706f7274206e756d7079206173206e700a696d706f72742073636970792e7370617273652e6c696e616c67206173206c696e616c670a0a61203d206e702e617272617928205b205b312c325d202c205b332c345d205d20290a64656620412876293a0a2020202072657475726e2061202a20760a0a2320492077616e7420746f20646f2074686973206275742074686973206661696c732e20416e79206f746865720a2320736f6c7574696f6e207468617420646f65736e277420696e766f6c766520726573686170696e673f0a6c696e5f6f70203d206c696e616c672e4c696e6561724f70657261746f7228202828322c32292c28322c3229292c206d61747665633d4120290a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","linear-algebra","covariance","pca","variance"]', '1', 28, 1, 0, 1459978640, 1459907447, 36440064, 'http://stackoverflow.com/questions/36440064/pca-same-explained-variance-ratio-for-different-number-of-components', 'PCA : same explained variance ratio for different number of components', 0x3c703e49276d20747279696e6720746f20756e6465727374616e64205043412e20492068617665206120332d64696d656e73696f6e616c20646174617365742c2049206275696c742074776f20504341206d6f64656c732c206f6e652077697468203220636f6d706f6e656e74732c20616e6420746865206f746865722077697468203320636f6d706f6e656e74732e20486f77657665722c204920646f6e277420756e6465727374616e642077687920746865206578706c61696e65642076617269616e63657320726174696f20666f7220626f746820504341206d6f64656c73206973207468652073616d652e3c2f703e0a0a3c7072653e3c636f64653e4d6f64656c2077697468203220636f6d706f6e656e74733a205b20302e36303739323439342020302e33313233343637395d0a4d6f64656c2077697468203320636f6d706f6e656e74733a205b20302e36303739323439342020302e33313233343637392020302e30373937323832385d0a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","matrix","linear-algebra","eigen"]', '1', 58, 1, 1, 1459930049, 1459922408, 36442720, 'http://stackoverflow.com/questions/36442720/solving-a-tridiagonal-matrix-using-eigen-package-in-c', 'Solving a Tridiagonal Matrix using Eigen package in C++', 0x3c703e41742070726573656e742049206861766520612073797374656d203c7374726f6e673e41783c2f7374726f6e673e203d203c7374726f6e673e623c2f7374726f6e673e20737563682074686174203c7374726f6e673e413c2f7374726f6e673e206973206120747269646961676f6e616c206d61747269782e205573696e6720456967656e2c20492063616e20616c726561647920736f6c766520746869732073797374656d207573696e6720746865206c696e653a3c2f703e0a0a3c703e78203d20412e636f6c506976486f757365686f6c646572517228292e736f6c76652862293b3c2f703e0a0a3c703e486f77657665722c2073696e6365203c7374726f6e673e413c2f7374726f6e673e206973206120747269646961676f6e616c206d6174726978207468697320776f726b732072617468657220736c6f776c7920636f6d706172656420746f2073617920696e204d41544c41422c2073696e6365207468652070726f6772616d206973206d6f73746c79206c696b656c7920636f6d707574696e672074686520736f6c7574696f6e20666f7220616c6c2076616c75657320726174686572207468616e206a757374206f6e2074686520746872656520646961676f6e616c732e2043616e20456967656e20736f6c766520746869732073797374656d206661737465723f20546869732069732070726f6261626c7920717569746520612064756d62207175657374696f6e73206275742049276d20666169726c79206e657720746f20432b2b20616e642049206f6e6c792073746172746564207573696e6720456967656e20612066657720646179732061676f20736f20746865726527732061206c6f7420746f2074616b6520696e20617420746865206d6f6d656e7421205468616e6b7320696e20616476616e63652e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","arrays","matrix","linear-algebra","alglib"]', '0', 23, 0, 0, 1459970426, 1459950941, 36453304, 'http://stackoverflow.com/questions/36453304/how-can-i-create-an-array-of-matrices-in-with-for-alglib', 'How can I create an array of matrices in/with/for alglib', 0x3c703e49276d20747279696e6720746f206d616b6520616e206172726179206f66203264206d6174726963657320746f2063616c63756c6174652074686520656967656e76616c75657320776974682074686520416c676c6962206c69627261727920696e20432b2b2c2062757420492063616e27742066696e6420686f7720492063616e206d616b6520616e206172726179206f66206d6174726963657320286966207468697320697320706f737369626c652920746f2063616c63756c61746520746865697220656967656e76616c7565732e2049206b6e6f7720686f7720746f2063616c63756c6174652074686520656967656e76616c75657320616e6420656967656e766563746f7220666f722031206d61747269782c2062757420666f72207365766572616c206f66207468656d2c206174207468652073616d652074696d652c204920646f6e2774206b6e6f772e2043616e20616e796f6e652068656c70206d653f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["opengl","graphics","3d","linear-algebra"]', '0', 39, 1, 0, 1460019442, 1459977209, 36462460, 'http://stackoverflow.com/questions/36462460/opengl-screen-space-translation-of-perspective-camera-view', 'OpenGL screen-space translation of perspective camera view', 0x3c703e4920616d207573696e6720612070657273706563746976652070726f6a656374696f6e2063616d65726120696e204f70656e474c207769746820616e206579652d7461726765742d757020617070726f61636820616c6f6e6720746865206c696e6573206f66203c636f64653e676c754c6f6f6b417428293c2f636f64653e3c2f703e0a0a3c703e4920776f756c64206c696b6520746f206d6f76652074686520656e74697265203364207669657720746f206120646966666572656e74206c6f636174696f6e2077697468696e207468652032642077696e646f772c2061732073686f776e20696e2074686520696d6167652062656c6f773a3c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f7a595234342e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f7a595234342e706e672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e49206b6e6f7720746869732063616e20626520646f6e652077697468203c636f64653e676c56696577706f727428293c2f636f64653e2c20627574204920776f756c6420756c74696d6174656c79206c696b6520746f2062652061626c6520746f20726f7461746520746865203364207669657720696e206164646974696f6e20746f207472616e736c6174696e672069742c207768696368204920756e6465727374616e6420776f6e277420776f726b2077697468206120676c56696577706f727420617070726f6163682e3c2f703e0a0a3c703e4920616c736f20756e6465727374616e6420746861742074616b696e672061206e6f6e2d676c56696577706f727420617070726f6163682077696c6c207265717569726520746865206164646974696f6e616c2073746570206f66207374656e63696c696e672e2049276c6c206c656176652074686174207374657020666f72206c617465722e3c2f703e0a0a3c703e466f72206e6f772c2049276d20686f70696e6720746f2073696d706c79207472616e736c6174652074686520336420766965772061732073686f776e20696e2074686520696d6167652061626f7665202869676e6f72696e6720746865207374656e63696c696e67206973737565292e3c2f703e0a0a3c703e4974207365656d73206c696b65207472616e736c6174696e67207468652070726f6a656374696f6e206d61747269782069732074686520636f727265637420617070726f6163682c20686f776576657220746865207472616e736c6174696f6e20657874656e74206973206e6f7420776861742049206578706563742e20506572686170732049206e65656420746f207363616c652074686520706172616d657465722049276d207573696e673f20496e20616e7920636173652c2049276d20686f70696e6720736f6d656f6e652063616e206578706c61696e20686f7720746f20286d6f72652d6f722d6c657373292073696d756c6174652061207472616e736c617461626c652f726f74617461626c6520676c56696577706f727420666f72206120336420706572737065637469766520766965772e3c2f703e0a0a3c703e5468616e6b73213c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","numpy","scipy","linear-algebra","sparse-matrix"]', '1', 50, 3, 2, 1460255898, 1460130585, 36504001, 'http://stackoverflow.com/questions/36504001/creating-a-sparse-matrix-from-lists-of-sub-matrices-python', 'Creating a sparse matrix from lists of sub matrices (Python)', 0x3c703e54686973206973206d7920666972737420534f207175657374696f6e20657665722e204c6574206d65206b6e6f77206966204920636f756c6420686176652061736b656420697420626574746572203a293c2f703e0a0a3c703e4920616d20747279696e6720746f2066696e6420612077617920746f2073706c69636520746f676574686572206c69737473206f6620737061727365206d6174726963657320696e746f2061206c617267657220626c6f636b206d61747269782e203c2f703e0a0a3c703e49206861766520707974686f6e20636f646520746861742067656e657261746573206c69737473206f662073717561726520737061727365206d617472696365732c206d6174726978206279206d61747269782e20496e2070736575646f636f64653a3c2f703e0a0a3c7072653e3c636f64653e4c78203d205b4c78312c204c78312c202e2e2e204c786e5d0a4c79203d205b4c79312c204c79322c202e2e2e204c796e5d0a4c7a203d205b4c7a312c204c7a322c202e2e2e204c7a6e5d2020200a3c2f636f64653e3c2f7072653e0a0a3c703e53696e6365206561636820696e646976696475616c204c78312c204c7832206574632e206d617472697820697320636f6d70757465642073657175656e7469616c6c792c20746865792061726520617070656e64656420746f2061206c6973742d2d4920636f756c64206e6f742066696e6420612077617920746f20706f70756c61746520616e2061727261792d6c696b65206f626a65637420226f6e2074686520666c79222e3c2f703e0a0a3c703e4920616d206f7074696d697a696e6720666f722073706565642c20616e642074686520626f74746c656e65636b206665617475726573206120636f6d7075746174696f6e206f662043617274657369616e2070726f6475637473206974656d2d62792d6974656d2c2073696d696c617220746f207468652070736575646f636f64653a3c2f703e0a0a3c7072653e3c636f64653e4d202b3d204a5b692c6a5d202a205b204c7869202a4c786a202b204c79692a4c796a202b204c7a692a4c7a6a205d200a3c2f636f64653e3c2f7072653e0a0a3c703e666f7220616c6c20636f6d62696e6174696f6e73206f66203020266c743b3d20692c206a20266c743b3d206e2e20284a20697320616e206e2d64696d656e73696f6e616c20737175617265206d6174726978206f66206e756d62657273292e3c2f703e0a0a3c703e4974207365656d73207468617420766563746f72697a696e67207468697320627920636f6d707574696e6720616c6c207468652043617274657369616e2070726f647563747320696e206f6e65207374657020766961202870736575646f636f6465293a3c2f703e0a0a3c7072653e3c636f64653e4c203d205b205b4c78312c204c78322c202e2e2e4c786e5d2c0a2020202020205b4c79312c204c79322c202e2e2e4c796e5d2c0a2020202020205b4c7a312c204c7a322c202e2e2e4c7a6e5d205d0a70726f64756374203d204c2e54202a204c0a3c2f636f64653e3c2f7072653e0a0a3c703e776f756c64206265206661737465722e20486f77657665722c206f7074696f6e732073756368206173206e702e626d61742c206e702e76737461636b2c206e702e68737461636b207365656d20746f20726571756972652061727261797320617320696e707574732c20616e6420492068617665206c6973747320696e73746561642e203c2f703e0a0a3c703e497320746865726520612077617920746f20656666696369656e746c792073706c69636520746865207468726565206c69737473206f66206d6174726963657320746f67657468657220696e746f206120626c6f636b3f204f722c20697320746865726520612077617920746f2067656e657261746520616e206172726179206f6620737061727365206d61747269636573206f6e6520656c656d656e7420617420612074696d6520616e64207468656e206e702e76737461636b207468656d20746f6765746865723f3c2f703e0a0a3c703e5265666572656e63653a2053696d696c6172204d41544c414220636f64652c207573656420746f20636f6d70757465207468652048616d696c746f6e69616e206d617472697820666f72206e2d7370696e204e4d522073696d756c6174696f6e2c2063616e20626520666f756e6420686572653a3c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f7370696e64796e616d6963732e6f72672f5370696e2d44796e616d6963732d2d2d506172742d49492d2d2d4c6563747572652d30362e706870222072656c3d226e6f666f6c6c6f77223e687474703a2f2f7370696e64796e616d6963732e6f72672f5370696e2d44796e616d6963732d2d2d506172742d49492d2d2d4c6563747572652d30362e7068703c2f613e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["algorithm","optimization","matrix","linear-algebra","linear-programming"]', '0', 32, 0, -1, 1460218789, 1460218789, 36519490, 'http://stackoverflow.com/questions/36519490/find-a-dual-from-a-primal-in-linear-programming', 'Find a dual from a primal in Linear Programming', 0x3c703e49276d20776f726b696e67207769746820612067656e6572616c204c502070726f626c656d2c20776865726520492074727920746f20666f726d756c61746520746865206475616c2070726f626c656d2066726f6d20746865207072696d616c3a203c62723e0a3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f4c5a5649482e706e67222072656c3d226e6f666f6c6c6f77223e546865207072696d616c2070726f626c656d3c2f613e0a203c62723e3c62723e3c2f703e0a0a3c703e49206861766520636f6e766572746564207468652067656e6572616c204c502070726f626c656d20746f20697473207374616e6461726420666f726d2061732073686f776e2062656c6f773a0a3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f37346746562e706e67222072656c3d226e6f666f6c6c6f77223e546865207072696d616c20696e207374616e6461726420666f726d3c2f613e3c2f703e0a0a3c703e4275742077686174204920646f6e277420756e6465727374616e6420697320686f7720746865204120766563746f727320696e20746865207072696d616c2073686f756c6420626520726570726573656e74656420696e20697473206475616c2070726f626c656d2e2043616e2049206a75737420646f206d6174726978207472616e73706f6e656e74206f6e2041206c696b65204920646f206f6e206120312d44206d61747269783f3c2f703e0a0a3c703e5468616e6b7320666f7220616e792068656c702e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","linear-algebra","eigen3"]', '1', 31, 1, 1, 1460374722, 1460226017, 36520854, 'http://stackoverflow.com/questions/36520854/how-to-compute-the-symmetric-of-a-point-high-dimension-space-with-respect-to-a', 'How to compute the symmetric of a point (high dimension space) with respect to a hyperplane formed by a set of points?', 0x3c703e49276d207573696e6720432b2b20616e6420492077616e7420746f2063616c63756c617465207468652073796d6d6574726963206f66206120706f696e742077697468207265737065637420746f2061206879706572706c616e652e2049276d20696e2061203c7374726f6e673e64696d656e73696f6e20676976656e20617420657865637574696f6e2074696d653c2f7374726f6e673e2e3c2f703e0a0a3c703e4920686176652074686520706f696e747320696e20746865206879706572706c616e652e20536f20492063616c63756c6174656420746865206e6f726d616c20766563746f7220627920736f6c76696e67206120736574206f66206c696e656172206571756174696f6e732e205468656e20746f2067657420746865206879706572706c616e6520287769746820746865206e6f726d616c20616e64206120706f696e74292c207468652070726f6a656374696f6e206f662074686520666972737420706f696e7420616e642066696e616c6c79207468652073796d6d65747269632e3c2f703e0a0a3c703e49207472696564207573696e6720746865203c636f64653e656967656e333c2f636f64653e206c69627261727920627574206974207365656d73206974206e65656473207468652064696d656e73696f6e20746f20626520676976656e20617420636f6d70696c652074696d652e3c2f703e0a0a3c703e416e79206964656120746f20736f6c7665207468652070726f626c656d20776974682074686973206c69627261727920286f7220616e79206f74686572206f6e6529206f7220612073686f72742d637574206d6574686f64206172652077656c636f6d652e3c2f703e0a0a3c703e5468616e6b20796f7520696e20616476616e63652e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["optimization","linear-algebra","theano","theano.scan"]', '0', 19, 0, 0, 1460944637, 1460244110, 36523898, 'http://stackoverflow.com/questions/36523898/when-to-use-theano-scan-based-on-a-minimal-example', 'When to use theano.scan? (Based on a minimal example)', 0x3c703e546865616e6f2e7363616e2069732061206c6f6f70696e6720636f6e73747275637420746861742063616e20626520666173746572207468616e206120707974686f6e20666f722d6c6f6f702c2062757420736c6f776572207468616e20616e206571756976616c656e742022766563746f72697a65642220617070726f6163682e20203c7374726f6e673e5768656e20697320746865616e6f2e7363616e2022626574746572223c2f7374726f6e673e3f20202242657474657222207072696d6172696c79206d65616e73206661737465722c2062757420697320696e74656e64656420746f206c65617665206f7468657220666163746f7273206f70656e20666f7220636f6d6d656e742e2020546f20666f63757320746865207175657374696f6e2c206c6574277320636f6e73696465722074686973206d696e696d616c2070726f626c656d2e3c2f703e0a0a3c703e3c7374726f6e673e50726f626c656d3c2f7374726f6e673e3a20476976656e20746865203c656d3e6d3c2f656d3e2d62792d3c656d3e6b3c2f656d3e206d6174726978203c7374726f6e673e413c2f7374726f6e673e2c20616e642061203c656d3e6b3c2f656d3e2d62792d3c656d3e6d3c2f656d3e206d6174726978203c7374726f6e673e423c2f7374726f6e673e2c20636f6d707574652074686520766563746f72203c656d3e633c2f656d3e2c2077686f7365203c656d3e693c2f656d3e746820656c656d656e742069732074686520646f742070726f64756374206f6620726f77203c656d3e693c2f656d3e206f66203c7374726f6e673e413c2f7374726f6e673e207769746820636f6c756d6e203c656d3e693c2f656d3e206f66203c7374726f6e673e423c2f7374726f6e673e2e3c2f703e0a0a3c703e3c7374726f6e673e536f6c7574696f6e207573696e67205363616e3c2f7374726f6e673e3a3c62723e0a5765276c6c207061737320696e203c7374726f6e673e413c2f7374726f6e673e20616e6420746865207472616e73706f7365206f66203c7374726f6e673e423c2f7374726f6e673e2c2061732073657175656e6365732c20746f207363616e2c2077686963682077696c6c207468656e20706169722075702074686520636f72726573706f6e64696e6720726f7773206f66203c7374726f6e673e413c2f7374726f6e673e20616e6420636f6c756d6e73206f66203c7374726f6e673e423c2f7374726f6e673e20746f206265206f70657261746564206f6e2e202057652074656c6c20697420746f2074616b652074686520646f742070726f64756374206f66206561636820706169722c20676976696e6720746865206465736972656420726573756c742e3c2f703e0a0a3c7072653e3c636f64653e66726f6d20746865616e6f20696d706f72742074656e736f722c207363616e2c2066756e6374696f6e0a41203d2074656e736f722e646d617472697828274127290a42203d2074656e736f722e646d617472697828274227290a432c2075706461746573203d20746865616e6f2e7363616e280a20202020666e3d6c616d62646120782c793a20542e646f7428782c79292c0a202020206f7574707574735f696e666f3d4e6f6e652c0a2020202073657175656e6365733d5b412c20422e545d20202023205472616e73706f736520423a20726f7773206f6620412067657420706169726564207769746820636f6c73206f6620420a290a0a66203d2066756e6374696f6e285b412c425d2c2043290a3c2f636f64653e3c2f7072653e0a0a3c703e3c7374726f6e673e22566563746f72697a65642220536f6c7574696f6e3c2f7374726f6e673e3c62723e0a486572652c207765276c6c20646f206f7264696e617279206d6174726978206d756c7469706c69636174696f6e2e2020546865203c656d3e693c2f656d3e2c3c656d3e6a3c2f656d3e746820656c656d656e7420696e2074686520726573756c7420726570726573656e74732074686520646f742070726f64756374206f6620746865203c656d3e693c2f656d3e746820726f77206f66203c7374726f6e673e413c2f7374726f6e673e207769746820746865206a746820726f77206f66203c7374726f6e673e423c2f7374726f6e673e2c20736f2077652063616e206a7573742074616b652074686520656c656d656e7473206f6e20746865206d61696e20646961676f6e616c20746f20676574206f757220726573756c742e3c2f703e0a0a3c7072653e3c636f64653e66726f6d20746865616e6f20696d706f72742074656e736f722c207363616e2c2066756e6374696f6e0a41203d2074656e736f722e646d617472697828274127290a42203d2074656e736f722e646d617472697828274227290a43203d2074656e736f722e646f7428412c42292e646961676f6e616c28290a0a66203d2066756e6374696f6e285b412c425d2c2043290a3c2f636f64653e3c2f7072653e0a0a3c703e3c7374726f6e673e5175657374696f6e733c2f7374726f6e673e3c2f703e0a0a3c756c3e0a3c6c693e536f2c207768696368206973206661737465723f20203c2f6c693e0a3c6c693e4e6f7469636520686f7720746865206d6174726978206d756c7469706c69636174696f6e20696e2074686520766563746f72697a656420736f6c7574696f6e20696d706c696573203c656d3e6d3c2f656d3e3c7375703e323c2f7375703e20646f742070726f64756374732c206275742074686520726573756c74206f6e6c792075736573203c656d3e6d3c2f656d3e206f66207468656d202d2d20646f657320746865616e6f206f7074696d697a65203c656d3e663c2f656d3e20736f2074686174206f6e6c7920746865203c656d3e6d3c2f656d3e206e656564656420646f742070726f6475637473206172652061637475616c6c7920636f6d70757465643f3c2f6c693e0a3c2f756c3e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c","matrix","linear-algebra"]', '1', 43, 2, 3, 1460267188, 1460261572, 36525701, 'http://stackoverflow.com/questions/36525701/efficient-way-to-find-rows-with-same-elements-in-a-3d-matrix-in-c', 'Efficient way to find rows with same elements in a 3D matrix in C', 0x3c703e4920686176652061203344206d6174726978203c636f64653e6d61745b3130305d5b3130305d5b3130305d3c2f636f64653e2e20576861742069732074686520656666696369656e742077617920746f2066696e64206120726f7720776974682073616d6520656c656d656e74732074686174206170706561727320696e203c636f64653e6d61745b305d5b5d5b5d2c206d61745b315d5b5d5b5d2c2e2e2e2e2c6d61745b39395d5b5d5b5d3c2f636f64653e3f200a412073696d706c6520617070726f61636820776f756c6420626520636f6d706172696e67206561636820726f77206f66203c636f64653e6d61745b305d5b5d5b5d3c2f636f64653e20746f20616c6c20726f7773206f66207468652072656d61696e696e67203939206d617472696365732c2062757420697420776f756c646e2774206265207665727920656666696369656e742849206775657373292e2049732074686572652061206265747465722077617920746f20646f2069743f2020203c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","matrix","linear-algebra","eigenvalue"]', '1', 24, 1, 0, 1460391295, 1460383944, 36551182, 'http://stackoverflow.com/questions/36551182/how-can-i-find-the-joint-eigenvalues-of-two-matrices-in-matlab', 'How can I find the joint eigenvalues of two matrices in MATLAB?', 0x3c703e496620746865206a6f696e7420656967656e76616c756573206f66206d61747269636573203c7374726f6e673e413c2f7374726f6e673e20616e64203c7374726f6e673e423c2f7374726f6e673e2061726520646566696e65642061732074686520726f6f7473206f6620746865206571756174696f6e200a646574286c616d626461202a203c7374726f6e673e413c2f7374726f6e673e202d203c7374726f6e673e423c2f7374726f6e673e29203d20302c0a686f772063616e204920736f6c7665207468697320696e204d41544c41423f203c2f703e0a0a3c703e496e20706172746963756c61722c204920616d206e6f74207375726520686f772065786163746c79206c616d62646120697320646566696e6564202d206974206f6276696f75736c79206e6565647320746f2062652061206d6174726978206f7220766563746f722c206173206f746865727769736520746865726520776f756c64206f6e6c79206265206f6e65206a6f696e7420656967656e76616c75652e20416c736f2c204920616d206e6f74207375726520696620746865726520697320616e7920696e2d6275696c742066756e6374696f6e2c206f722069662c207361792c20667a65726f20666f722066696e64696e672074686520726f6f7473206f66206e6f6e6c696e6561722066756e6374696f6e73206e6565647320746f20626520757365642e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["r","optimization","linear-algebra","rcpp"]', '1', 24, 1, 0, 1460464944, 1460464700, 36573523, 'http://stackoverflow.com/questions/36573523/optimisation-of-backsolve-base-function', 'Optimisation of backsolve base function', 0x3c703e4920616d20776f6e646572696e6720696620746865726520636f756c6420626520616e7920706f737369626c652077617320746f206f7074696d697a65207468652062617365207061636b6167652066756e6374696f6e206261636b736f6c7665203f20666f72206578616d706c65207573696e6720526363702e2049206861766520676f6f676c65642061206269742062757420636f756c646e27742066696e6420616e7920726573706f6e73653a3c2f703e0a0a3c6f6c3e0a3c6c693e3c703e697320746865726520616e20616c7465726e6174697665207061636b61676520646f696e6720626574746572203f3c2f703e3c2f6c693e0a3c6c693e3c703e6966206e6f20697320697420776f727468207374726976696e6720746f20646f206974206279206d7973656c66203f2062656361757365206d617962652074686520626173652066756e6374696f6e20697320616c72656164792077656c6c206f7074696d697365643c2f703e3c2f6c693e0a3c2f6f6c3e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","arrays","linear-algebra"]', '1', 32, 1, -4, 1460480150, 1460479515, 36579365, 'http://stackoverflow.com/questions/36579365/how-do-i-know-number-of-cells-between-two-points-in-array', 'How do i know number of cells between two points in array?', 0x3c703e69206861766520324420617272617920616e64206769766520746f7720706f696e74732070312878312c79312920616e642070322878322c793229202c206973207468617420616e792077617920746f206b6e6f77206e756d626572206f662063656c6c73206265747765656e207468656d203f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matrix","linear-algebra","linear","diagonal"]', '0', 19, 0, 0, 1460566054, 1460566054, 36604780, 'http://stackoverflow.com/questions/36604780/solver-for-a-nine-diagonal-linear-system', 'Solver for a nine diagonal linear system', 0x3c703e497320746865726520616e7920736f6c76657220666f72206120392d646961676f6e616c2073797374656d206f66206571756174696f6e73207769746820706572696f64696320626f756e6461726965733f3c2f703e0a0a3c703e546865206b696e64206f66206d61747269636573204920616d20726566657272696e67206c6f6f6b206c696b65207468697320287768697465207374616e647320666f72206e6f6e2d7a65726f20656e7472696573293a3c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f6f456b52702e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f6f456b52702e706e672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e492063616e206e6f742066696e6420612062657474657220617661696c61626c6520617070726f616368207468616e2063616c6c696e6720612073706172736520736f6c7665722e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["ios","iphone","linear-algebra","armadillo"]', '0', 20, 0, 0, 1460576955, 1460575444, 36607763, 'http://stackoverflow.com/questions/36607763/incorporating-armadillo-library-in-an-ios-application', 'Incorporating Armadillo library in an iOS application', 0x3c703e4920616d20747279696e6720746f20696e636f72706f726174652041726d6164696c6c6f206c696e6561722d616c6765627261206c69627261727920696e20616e20694f53206170706c69636174696f6e2e2055706f6e206275696c64696e672c204920616d2067657474696e672074686520666f6c6c6f77696e67206572726f723a3c2f703e0a0a3c626c6f636b71756f74653e0a20203c703e6c643a206275696c64696e6720666f7220694f532053696d756c61746f722c20627574206c696e6b696e6720616761696e73742064796c6962206275696c7420666f720a20204d61634f53582066696c6520272f7573722f6c6f63616c2f6c69622f6c696261726d6164696c6c6f2e64796c69622720666f72206172636869746563747572650a20207838365f363420636c616e673a206572726f723a206c696e6b657220636f6d6d616e64206661696c65642077697468206578697420636f646520312028757365202d7620746f0a202073656520696e766f636174696f6e293c2f703e0a3c2f626c6f636b71756f74653e0a0a3c703e4920756e6465727374616e642074686174207768656e2049206275696c742041726d6164696c6c6f206c696272617279202876657220362e352920697420646964206e6f74206275696c7420666f7220694f532e20492068617665207365656e2074697073206f6e206372656174696e67206120666174206c696272617279206275742068617665206265656e20756e61626c6520746f206d6f646966792041726d6164696c6c6f206d616b6566696c6520746f20646f20736f2e204659492c204920616d206e6577626965207768656e20697420636f6d657320746f204c696e75782f694f532f78436f646520646576656c6f706d656e7420656e7669726f6e6d656e742e3c2f703e0a0a3c703e416e792073756767657374696f6e206973206d7563682061707072656369617465642e20203c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["algorithm","linear-algebra","computational-geometry","graph-algorithm","trigonometry"]', '0', 17, 1, 0, 1460682067, 1460656358, 36630482, 'http://stackoverflow.com/questions/36630482/how-to-follow-the-path-of-a-super-ellipse-with-2-linked-axis', 'How to Follow the Path of a Super Ellipse with 2 Linked Axis', 0x3c703e4920686176652074776f2061786973206c696e6b656420746f676574686572203b204178697320412c20616e64204178697320422e2041786973204220697320617474616368656420746f2074686520656e64206f662041786973204120616e6420736f2069747320706f696e74206f66206f726967696e2063616e207661727920776974682074686520616e676c65206f6620417869732041202e20417474616368656420746f20417869732042206973206120436972636c652077686f7365204469616d657465722069732031302028616e642063616e206265636f6d6520736d616c6c6572292e2049206e65656420746f206d6f766520746865206564676520706f696e74206f662074686520636972636c6520746f20696e7465727365637420612053757065722d456c6c697073652061742065616368206f662033382043617274657369616e20706f696e747320782c792e20536f2074686520656e6420706f696e74206f66206d7920617869732042202d2063656e746572206f662074686520636972636c652073686f756c6420666f6c6c6f77207468652073616d6520626173696320706174682061732074686520333820706f696e7473206f662074686520737570657220656c6c69707365202d20726164697573206f6620636972636c652e204f6e63652049206861766520746865736520706f696e7473202d20492077696c6c206e65656420746f2064657465726d696e652074686520706f736974696f6e206f662041786973204120785f322c795f3220616e6420616e676c6520286f72206d6f726520617070726f7072696174656c79206a757374207468652064697374616e63652066726f6d20302064656772656520616e676c6520746f2072656163682074686520726571756972656420616e676c6520746f20706f736974696f6e20785f322c795f322e2049207468656e206e65656420746f20706f736974696f6e2041786973204220776974682072656c6174696f6e20746f2041786973204120696e206f7264657220746f20686176652041786973204220585f332c595f33206d617463682074686520666f6c6c6f77696e67206f66207468652053757065722d456c6c69707365207768657265207468652063656e746572206f662074686520636972636c6520697320737570706f73656420746f2062652e3c2f703e0a0a3c703e49206861766520612064726177696e6720617474616368656420616e64206120706c6f7420696e20457863656c207768657265204920616d206f666620617320796f752063616e207365652074686520626f7720746965206973206e6f74207768617420492073686f756c6420686176652e2049206861766520616c736f20696e636c756465642074686520706f696e747320746f2074686520737570657220656c6c6970736520616c6f6e67207769746820736f6d6520717569636b20706f696e7473206f6e207468652067726170682e204920616d206e6f742061206d617468206d616a6f72202d204920616d2077696c6c696e6720746f206c6561726e20696620796f7520706f737420746865206e616d65206f6620616e206571756174696f6e202d20736f2066617220492068617665206c6561726e65642061626f7574206361726e6f742c20706172616d6574726963206571756174696f6e20666f7220636972636c657320616e6420666f726d756c617320666f722070617261626f6c6173202d20627574204920616d207374696c6c20686176696e672074726f75626c652e3c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f55633932652e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f55633932652e706e672220616c743d2247726170686963616c20526570726573656e746174696f6e206f66207468652050726f626c656d223e3c2f613e0a3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f44444b774e2e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f44444b774e2e706e672220616c743d22457863656c204c61796f7574206f6620706c6f7474696e6720706f696e7473202d2074686520696e6e65722070617468206973206e6f742070726f7065726c7920666f6c6c6f7765642e223e3c2f613e3c2f703e0a0a3c7072653e3c636f64653e417869732041205261646975732031332220696d6167652069732039302064656772656520726f746174696f6e0a585f53756231202c20595f53756231200a2d362e352020202c20350a0a4178697320422052616469757320392220696d616765206973203138302064656772656520726f746174696f6e0a585f53756232202c20595f53756232200a20362e352020202c20350a0a436972636c65204469616d6574657220313022200a436972636c6520526164697573203522200a0a537570657220456c6c69707365200a402031322277696474680a4020382e373522204465657020566572746578202d382e37350a0a506f696e747320416c6f6e672074686520537570657220456c6c697073652e0a302e303030302c2020302e303030300a302e323138382c202d302e363235300a302e323138382c202d312e323530300a302e323433332c202d312e383735300a302e333239302c202d322e353030300a302e343735332c202d332e313037330a302e363830342c202d332e373039310a302e393432342c202d342e323939300a312e323538352c202d342e383731320a312e363235352c202d352e343139370a322e303339372c202d352e393338380a322e343936372c202d362e343233330a322e393932302c202d362e383638320a332e353230332c202d372e323838390a342e303736342c202d372e373231330a342e363534342c202d382e303530300a352e323238352c202d382e333535330a352e373532352c202d382e353030300a362e323138382c202d382e353531360a362e363835312c202d382e353030300a372e313839312c202d382e333535330a372e373833322c202d382e303530300a382e333631322c202d372e373231330a382e393137332c202d372e323838390a392e343435362c202d362e383638320a392e393430392c202d362e343233330a31302e333937392c2d352e393338380a31302e383132312c2d352e343139370a31312e313739312c2d342e383731320a31312e343935322c2d342e323939300a31312e373537322c2d332e373039310a31312e393632332c2d332e313037330a31322e313038362c2d322e353030300a31322e313934332c2d312e383735300a31322e323138382c2d312e323530300a31322e323138382c2d302e363235300a31322e343337362c20302e303030300a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","linear-algebra"]', '1', 55, 1, -1, 1460668616, 1460666821, 36633667, 'http://stackoverflow.com/questions/36633667/calculate-angle-with-xyz-rotation-and-my-enemy-his-xyz-rotation-linear-alge', 'Calculate angle with XYZ + rotation and my enemy his XYZ + rotation [Linear Algebra]', 0x3c703e54616c6c792d686f2063686170732c3c2f703e0a0a3c703e54686973207175657374696f6e20636f6e7369646572732074686520617274206f66206c696e65617220616c6765627261206120706c61636520696e206d61746820776865726520492066616c6c2073686f727420746f20736f6c766520746869732e20536f204920616d20686f70696e6720796f75206775797320636f756c642068656c70206d65206f7574203a442e3c2f703e0a0a3c703e4920616d20747279696e6720746f2063726561746520612073696e676c65706c61796572206175746f6b69636b657220636865617420666f7220612067616d652063616c6c6564206d6f756e7420616e6420626c6164652e2054686520676f616c206f662074686973206175746f6b69636b657220697320746f20616c77617973207375636365737366756c6c79206b69636b2074686520706c61796572207573696e672074686520706f776572206f66206d6174682e2049206d616e6167656420746f20616368696576652061206c6f74206f66207468696e6773207468616e6b7320746f207468652068656c70206f662074686520696e7465726e6574202861696d626f742c6573702c2e2e2e2920627574206e6f77204920616d206b696e646120737475636b2073696e6365204920646f6e2774206b6e6f7720656e6f756768206c696e65617220616c676562726120746f2067657420616e676c6573206574632e2054686573652061726520746865207468696e677320492068617665203c2f703e0a0a3c756c3e0a3c6c693e3c703e4d792058595a2028706c6179657220706f736974696f6e293c2f703e3c2f6c693e0a3c6c693e3c703e526f746174696f6e207374617274696e672066726f6d20636f6f7264696e6174652028302c30292072616469616e7320636f6e76657274656420746f206465677265657320282d3138303b313830293c2f703e3c2f6c693e0a3c6c693e3c703e456e656d792058595a20616e6420726f746174696f6e3c2f703e3c2f6c693e0a3c2f756c3e0a0a3c703e4120706c617965722063616e207375636365737366756c6c79206b69636b20616e6f7468657220706c61796572206966207468652064697374616e6365206973206c657373207468616e200a3120666c6f617420616e642074686520706c6179657220697320696e2066726f6e74206f6620746865206f7468657220706c617965722e2048656e6365207768792049206e65656420746f2063616c63756c6174652074686520616e676c65206265747765656e2074686520646972656374696f6e204920616d206c6f6f6b696e6720616e642074686520656e656d79206869732058595a2e20492077696c6c206472617720696e207061696e742077686174203c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f4b755958702e706e67222072656c3d226e6f666f6c6c6f77223e492077616e7420746f20616368696576652e3c2f613e3c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f4b755958702e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f4b755958702e706e672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e0a3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f30535666572e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f30535666572e706e672220616c743d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f30535666572e706e67223e3c2f613e3c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f30535666572e706e67222072656c3d226e6f666f6c6c6f77223e546865736520617265207468652076616c75657320646973706c6179656420696e2067616d653c2f613e2066697273742069732063616c63756c617465642064697374616e6365206e65787420697320656e656d7920726f746174696f6e20616e64206c617374206973206d7920726f746174696f6e2e2049207468696e6b20726f746174696f6e20697320646f6e65206f6e2074686520302c302073706f743c2f703e0a0a3c703e416e792068656c7020697320617070726563696174656420616e64206177617264656420776974682061206d617373697665207468756d6273207570203a4421203c2f703e0a0a3c7072653e3c636f64653e666c6f61742044697374616e63652844334458564543544f523320766563746f72312c2044334458564543544f523320766563746f7232290a7b0a2020202072657475726e207371727428706f772828766563746f72312e78202d20766563746f72322e78292c203229202b20706f772828766563746f72312e79202d20766563746f72322e79292c203229202b20706f772828766563746f72312e7a202d20766563746f72312e7a292c203229293b0a7d0a0a626f6f6c204175746f4b69636b28290a7b0a20202020666f72202873697a655f742069203d20303b206920266c743b2063506c61796572426173652e73697a6528293b20692b2b290a202020207b0a2020202020202020666c6f61742044697374616e6365546f4c6f63616c506c61796572203d2044697374616e63652863506c61796572426173655b695d2d2667743b7665632c206d61696e506c617965722e766563293b202f2f2076656320697320582059205a0a2020202020202020666c6f6174206e756d626572203d2052616432446567286174616e322863506c61796572426173655b695d2d2667743b766563526f746174696f6e5b315d2c2063506c61796572426173655b695d2d2667743b766563526f746174696f6e5b305d29293b202f2f2058205920726f746174696f6e0a0a202020202020202069662863506c61796572426173655b695d2d2667743b61646472657373203d3d206d61696e506c617965722e706f696e7465722029200a20202020202020207374643a3a636f757420266c743b266c743b20224d7920646567726565202d2d202220266c743b266c743b206e756d6265723b0a20202020202020206966202844697374616e6365546f4c6f63616c506c6179657220213d20302e3066290a20202020202020207b0a2020202020202020202020207374643a3a636f757420266c743b266c743b2022456e656d792044697374616e6365202d2d202220266c743b266c743b2044697374616e6365546f4c6f63616c506c6179657220266c743b266c743b2022456e656d7920646567726565202d2d202220266c743b266c743b206e756d6265723b0a20202020202020207d0a20202020202020207374643a3a636f757420266c743b266c743b207374643a3a656e646c3b0a202020207d0a0a2020202072657475726e20747275653b0a7d0a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","linear-algebra","projection","perspectivecamera"]', '0', 18, 0, 0, 1460724525, 1460723036, 36647100, 'http://stackoverflow.com/questions/36647100/how-to-correctly-project-world-coordinates-to-image-coordinates-with-camera-matr', 'How to correctly project world coordinates to image coordinates with camera matrix', 0x3c703e5768656e20492074727920746f20757365207468652063616d657261206d617472697820617320706572203c6120687265663d2268747470733a2f2f656e2e77696b6970656469612e6f72672f77696b692f43616d6572615f6d6174726978222072656c3d226e6f666f6c6c6f77223e77696b6970656469613c2f613e20736f6d65686f77204920646f6e7420676574207468652076616c7565203120696e2074686520686f6d6f67656e656f75732064696d656e73696f6e206f6620706978656c206c6f636174696f6e2e20492063616e7420666967757265206f75742077686174204920616d20646f696e672077726f6e672e20536561726368696e67206f6e20737461636b6f766572666c6f7720726573756c74656420696e20686967686572206c6576656c2070726f6772616d6d696e67207175657374696f6e732c2049206469646e742066696e642070726f626c656d7320726567617264696e67207468652063616d657261206d617472697820616e6420746865206d756c7469706c69636174696f6e2077697468207265616c20776f726c6420636f6f7264696e617465732e3c2f703e0a0a3c703e3c7374726f6e673e3c656d3e46697273742049206d616b6520757020736f6d6520776f726c6420636f6f7264696e617465733c2f656d3e3c2f7374726f6e673e3c2f703e0a0a3c7072653e3c636f64653e256e756d626572206f6620776f726c642067726964206c6f636174696f6e7320616c6f6e6720783120616e642078320a72657370726f6a203d20343039363b0a0a2570726f6a6563746564207375726661636520706978656c20636f6f7264696e617465730a5b783170726f6a2c783270726f6a5d203d206e6467726964285b313a72657370726f6a5d2c205b313a72657370726f6a5d293b0a256f726967696e2061742063656e7465720a783170726f6a203d20783170726f6a202d2072657370726f6a2f323b20793270726f6a203d20793270726f6a202d2072657370726f6a2f323b0a0a2564697374616e6365206d617020666f722070726f6a656374656420696d6167650a783370726f6a203d206f6e65732873697a6528793170726f6a29293b0a783370726f6a28313a656e642f322c313a656e642f3229203d20303b2571312c310a783370726f6a28313a656e642f342c313a656e642f3429203d20313b2571312c3120737562312c310a783370726f6a28656e642f323a656e642c313a656e642f3229203d20793170726f6a28656e642f323a656e642c313a656e642f32292f72657370726f6a3b2571312c320a783370726f6a28313a656e642f322c656e642f323a656e6429203d20793270726f6a28313a656e642f322c656e642f323a656e64292f72657370726f6a3b2571322c310a783370726f6a28656e642f323a656e642c656e642f323a656e6429203d2073717274282028793170726f6a28656e642f323a656e642c656e642f323a656e64292f72657370726f6a292e5e32202b202e2e2e0a20202020202020202020202020202020202020202020202020202020202020202020202028793270726f6a28656e642f323a656e642c656e642f323a656e64292f72657370726f6a292e5e3220293b202571322c320a3c2f636f64653e3c2f7072653e0a0a3c703e536f206a75737420737175617265207769746820736f6d6520646570746820696e666f726d6174696f6e2e204465707468206c6f6f6b73206c696b6520746869733c2f703e0a0a3c7072653e3c636f64653e6669677572653b20696d73686f7728783370726f6a2c5b5d290a3c2f636f64653e3c2f7072653e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f59556362572e6a7067222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f59556362572e6a70672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e3c7374726f6e673e3c656d3e5468656e2049206d616b6520757020736f6d652063616d6572613c2f656d3e3c2f7374726f6e673e3c2f703e0a0a3c7072653e3c636f64653e2570726f6a20666f63616c2064697374616e63650a6670726f6a203d20312f383b0a0a2563616d6572616d61747269780a50203d207a65726f7328332c34293b205028312c3129203d206670726f6a3b205028322c3229203d206670726f6a3b205028332c3329203d20313b0a3c2f636f64653e3c2f7072653e0a0a3c703e3c7374726f6e673e3c656d3e5468656e20492070726f6a65637420746865207265616c20776f726c6420636f6f7264696e6174657320746f2063616d65726120636f6f7264696e617465733c2f656d3e3c2f7374726f6e673e3c2f703e0a0a3c7072653e3c636f64653e7870726f6a616c6c203d205b783170726f6a283a29273b783270726f6a283a29273b783370726f6a283a29273b6f6e65732873697a6528783170726f6a283a292729295d3b0a0a7970726f6a616c6c203d20502a7870726f6a616c6c3b0a793170726f6a203d2072657368617065287970726f6a616c6c28312c3a29272c2073697a6528783170726f6a29293b0a793270726f6a203d2072657368617065287970726f6a616c6c28322c3a29272c2073697a6528783270726f6a29293b0a793370726f6a203d2072657368617065287970726f6a616c6c28332c3a29272c2073697a6528783370726f6a29293b0a3c2f636f64653e3c2f7072653e0a0a3c703e492065787065637420746f206861766520612070726f6a656374696f6e206f66206d79207265616c20776f726c6420636f6f7264696e61746573207768657265207468657265206973206e6f2064657074682c20686f7765766572204920656e64207570207769746820612064657074682e203c2f703e0a0a3c7072653e3c636f64653e6669677572653b200a737562706c6f7428312c332c31293b20696d73686f7728793170726f6a2c5b5d293b207469746c652827793120636f6f7264696e61746527293b20636f6c6f726261720a737562706c6f7428312c332c32293b20696d73686f7728793270726f6a2c5b5d293b207469746c652827793220636f6f7264696e61746527293b20636f6c6f726261720a737562706c6f7428312c332c33293b20696d73686f7728793370726f6a2c5b5d293b207469746c652827793320636f6f7264696e61746527293b20636f6c6f726261720a3c2f636f64653e3c2f7072653e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f6171726c672e6a7067222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f6171726c672e6a70672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e3c7374726f6e673e3c656d3e536f207468656e2049206861766520612070726f626c656d3c2f656d3e3c2f7374726f6e673e3c2f703e0a0a3c703e536f2074686520793320636f6f7264696e6174652073686f756c64206265203120657665727768657265206265636175736520746861742069732074686520696d61676520706c616e6520776865726520492070726f6a65637420697420746f2e20492065787065637465642061207363616c696e6720636f6e7374616e74206174206d6f73742e20416c736f20793120616e64207932204920657870656374656420746f2073686f77206d6f726520646966666572656e636573207468616e206a7573742074686520783120616e64207832206772616469656e742e2043616e20616e796f6e652073656520776861742049206d6573732075703f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","arrays","linear-algebra"]', '0', 23, 0, 1, 1460818146, 1460809525, 36664149, 'http://stackoverflow.com/questions/36664149/find-linear-dependent-rows-in-binary-2d-array', 'Find linear dependent rows in binary 2d array', 0x3c703e49276d20776f726b696e67206f6e20696d706c656d656e74696e6720676175737369616e20656c696d696e6174696f6e206f6e205a465e322e200a536f2c20616c6c20656c656d656e747320696e20746865206d61747269782061726520696e2072616e6765207b302c317d3b2049206861766520696d706c656d656e74656420676175737369616e20656c696d696e6174696f6e207375636365737366756c6c79207573696e6720746865203c6120687265663d2268747470733a2f2f7777772e63732e756d642e6564752f7e676173617263682f544f504943532f666163746f72696e672f6661737467617573732e706466222072656c3d226e6f666f6c6c6f77223e666173746761757373206d6574686f643c2f613e3c2f703e0a0a3c703e427574206174206e6f772049206861766520612070726f626c656d2c2062656361757365204920646f6e27742077616e7420746f2075736520616e79206c69627261727920616e6420492077616e7420746f2066696e6420616c6c206c696e65617220646570656e64656e7420726f777320696e20616e2061727261793b2063616e20616e79206f6e652068656c70206d6520776974682073756767657374696e672070726f70657220616c676f726974686d7320666f7220746861743f2049276d20737475636b20696e20686572652c206265636175736520492077616e7420746f2066696e6420746865206d6f7374206f7074696d616c2077617920746f20646f20746869732e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","octave","linear-algebra"]', '0', 26, 0, 0, 1460826502, 1460812983, 36664741, 'http://stackoverflow.com/questions/36664741/model-reduction-of-spring-mass-system-in-matlab', 'Model reduction of spring mass system in matlab', 0x3c703e4966204920686176652061206d61737320737072696e672073797374656d204d7827272b6b783d6620616e642077616e7420746f2072656475636520746865206d6f64656c20746f20783d427920776865726520422069732061207265616c206d7870206d617472697820776974682042206f7274686f6e6f726d616c2c20686f7720776f756c64204920676f2061626f7574206372656174696e672061206d61746c61622073637269707420746f20646f20736f3f20492077616e7420746f20737469636b2077697468207573696e6720746865206669727374203320656967656e6d6f6465732e3c2f703e0a0a3c703e49206b6e6f7720492063616e206d756c7469706c7920627920612070726f6a656374696f6e206d617472697820503d4242272c206275742049206e65656420746f207573652053564420627574204920616d206e6f74207375726520686f7720746f2075736520746869732066756e6374696f6e20696e206d61746c616220666f72206d6f64656c20726564756374696f6e2e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28');
INSERT INTO `so_questions` (`tags`, `is_answered`, `view_count`, `answer_count`, `score`, `last_activity_date`, `creation_date`, `question_id`, `link`, `title`, `body`, `has_more`, `quota_max`, `quota_remaining`, `createdAt`, `updatedAt`) VALUES
('["math","geometry","linear-algebra","coordinate-systems","coordinate-transformation"]', '1', 82, 2, 1, 1460976602, 1460874082, 36673332, 'http://stackoverflow.com/questions/36673332/how-do-i-transform-between-a-static-and-a-dynamic-coordinate-system', 'how do i transform between a static and a dynamic coordinate system', 0x3c703e6920686176652061207365747570206c696b6520746869733a203c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f594a4936512e6a7067222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f594a4936512e6a70672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e3220636f6f7264696e6174652073797374656d732e2028782c792920697320746865206d61696e20636f6f7264696e6174652073797374656d20616e64202878272c792729206973206120636f6f7264696e6174652073797374656d2074686174206c6976657320696e736964652028782c79292e20205468652073797374656d202878272c79272920697320646566696e65642062792074686520706f696e7473207831206f7220783220616e642069662069206d6f7665207468657365203220706f696e74732061726f756e64207468656e202878272c792729206d6f766573206163636f7264696e676c792e20546865206f726967696e206f66202878272c79272920697320646566696e656420617320746865206d6964646c65206f662074686520766563746f7220676f696e672066726f6d20783120746f2078322c20616e6420746865207927206178697320697320746865206e6f726d616c20766563746f72206f6e2078312d3e783220676f696e67207468726f75676820746865206f726967696e2e20496620692068617665206120706f696e7420783320646566696e656420696e202878272c79272920616e642069206d6f766520656974686572206f66207831206f7220783220746f206d616b6520746865206f726967696e20736869667420706c6163652c20686f7720646f2069207468656e206d6f7665207833206163636f7264696e676c7920737563682074686174206974206d61696e7461696e732069747320706f736974696f6e20696e20746865206e6577202878272c792729203f0a416e6420686f7720646f2069206d616b652061207472616e73666f726d6174696f6e20776869636820616c7761797320636f6e7665727473206120706f696e7420696e2028782c792920746f206120706f696e7420696e202878272c792729206e6f6d617474657220686f7720783120616e642078322068617665206265656e207365743f3c2f703e0a0a3c703e4920776173207468696e6b696e672074686174206966206920686164206d6f726520706f696e7473207468616e206a75737420746865206f6e65206920616d206d6f76696e6720287831206f72207832292069206775657373206920636f756c642074727920746f20657374696d6174652074686574612c2074782c207479206f6620746865207472616e73666f726d6174696f6e3c2f703e0a0a3c7072653e3c636f64653e5b7832275d2020205b636f7328746865746129202c2073696e287468657461292c2074785d5b78325d0a5b7932275d203d205b2d73696e287468657461292c20636f73287468657461292c2074795d5b79325d0a5b2031205dc2a020205b20202020302020202020202c20202020202030202020202c2031205d5b31205d0a3c2f636f64653e3c2f7072653e0a0a3c703e616e64206a757374206170706c79207468617420657374696d61746564207472616e73666f726d6174696f6e20746f20783320616e64206920776f756c6420626520676f6f642e2e2e6d6d6d206275742069207468696e6b206920776f756c64206e656564203320706f696e747320696e206f7264657220746f20657374696d6174652074686574612c20747820616e642074792072696768743f200a49206d65616e206920636f756c6420657374696d617465207573696e6720736f6d65206c65617374207371756172657320617070726f6163682e2e2e627574203320756e6b6e6f776e73207265717569726573203320636f6f7264696e61746520736574732072696768743f3c2f703e0a0a3c703e4920747269656420746f20696d706c656d656e74207468697320616e642063616c63756c61746520616e206578616d706c652e204920686f706520796f7520756e6465727374616e64207468652073796e7461782e20497473206e6f74207265616c6c7920676976696e67206d6520776861742069206578706563743a3c2f703e0a0a3c7072653e3c636f64653e696d706f7274206d6174680a696d706f7274206e756d7079206173206e700a0a78313d5b20302c31305d0a78323d5b31302c32305d0a0a7278203d2078325b305d202d2078315b305d0a7279203d2078325b315d202d2078315b315d0a726c656e203d206d6174682e737172742872782a72782b72792a7279290a63203d207278202f20726c656e0a73203d207279202f20726c656e0a0a0a6478203d202d20282078315b305d202b2078325b305d20292f322023206368616e67696e6720746865207369676e20746f206265206e65676174697665207365656d7320746f200a6479203d202d20282078315b315d202b2078325b315d20292f3220232072656374696679207472616e736c6174696f6e2e20526f746174696f6e207374696c6c2069732077726f6e670a0a4d203d206e702e6172726179285b5b632c202d732c20305d2c5b732c20632c20305d2c5b64782c2064792c20315d5d290a7072696e7428206e702e646f74287832202b205b315d2c4d2920290a23205969656c6473202d2667743b205b2031352e393230333130323220202d382e3633363033383937202020312e20202020202020205d20616e642073686f756c64207969656c64205b352c302c315d0a3c2f636f64653e3c2f7072653e0a0a3c703e53696e6365204920616d20747279696e6720746f207472616e73666f726d2074686520783220636f6f7264696e6174652c2073686f756c642074686520726573756c74207468656e206e6f742068617665207468652076616c7565203020696e2074686520792d636f6d706f6e656e742073696e636520697473206c6f636174656420696e2074686520782d617869733f3c2f703e0a0a3c703e4f6b2c204920747269656420646f696e672074686520696d706c656d656e746174696f6e20666f722078332066726f6d2064796e616d69633120746f2064796e616d6963322077686963682074686520636865636b20697320746861742078332073686f756c6420656e642075702077697468207468652073616d6520636f6f7264696e61746520696e20626f746820643120616e642064322e204920646964207468617420617320796f75207375676765737465642c20627574204920646f206e6f7420676574207468652073616d6520636f6f7264696e61746520696e20626f746820643120616e642064322e204469642069206d6973756e6465727374616e6420736f6d657468696e673f3c2f703e0a0a3c7072653e3c636f64653e696d706f7274206d6174680a696d706f7274206e756d7079206173206e700a0a78313d5b20312c315d0a78323d5b20372c395d0a0a78333d5b342c335d0a0a7278203d202878325b305d202d2078315b305d290a7279203d202878325b315d202d2078315b315d290a726c656e203d206d6174682e73717274282072782a7278202b2072792a727920290a63203d207278202f20726c656e0a73203d207279202f20726c656e0a0a0a6478203d2020282078315b305d202b2078325b305d20292f320a6479203d2020282078315b315d202b2078325b315d20292f320a0a4d203d206e702e6172726179285b5b632c202d732c20305d2c5b732c20632c20305d2c5b2d64782a632d64792a732c2064782a732d64792a632c20315d5d290a4d696e76203d206e702e6172726179285b5b632c20732c20305d2c5b2d732c20632c20305d2c5b64782c2064792c20315d5d290a0a0a78316e65773d5b20312c315d0a78326e65773d5b2031372c345d0a0a72786e6577203d202878326e65775b305d202d2078316e65775b305d290a72796e6577203d202878326e65775b315d202d2078316e65775b315d290a726c656e6e6577203d206d6174682e73717274282072786e65772a72786e6577202b2072796e65772a72796e657720290a636e6577203d2072786e6577202f20726c656e6e65770a736e6577203d2072796e6577202f20726c656e6e65770a0a0a64786e6577203d2020282078316e65775b305d202b2078326e65775b305d20292f320a64796e6577203d2020282078316e65775b315d202b2078326e65775b315d20292f320a0a4d6e6577203d206e702e6172726179285b5b636e65772c202d736e65772c20305d2c5b736e65772c20636e65772c20305d2c5b2d64786e65772a636e65772d64796e65772a736e65772c2064786e65772a736e65772d64796e65772a636e65772c20315d5d290a4d6e6577696e76203d206e702e6172726179285b5b636e65772c20736e65772c20305d2c5b2d736e65772c20636e65772c20305d2c5b64786e65772c2064796e65772c20315d5d290a0a4d5f64796e315f746f5f64796e32203d206e702e646f74284d696e762c4d6e6577290a0a7072696e7428206e702e646f74287833202b205b315d2c204d2920290a7072696e7428206e702e646f74287833202b205b315d2c204d5f64796e315f746f5f64796e3229290a237969656c64732074686573652032206f7574707574732077686963682073686f756c64206265207468652073616d653a0a5b2d312e36202d312e322020312e205d0a5b2d332e35333231393639322020382e32393239383430382020312e20202020202020205d0a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["algorithm","matrix","linear-algebra","svd","matrix-decomposition"]', '0', 20, 0, 0, 1460880714, 1460880714, 36674154, 'http://stackoverflow.com/questions/36674154/most-efficient-method-for-computing-singular-value-decomposition-for-an-upper-tr', 'Most efficient method for computing Singular Value Decomposition for an upper triangular matrix?', 0x3c703e546865726520617265207365766572616c206d6574686f647320617661696c61626c6520666f7220636f6d707574696e6720535644206f6620612067656e6572616c206d61747269782e204920616d20696e746572657374656420746f206b6e6f772061626f757420746865206265737420617070726f61636820776869636820636f756c64206265207573656420666f7220636f6d707574696e6720535644206f6620616e20757070657220747269616e67756c6172206d61747269782e20506c656173652073756767657374206d6520616e20616c676f726974686d20776869636820636f756c64206265206f7074696d697a656420666f722074686973207370656369616c2063617365206f66206d617472696365732e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","numpy","matrix","scipy","linear-algebra"]', '1', 30, 2, 2, 1460909129, 1460903996, 36677940, 'http://stackoverflow.com/questions/36677940/finding-solutions-to-row-reduced-matrix-python', 'Finding solutions to row reduced matrix python', 0x3c703e537570706f73652049206861766520612072656475636564204d617472697820696e207468697320666f726d3a3c2f703e0a0a3c7072653e3c636f64653e202020782020202079202020207a202020203d0a5b5b322e302c20342e302c20342e302c20342e305d2c200a205b302e302c20322e302c20312e302c20322e305d2c200a205b302e302c20302e302c20312e302c20312e305d2c200a205b302e302c20302e302c20302e302c20302e305d5d0a3c2f636f64653e3c2f7072653e0a0a3c703e416e6420492077616e7420616e20617272617920636f6e7461696e696e672074686520736f6c7574696f6e732e3c2f703e0a0a3c703e496e20746869732063617365204927642077616e7420746f2072657475726e3c2f703e0a0a3c7072653e3c636f64653e20207a20202020792020202020780a5b312e302c20302e352c202d312e305d0a3c2f636f64653e3c2f7072653e0a0a3c703e57652063616e20617373756d652069742069732061207065726665637420747269616e676c652077697468206e6f2066726565207661726961626c65732e3c2f703e0a0a3c703e4920776173206c6f6f6b696e67206174203c636f64653e73636970792e6c696e616c672e736f6c76653c2f636f64653e20746f20736f6c76652c206275742069742072657175697265732074686520666f726d203c636f64653e41783d423c2f636f64653e20616e642049276d206e6f74207375726520686f7720746f20636f6e7665727420746f207468697320666f726d2e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["algorithm","math","linear-algebra","check-digit"]', '1', 53, 1, 2, 1461344191, 1461163126, 36747247, 'http://stackoverflow.com/questions/36747247/alternative-base-table-for-damm-algorithm', 'Alternative base table for Damm algorithm', 0x3c703e5468652044616d6d20616c676f7269746820697320617765736f6d6520666f722068616e646c696e6720636865636b206469676974730a3c6120687265663d2268747470733a2f2f656e2e77696b6970656469612e6f72672f77696b692f44616d6d5f616c676f726974686d222072656c3d226e6f666f6c6c6f77223e68747470733a2f2f656e2e77696b6970656469612e6f72672f77696b692f44616d6d5f616c676f726974686d3c2f613e3c2f703e0a0a3c703e4920776f756c64206c696b6520746f2075736520697420666f722074776f20646966666572656e7420656e746974696573206f6620616e206170706c69636174696f6e2e20486f776576657220746865792073686f756c64206e6f742068617665207468652073616d6520636865636b20646967697420666f72207468652073616d65206e756d6265722e3c2f703e0a0a3c703e536f2069206861766520746f2075736520646966666572656e742062617365207461626c657320666f72206561636820656e746974792e205468652062617365207461626c65206973206120746f74616c6c7920616e74692d73796d6d657472696320717561736967726f75702077697468206e3d31300a546865206578616d706c652066726f6d2057696b6970656469613a3c62723e0a2d2d202020202020302020203120202032202020332020203420202035202020362020203720202038202020393c62723e0a30202020302020203320202031202020372020203520202039202020382020203620202034202020323c62723e0a31202020372020203020202039202020322020203120202035202020342020203820202036202020333c62723e0a32202020342020203220202030202020362020203820202037202020312020203320202035202020393c62723e0a33202020312020203720202035202020302020203920202038202020332020203420202032202020363c62723e0a34202020362020203120202032202020332020203020202034202020352020203920202037202020383c62723e0a35202020332020203620202037202020342020203220202030202020392020203520202038202020313c62723e0a36202020352020203820202036202020392020203720202032202020302020203120202033202020343c62723e0a37202020382020203920202034202020352020203320202036202020322020203020202031202020373c62723e0a38202020392020203420202033202020382020203620202031202020372020203220202030202020353c62723e0a392020203220202035202020382020203120202034202020332020203620202037202020392020203020203c2f703e0a0a3c703e486f7720646f20692067656e65726174652061207365636f6e64206f6e652c207468617420697320646966666572656e742062757420616c736f206f66206e3d3130203f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","multithreading","performance","linear-algebra"]', '1', 44, 1, -2, 1461255556, 1461179633, 36753097, 'http://stackoverflow.com/questions/36753097/need-help-solving-sparse-ax-b', 'Need Help Solving Sparse Ax=b', 0x3c703e49206b6e6f772074686572652069732061206c6f74206f6620696e666f726d6174696f6e206f7574207468657265206f6e207468697320746f7069632c206275742049276d207374727567676c696e6720746f2066696e6420746865206265737420736f6c7574696f6e20666f72206d792073706563696669632070726f626c656d2e3c2f703e0a0a3c703e466f72206d792070726f626c656d2c20412069732065787472656d656c79206c6172676520287e3134356b2058203134356b2920616e642065787472656d656c792073706172736520286d6178206f662039206e6f6e2d7a65726f2076616c7565732070657220726f77292e204974206973206e6f7420706f73697469766520646566696e6974652c206e6f722073796d6d65747269632c20616e6420697320636f6d706c65782076616c756564202873696e676c6520707265636973696f6e292e20546865207370617273697479207061747465726e2063616e2062652076697375616c697a656420627920696d6167696e696e67206120747269646961676f6e616c206d61747269782c20616e64207468656e20616464696e672074776f2022747269646961676f6e616c73222061626f766520616e642062656c6f7720746861742c204e20617761792066726f6d20746865206d61696e20747269646961676f6e616c2e205468697320676976657320332073657473206f662033206e6f6e207a65726f7320696e206561636820726f772c20776974682073657473206f66203320736570617261746564206279204e20284e20697320636f6e7374616e7420666f72206120676976656e206d61747269782041292c20616e642063656e7465726564206f6e20746865206d61696e20646961676f6e616c2e207e3525206f6620726f77732077696c6c206e6f742066696c6c20616c6c2039206e6f6e2d7a65726f20706f736974696f6e732c2064756520746f20626f756e6461727920636f6e646974696f6e732c20736f20746865736520726f77732077696c6c2068617665206120737562736574206f6620746865206d61696e206e6f6e2d7a65726f207061747465726e2e3c2f703e0a0a3c703e49206e65656420746f20736f6c766520666f72206d756c7469706c652072696768742068616e6420736964657320287e31303234292e204920616c736f206e65656420746f207265736f6c7665207468652073616d652073797374656d207769746820646966666572656e74206e756d657269632076616c75657320696e20412c20627574207468652073616d65207370617273697479207061747465726e2e202043757272656e746c792c2049276d207573696e672053757065724c55202873696e676c652074687265616465642920746f20666163746f72204120746f204c5520616e64207468656e20736f6c76696e67207573696e6720637573706172736520287370656369666963616c6c792c20637573706172736543637372736d5f736f6c7665292e203c2f703e0a0a3c703e49732061207370617273652064697265637420736f6c766572207573696e67204c5520666163746f72697a6174696f6e20746865206265737420617070726f61636820666f72206d792070726f626c656d3f205768696368206c69627261727920776f756c6420626520746865206661737465737420666f72204c5520666163746f72697a6174696f6e3f20576869636820776f756c6420626520746865206661737465737420666f7220736f6c76696e672077697468206261636b20737562737469747574696f6e3f203c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["algorithm","matlab","matrix","linear-algebra","graph-algorithm"]', '0', 43, 2, 1, 1461351601, 1461349038, 36800771, 'http://stackoverflow.com/questions/36800771/matrix-reordering-to-block-diagonal-form', 'Matrix reordering to block diagonal form', 0x3c703e47697665206120737061727365206d61747269782c20686f7720746f2072656f726465722074686520726f777320616e6420636f6c756d6e732073756368207468617420697420697320696e20626c6f636b20646961676f6e616c206c696b6520666f726d2076696120726f7720616e6420636f6c756d6e207065726d75746174696f6e3f3c2f703e0a0a3c703e526f7720616e6420636f6c756d6e207065726d75746174696f6e20617265206e6f74206e65636573736172696c7920636f75706c6564206c696b6520726576657273652043757468696c6c2d4d634b6565206f72646572696e673a0a3c6120687265663d22687474703a2f2f7777772e6d617468776f726b732e636f6d2f68656c702f6d61746c61622f7265662f73796d72636d2e68746d6c3f726566726573683d74727565222072656c3d226e6f666f6c6c6f77223e687474703a2f2f7777772e6d617468776f726b732e636f6d2f68656c702f6d61746c61622f7265662f73796d72636d2e68746d6c3f726566726573683d747275653c2f613e20496e2073686f72742c20796f752063616e20696e646570656e64656e746c7920706572666f726d20616e7920726f77206f7220636f6c756d6e207065726d75746174696f6e2e203c2f703e0a0a3c703e546865206f766572616c6c20676f616c20697320746f20636c757374657220616c6c20746865206e6f6e207a65726f20656c656d656e747320746f776172647320646961676f6e616c206c696e652e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["linear-algebra","matrix-multiplication","cublas"]', '1', 22, 1, 0, 1461774726, 1461350698, 36801241, 'http://stackoverflow.com/questions/36801241/efficiently-multiplying-matrix-with-transpose-using-cublas', 'Efficiently multiplying matrix with transpose using cuBlas', 0x3c703e497320746865726520616e20656666696369656e7420776179206f66207573696e67206375426c6173207768656e206d756c7469706c79696e672061206c617267652064656e7365206d6174726978207769746820697473207472616e73706f73653f205370656369666963616c6c792c20697320746865726520616e792066756e6374696f6e2074686174206d616b657320757365206f6620746865206661637420746861742074686520726573756c74696e67206d61747269782069732073796d6d6574726963207468657265666f7265207265647563696e6720746865206e756d626572206f66206d756c7469706c69636174696f6e73206279206120666163746f72206f66207e322e203c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["fortran","linear-algebra","lapack"]', '1', 71, 2, 0, 1461401354, 1461352567, 36801701, 'http://stackoverflow.com/questions/36801701/dgtsv-lapack-not-returning-answer', 'dgtsv - LAPACK not returning answer', 0x3c703e49276d20747279696e6720746f20736f6c766520612073696d706c6520747269646961676f6e616c2073797374656d206f66206571756174696f6e73207573696e67204c415041434b206c6962726172792e2054686520636f64652062656c6f77206578706c61696e7320697420616c6c2e3c2f703e0a0a3c703e49276d2067657474696e6720616e2061727261792066756c6c206f66207a65726f732028696e697469616c697a6564206f6e6573292c206e6f742074686520636f727265637420616e737765722e3c2f703e0a0a3c703e4920636865636b65642074686520696e707574732c20747269656420746f20636f6d70696c6520776974682074776f20636f6d70696c65727320616e642065766572797468696e67207365656d732066696e652e20576861742069732077726f6e673f3c2f703e0a0a3c703e54686520636f6d70696c6174696f6e206c696e652069733a3c2f703e0a0a3c7072653e3c636f64653e69666f7274202d4c2f7573722f6c6f63616c2f6c69622f202d6c6c617061636b202d6c626c617320744c617061636b2e663930202d6f20746c617061636b20200a67666f727472616e202d4c2f7573722f6c6f63616c2f6c69622f202d6c6c617061636b202d6c626c617320744c617061636b2e663930202d6f20746c617061636b20200a3c2f636f64653e3c2f7072653e0a0a3c703e74686520636f64652069733a3c2f703e0a0a3c7072653e3c636f64653e70726f6772616d206c617061636b540a0a2020696d706c69636974206e6f6e650a0a2020212064677473762820696e7465676572283429203a3a204e2c0a2020212020202020202020696e7465676572283429203a3a204e5248532c0a20202120202020202020207265616c283829202020203a3a20444c5b5d2c0a20202120202020202020207265616c283829202020203a3a2044205b5d2c0a20202120202020202020207265616c283829202020203a3a2044555b5d2c0a20202120202020202020207265616c283829202020203a3a2042205b5d2c0a2020212020202020202020696e7465676572283429203a3a204c4442202c0a2020212020202020202020696e7465676572283429203a3a20696e666f20290a0a202021205b415d5b785d203d205b625d0a202021204e202020202d20546865206f72646572206f66206d6174726978205b415d200a202021204e524853202d204e756d626572206f6620636f6c756e7320696e205b625d0a20202120444c2020202d20417272617920776974682074686520737562646961672e0a2020212044202020202d204d61696e20646961676f6e616c2e0a2020212044552020202d20557070657220446961676f6e616c2e0a2020212042202020202d20416e737765722021210a202021204c444220202d206c656e677468206f66206172726179205b425d2e0a20202120494e464f202d204966203d2030202e2e205568756c2021212e0a0a20207265616c2838292c2064696d656e73696f6e283329203a3a206d61696e446961670a20207265616c2838292c2064696d656e73696f6e283229203a3a206c6f776572446961670a20207265616c2838292c2064696d656e73696f6e283229203a3a207570706572446961670a20207265616c2838292c2064696d656e73696f6e283329203a3a20756e6b6e6f770a20207265616c2838292c2064696d656e73696f6e283329203a3a20657175616c74790a0a2020696e7465676572283429203a3a20696e666f203d20300a2020696e7465676572283429203a3a2069203d20300a0a2020696e7465676572283429203a3a204e202020203d20330a2020696e7465676572283429203a3a204e524853203d20310a2020696e7465676572283429203a3a204c444220203d20330a0a20206d61696e44696167283129203d20322e3064300a20206d61696e44696167283229203d20322e3064300a20206d61696e44696167283329203d20322e3064300a0a2020757070657244696167283129203d20332e3064300a2020757070657244696167283229203d20332e3064300a0a20206c6f77657244696167283129203d20312e3064300a20206c6f77657244696167283229203d20312e3064300a0a2020657175616c7479283129203d20312e3064300a2020657175616c7479283229203d20312e3064300a2020657175616c7479283329203d20312e3064300a0a2020756e6b6e6f77203d20302e306430202120616e737765720a0a202063616c6c206467747376284e2c4e5248532c6c6f776572446961672c6d61696e446961672c7570706572446961672c657175616c74792c4c44422c696e666f290a0a0a0a20207772697465282a2c2a2920696e666f0a0a2020646f2069203d20312c73697a6528756e6b6e6f77290a202020207772697465282a2c2a2920756e6b6e6f772869290a2020656e6420646f0a0a20202120436f727265637420616e737765723a20756e6b6e6f77203d20282f2d312c312c302f292020202021207265616c2838292076616c7565730a20202120416e7377657220496d2067657474696e673a20756e6b6e6f77203d20282f302c302c302f29202021207265616c2838292076616c7565730a0a0a656e642070726f6772616d206c617061636b540a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["iteration","linear-algebra","sparse-matrix","matrix-inverse"]', '0', 19, 0, -1, 1461373374, 1461373374, 36805426, 'http://stackoverflow.com/questions/36805426/inverse-of-ab-when-a-is-fixed-and-b-is-changed-iteratively', 'Inverse of A+B when A is fixed and B is changed iteratively', 0x3c703e4920747269656420746f20736f6c7665203c2f703e0a0a3c703e28412b4228742929783d622874293c2f703e0a0a3c703e486572652c20412069732074696d6520696e646570656e64656e7420627574204220616e64206220646570656e6473206f6e2074696d652e3c2f703e0a0a3c703e412069732073746966666e657373206d617472697820616e642042206973206d617373206d61747269782e3c2f703e0a0a3c703e416e616c79746963616c6c792c20412b422874292069732073796d6d657472696320706f73697469766520646566696e69746520616e64204120616e6420422874292061726520626f74682073796d6d65747269632020706f73697469766520646566696e6974652e203c2f703e0a0a3c703e537472756374757265206f6620412069732062616e6465642c20627574206e6f7420626c6f636b20646961676f6e616c2e204220697320626c6f636b20646961676f6e616c2e20426f74682061726520737061727365206d61747269782e3c2f703e0a0a3c703e496e206d7920636f64652c2049206a75737420736f6c76652028412b4228742929783d622874292e20486f77657665722c2073696e6365204120697320666978656420287768696368206973206861726420746f20696e766572742920616e64204220766172696573206f6e2074696d6520287768696368206973206561737920746f20696e76657274292c2049207468696e6b20746861742074686973206973207665727920696e656666696369656e742e3c2f703e0a0a3c703e497320746865726520616e79206f746865722077617920746f20736f6c766520746869732070726f626c656d2077686974686f757420736f6c76652028412b4228742929783d6228742920617420657665727920742c20627574207573696e67207468617420412069732066697865643f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","linear-algebra","sparse-matrix","armadillo"]', '0', 19, 0, 0, 1461423818, 1461423818, 36812449, 'http://stackoverflow.com/questions/36812449/kronecker-product-in-armadillo', 'Kronecker Product in Armadillo', 0x3c703e497320746865726520612064697265637420696d706c656d656e746174696f6e206f6620746865204b726f6e65636b65722070726f64756374206f662074776f20737061727365206d61747269636573207573696e67207468652061726d6164696c6c6f206c6962726172793f3c2f703e0a0a3c703e54686520757375616c2066756e6374696f6e3a3c2f703e0a0a3c7072653e3c636f64653e2020206b726f6e28290a3c2f636f64653e3c2f7072653e0a0a3c703e446f6573206e6f74207365656d20746f20776f726b2c20616e6420492063616e2774207365656d20746f2066696e6420616e79207265666572656e636520746f20616e20696d706c656d656e746174696f6e2e3c2f703e0a0a3c703e4d79207468616e6b7320696e20616476616e63652e3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["geometry","linear-algebra","lapack","scalapack","lapacke"]', '0', 18, 0, 0, 1461564908, 1461564908, 36833230, 'http://stackoverflow.com/questions/36833230/lapack-solving-large-periodic-banded-system-of-equations', 'LAPACK: Solving large periodic banded system of equations', 0x3c703e49206861766520746f20736f6c76652061206c61726765206e756d626572206f662073696d756c74616e656f7573206571756174696f6e7320287e31303030732920746f20736f6c76652061742065766572792074696d65207374657020666f7220612067656e6572616c206d65616e2063757276617475726520666c6f772070726f626c656d2e205468652070726f626c656d20697320646566696e6564206f76657220636c6f736564206d616e69666f6c647320736f2074686520626f756e6461727920636f6e646974696f6e20697320706572696f6469632e3c2f703e0a0a3c703e4920616d207573696e6720737563636573736976652d6f7665722d72656c61786174696f6e20616c676f726974686d207269676874206e6f7720746f20736f6c766520746869732c20627574206973207665727920736c6f772e2049207472696564203c636f64653e646762747266202d2667743b206467627472733c2f636f64653e2028776974686f75742074686520706572696f64696369747920636f6e646974696f6e292c20616e64206973207175697465206661737465722e3c2f703e0a0a3c703e54686520636f656666696369656e74206d6174726978206c6f6f6b73206c696b6520746869733c2f703e0a0a3c7072653e3c636f64653e2020202020e28e9b63e2828120202064e282812065e28281202020202020202061e2828120202062e28281e28e9e20202020205e0a2020202020e28ea262e2828220202063e282822064e282822065e282822020302020202020202061e28282e28ea520202020207c0a2020202020e28ea261e2828320202062e282832063e282832064e2828320202e202030202020202020e28ea520202020207c0a204120e2869020e28ea2202020202061e282842062e282842063e2828420202e20202e202020202020e28ea52020207e313030300a2020202020e28ea22020202020203020202e20202e20202e20202e2020656ee2828be28282e28ea520202020207c0a2020202020e28ea2656ee2828be2828120202020203020202e20202e20202e2020646ee2828be28281e28ea520202020207c0a2020202020e28e9d646e202020656e2020202020202020616e20626e2020636e20e28ea02020202020760a3c2f636f64653e3c2f7072653e0a0a3c703e49206e65656420746f20736f6c76652070656e7461646961676f6e616c2073797374656d732c207468617420617265206e6f742073796d6d657472696320616e64206e6f74206b6e6f776e20746f20626520706f73697469766520646566696e6974652e3c2f703e0a0a3c703e497320746865726520612077617920746f20736f6c7665206379636c69632f706572696f6469632062616e6465642073797374656d7320696e204c415041434b3f3c2f703e0a0a3c703e4f7220646f2049206861766520746f207573652067656e6572616c20736f6c766572732c2073756368206173203c636f64653e6467657472733c2f636f64653e3f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["python","numpy","linear-algebra"]', '1', 32, 2, 3, 1461727798, 1461724807, 36879311, 'http://stackoverflow.com/questions/36879311/combine-einsum-expresions', 'Combine Einsum Expresions', 0x3c703e4920776f756c64206c696b6520746f206576616c75617465203c2f703e0a0a3c7072653e3c636f64653e45203d206e702e65696e73756d2827696a2c6a6b2c6b6c2d2667743b696a6b6c272c412c412c41290a46203d206e702e65696e73756d2827696a6b692d2667743b696a6b272c45290a3c2f636f64653e3c2f7072653e0a0a3c703e776865726520412069732061206d617472697820286e6f206d6f7265207468616e2031303030206279203130303020696e2073697a65292e20436f6d707574696e67204520697320736c6f772e204920776f756c64206c696b6520746f2073706565642074686973207570206279206f6e6c7920636f6d707574696e67207468652022646961676f6e616c2220656c656d656e747320776869636820492073746f726520696e20462e20497320697420706f737369626c6520746f20636f6d62696e652074686573652074776f2065787072657373696f6e733f2f41726520746865726520616e7920626574746572207761797320746f207370656564207570207468697320636f6d7075746174696f6e3f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["matlab","random","statistics","linear-algebra","finance"]', '0', 19, 0, 0, 1461739980, 1461737673, 36881709, 'http://stackoverflow.com/questions/36881709/what-shape-should-we-get-by-plotting-the-log-log-graph-of-inverse-participation', 'What shape should we get by plotting the log-log graph of Inverse Participation Ratio of eigenvectors vs Eigenvalues for a random matrix?', 0x3c703e54686520496e76657273652050617274696369706174696f6e20526174696f2028492e502e522e29206f66206120766563746f722075203d202875312c202e2e2e2e20756d2920666f722069203d0a312c202e2e2e2c206d20697320646566696e656420617320666f6c6c6f77733a3c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f6c693734782e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f6c693734782e706e672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e5768656e20706c6f7474696e6720746865206c6f672d6c6f67206f6620495052206f662074686520656967656e766563746f72732076732074686520656967656e76616c7565732c204c2c2077652073686f756c642067657420736f6d657468696e6720696e746572657374696e672c20706572686170732061207374726169676874206c696e65206c696b653a3c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f69376d65302e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f69376d65302e706e672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e427574204920616d2067657474696e6720612068617068617a617264207468696e673a3c2f703e0a0a3c703e3c6120687265663d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f76474248422e706e67222072656c3d226e6f666f6c6c6f77223e3c696d67207372633d22687474703a2f2f692e737461636b2e696d6775722e636f6d2f76474248422e706e672220616c743d22656e74657220696d616765206465736372697074696f6e2068657265223e3c2f613e3c2f703e0a0a3c703e54686973206973206d7920636f64652e203c2f703e0a0a3c7072653e3c636f64653e6d3d39383b206e3d3735333b0a483d72616e646e286d2c6e293b0a573d312f6e2a28482a28482729293b0a5b552c206c616d6264615d203d206569672857293b0a0a666f7220693d313a73697a6528552c32290a2020202049505228692c31293d303b0a20202020666f72206a3d313a39380a202020202020202049505228692c31293d49505228692c31292b55286a2c69295e343b0a20202020656e640a202020204c28692c31293d6c616d62646128692c69293b0a656e640a0a6c6f676c6f67284c2c495052293b0a3c2f636f64653e3c2f7072653e0a0a3c703e436f756c6420616e796f6e6520706c6561736520706f696e74206f75742077686174204920616d20646f696e672077726f6e673f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["c++","algorithm","boost","linear-algebra","numerical-analysis"]', '1', 11, 1, 1, 1461799066, 1461798073, 36902407, 'http://stackoverflow.com/questions/36902407/c-back-substitution-via-boost-bad-index-error', 'C++ - Back Substitution via Boost - Bad Index Error', 0x3c703e4920686176652074686520666f6c6c6f77696e6720636f646520666f722061206261636b20737562737469747574696f6e20616c676f726974686d3a203c2f703e0a0a3c7072653e3c636f64653e23696e636c75646520266c743b626f6f73745c6e756d657269635c75626c61735c6d61747269782e6870702667743b0a7479706564656620626f6f73743a3a6e756d657269633a3a75626c61733a3a6d6174726978266c743b646f75626c652667743b20644d3b0a644d206253756228644d20412c20644d2062290a7b0a20202020756e7369676e656420696e74206e203d2028696e7429622e73697a653128293b0a2020202061737365727428622e73697a65322829203d3d2031293b0a20202020617373657274286e203d3d20412e73697a65312829293b0a20202020644d2078286e2c2031293b0a20202020666f722028756e7369676e65642069203d20286e202d2031293b2069202667743b3d20303b202d2d69290a202020207b0a2020202020202020646f75626c652073756d203d20302e303b0a2020202020202020666f722028756e7369676e6564206a203d20286e202d2031293b206a202667743b20693b202d2d6a290a20202020202020207b0a20202020202020202020202073756d202b3d204128692c206a292a78286a2c2030293b0a20202020202020207d0a20202020202020207828692c203029203d20286228692c203029202d2073756d29202f204128692c2069293b0a202020207d0a0a2020202072657475726e20783b0a7d0a3c2f636f64653e3c2f7072653e0a0a3c703e412062616420696e646578206572726f7220706f7073207570207768656e20492074727920746f2072756e2069742e204920616d206e6f74207175697465207375726520776865726520746865206572726f7220697320617320492063616e27742066696e64207468652070726f626c656d207768656e204920616d206d616e75616c6c7920676f696e67207468726f7567682074686520616c676f2e3c2f703e0a0a3c703e49206861766520616c736f20747269656420696e6372656d656e74696e6720746865206e6573746564206c6f6f703a203c636f64653e666f7228756e7369676e6564206a203d20303b206a20266c743b206e3b202b2b6a293c2f636f64653e2e20416761696e2c20492072756e20696e746f207468652073616d652062616420696e646578206572726f722e3c2f703e0a0a3c703e4261736564206f6e207468652064656275676765722c2049207468696e6b207468652070726f626c656d2068617320746f20646f2077697468203c636f64653e693c2f636f64653e20736f6d65686f772074616b696e67206f6e20612076616c7565206f6620343239343936373239352c204920616d206e6f7420737572652077686572652074686174206e756d62657220636f756c6420636f6d652066726f6d20617320697420646f65736e2774207265616c6c792066697420696e206f74686572207061727473206f66206d7920636f64652e20203c2f703e0a0a3c703e4c6173746c792c2049206861766520616c736f207772697474656e206120666f727761726420737562737469747574696f6e20616c676f2c207573696e67206120766572792073696d696c6172207374727563747572652c2077686963682072756e7320776974686f757420612070726f626c656d2e3c2f703e0a0a3c703e416e796f6e65206861766520616e20696465612077686174277320676f696e67206f6e3f3c2f703e0a, NULL, NULL, NULL, '2016-04-28', '2016-04-28'),
('["java","math","linear-algebra","equation"]', '0', 14, 0, 0, 1461859998, 1461859998, 36920121, 'http://stackoverflow.com/questions/36920121/implement-row-echelon-form-to-determine-no-solution-or-infinite-solution-with-ap', 'Implement row echelon form to determine no solution or infinite solution with apache.math', 0x3c703e4920676f74207468697320636f646520776869636820736f6c766520347834206c696e656172206571756174696f6e2e200a6275742c2069662069732074686520636173652074686174207468652073797374656d2068617665206d756c7469706c657320736f6c7574696f6e732e2020686f772063616e20692067657420746865206d617472697820746f20696d706c656d656e74206120706172616d6574657220746f206769766520736f6d6520736f6c7574696f6e203f3c2f703e0a0a3c7072653e3c636f64653e7075626c696320636c617373204f7661576f726b207b0a0a0a20202020766f696420666f757274684571756174696f6e536f6c76657228290a202020207b0a20202020202020202f2f4372656174696e67202041727261797320526570726573656e74696e67204571756174696f6e730a2020202020202020646f75626c655b5d5b5d206c68734172726179203d207b7b312c312c312c317d2c207b322c322c322c327d2c207b332c332c332c337d2c207b342c342c342c347d7d3b0a2020202020202020646f75626c655b5d207268734172726179203d207b31342c32322c33382c34347d3b0a20202020202020202f2f4372656174696e67204d6174726978204f626a656374732077697468206172726179730a20202020202020204d6174726978206c6873203d206e6577204d6174726978286c68734172726179293b0a20202020202020204d617472697820726873203d206e6577204d61747269782872687341727261792c2034293b0a0a20202020202020202f2f5072696e74696e6720416e73776572730a20202020202020206966286c68732e6465742829203d3d2030290a20202020202020207b0a20202020202020202020202053797374656d2e6f75742e7072696e746c6e28224e6f20736f6c7574696f6e206f7220696e66696e697465206e756d626572206f6620736f6c7574696f6e7322293b0a20202020202020207d0a2020202020202020656c73650a20202020202020207b0a2020202020202020202020202f2f43616c63756c61746520536f6c766564204d61747269780a2020202020202020202020204d617472697820616e73203d206c68732e736f6c766528726873293b0a0a20202020202020202020202053797374656d2e6f75742e7072696e746c6e28227831203d2022202b2028616e732e67657428302c20302929293b0a20202020202020202020202053797374656d2e6f75742e7072696e746c6e28227832203d2022202b2028616e732e67657428312c20302929293b0a20202020202020202020202053797374656d2e6f75742e7072696e746c6e28225833203d2022202b2028616e732e67657428322c20302929293b0a20202020202020202020202053797374656d2e6f75742e7072696e746c6e28225834203d2022202b2028616e732e67657428332c20302929293b0a0a20202020202020207d0a0a202020207075626c69632073746174696320766f6964206d61696e28537472696e675b5d206172677329200a202020207b0a20202020202020204f7661576f726b206571756174696f6e203d206e6577204f7661576f726b28293b0a0a202020207d0a7d0a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-04-29', '2016-04-29'),
('["matlab","matrix","machine-learning","statistics","linear-algebra"]', '0', 36, 0, 0, 1461865282, 1461862170, 36920840, 'http://stackoverflow.com/questions/36920840/matlab-the-determinant-of-a-covariance-matrix-is-either-0-or-inf', 'MATLAB: The determinant of a covariance matrix is either 0 or inf', 0x3c703e49206861766520612031353030783135303020636f76617269616e6365206d6174726978206f66207768696368204920616d20747279696e6720746f2063616c63756c617465207468652064657465726d696e616e7420666f7220454d2d4d4c206d6574686f642e2054686520636f76617269616e6365206d6174726978206973206f627461696e65642062792066696e64696e6720746865205349474d41206d617472697820616e64207468656e2070617373696e6720697420696e746f20746865206e656172657374535044206c696272617279203c6120687265663d22687474703a2f2f7777772e6d617468776f726b732e636f6d2f6d61746c616263656e7472616c2f66696c6565786368616e67652f34323838352d6e656172657374737064222072656c3d226e6f666f6c6c6f77223e284c696e6b29203c2f613e746f206d616b6520746865206d617472697820706f73697469766520646566696e697465202e20496e2074686973206361736520746865206d617472697820697320616c776179732073696e67756c61722e20416e6f74686572206d6574686f64204920747269656420776173206f66206d616e75616c6c792067656e65726174696e67206120706f73697469766520646566696e697465206d6174726978207573696e672041272a4120746563686e697175652e202841207761732074616b656e206173206120313630307831353030206d6174726978292e205468697320616c77617973206769766573206d65207468652064657465726d696e616e7420617320696e66696e6974652e20416e792069646561206f6e20686f7720492063616e20676574206120706f73697469766520646566696e697465206d6174726978207769746820612066696e6974652064657465726d696e616e743f3c2f703e0a, NULL, NULL, NULL, '2016-04-29', '2016-04-29'),
('["java","math","linear-algebra","equation"]', '0', 13, 0, 0, 1461867109, 1461867109, 36922414, 'http://stackoverflow.com/questions/36922414/getting-echelon-form-in-linear-equation-java', 'Getting echelon form in linear equation java', 0x3c703e6920676574207468697320636f646520776869636820736f6c7665206c696e656172206571756174696f6e2c206275742069206e656564207072696e74206f757420746865206d617472697820696e20656368656c6f6e20666f726d20746f6f2e20686f772063616e2069206765742069743f3c2f703e0a0a3c703e7468697320636f646520696d706c656d656e746573204a616d61207061636b61676520284d61747269782920616e64207072696e7473206f7574207468652076616c75657320666f72207468652072657370656374697665207661726961626c6573202878312c78322c78332e2e2e293c2f703e0a0a3c7072653e3c636f64653e696d706f7274206a6176612e7574696c2e2a3b0a7075626c696320636c61737320436c6173730a7b0a202020202f2f20494e5354414e4345205641524941424c45530a202020207072697661746520646f75626c655b5d5b5d206d3b202020202f2f204d4154524958204f4620434f2d454646494349454e54530a202020207072697661746520646f75626c655b5d20636f6e7374616e74733b202f2f20564543544f52204f4620434f4e5354414e54205445524d530a202020207072697661746520646f75626c655b5d20736f6c7574696f6e3b202f2f20534f4c5554494f4e205345540a202020207072697661746520696e74206e756d45713b2020202020202f2f204e554d424552204f46204551554154494f4e530a20202020737461746963205363616e6e65722073633d6e6577205363616e6e65722853797374656d2e696e293b0a0a202020207075626c696320436c61737328696e74206571756174696f6e73292020202f2f20434f4e5354525543544f520a202020207b0a20202020202020206e756d45713d6571756174696f6e733b0a20202020202020206d3d6e657720646f75626c655b6e756d45715d5b6e756d45715d3b0a2020202020202020636f6e7374616e74733d6e657720646f75626c655b6e756d45715d3b0a2020202020202020736f6c7574696f6e3d6e657720646f75626c655b6e756d45715d3b0a202020207d0a0a202020207075626c696320766f69642066696c6c4d617472697828290a202020207b0a2020202020202020666f7228696e7420693d303b69266c743b6e756d45713b692b2b297b0a20202020202020202020202053797374656d2e6f75742e7072696e746c6e2822456e7465722074686520636f2d656666696369656e7473206f6620756e6b6e6f776e7320616e6420636f6e7374616e74207465726d20666f72204571756174696f6e20222b28692b31292b22203a22293b0a202020202020202020202020666f7228696e74206a3d303b6a266c743b6e756d45713b6a2b2b297b0a2020202020202020202020202020202053797374656d2e6f75742e7072696e742822456e74657220436f2d656666696369656e7420222b286a2b31292b22203a2022293b0a202020202020202020202020202020206d5b695d5b6a5d3d73632e6e657874446f75626c6528293b0a2020202020202020202020207d0a20202020202020202020202053797374656d2e6f75742e7072696e742822456e74657220436f6e7374616e74205465726d203a2022293b0a202020202020202020202020636f6e7374616e74735b695d3d73632e6e657874446f75626c6528293b0a20202020202020207d0a202020207d0a0a202020207075626c696320766f6964207072696e74536f6c7574696f6e28290a202020207b0a202020202020202053797374656d2e6f75742e7072696e746c6e28225c6e536f6c7574696f6e20536574206973203a2022293b0a2020202020202020666f7228696e7420693d303b69266c743b6e756d45713b692b2b290a20202020202020202020202053797374656d2e6f75742e7072696e746c6e28286368617229282741272b69292b22203d20222b736f6c7574696f6e5b695d293b0a202020207d0a0a202020207075626c696320766f6964207072696e744d617472697828292020202f2f20464f5220444542554747494e4720505552504f53450a202020207b0a2020202020202020666f7228696e7420693d303b69266c743b6e756d45713b692b2b297b0a202020202020202020202020666f7228696e74206a3d303b6a266c743b6e756d45713b6a2b2b297b0a202020202020202020202020202020206966286d5b695d5b6a5d2667743b3d30290a202020202020202020202020202020202020202053797374656d2e6f75742e7072696e742822202b222b6d5b695d5b6a5d2b28286368617229282741272b6a29292b222022293b0a20202020202020202020202020202020656c7365206966286d5b695d5b6a5d266c743b30290a202020202020202020202020202020202020202053797374656d2e6f75742e7072696e74282220222b6d5b695d5b6a5d2b28286368617229282741272b6a29292b222022293b0a2020202020202020202020207d0a20202020202020202020202053797374656d2e6f75742e7072696e746c6e2822203d20222b636f6e7374616e74735b695d293b0a20202020202020207d0a202020207d0a0a202020207075626c696320766f69642073776170526f777328696e7420726f77312c696e7420726f7732290a202020207b0a2020202020202020646f75626c652074656d703b0a2020202020202020666f7228696e74206a3d303b6a266c743b6e756d45713b6a2b2b297b2020202f2f205357415050494e4720434f2d454646494349454e5420524f57530a20202020202020202020202074656d703d6d5b726f77315d5b6a5d3b0a2020202020202020202020206d5b726f77315d5b6a5d3d6d5b726f77325d5b6a5d3b0a2020202020202020202020206d5b726f77325d5b6a5d3d74656d703b0a20202020202020207d0a202020202020202074656d703d636f6e7374616e74735b726f77315d3b2020202f2f205357415050494e4720434f4e5354414e545320564543544f520a2020202020202020636f6e7374616e74735b726f77315d3d636f6e7374616e74735b726f77325d3b0a2020202020202020636f6e7374616e74735b726f77325d3d74656d703b0a202020207d0a0a202020207075626c696320766f696420656c696d696e61746528290a202020207b0a2020202020202020696e7420692c6a2c6b2c6c3b0a2020202020202020666f7228693d303b69266c743b6e756d45713b692b2b297b2020202f2f2069202d2667743b20524f57203b204d4154524958204f524445522044454352454153455320445552494e4720454c494d494e4154494f4e0a2020202020202020202020202f2f2046494e44204c41524745535420434f2d454646494349454e54534f46205448452043555252454e5420434f4c554d4e204d4f56494e4720524f572d574953450a202020202020202020202020646f75626c65206c6172676573743d4d6174682e616273286d5b695d5b695d293b0a202020202020202020202020696e7420696e6465783d693b0a202020202020202020202020666f72286a3d692b313b6a266c743b6e756d45713b6a2b2b297b0a202020202020202020202020202020206966284d6174682e616273286d5b6a5d5b695d292667743b6c617267657374297b0a20202020202020202020202020202020202020206c6172676573743d6d5b6a5d5b695d3b0a2020202020202020202020202020202020202020696e6465783d6a3b0a202020202020202020202020202020207d0a2020202020202020202020207d0a20202020202020202020202073776170526f777328692c696e646578293b20202f2f205357415050494e4720692d746820524f5720746f20696e6465782d746820524f570a202020202020202020202020666f72286b3d692b313b6b266c743b6e756d45713b6b2b2b297b0a20202020202020202020202020202020646f75626c6520666163746f723d6d5b6b5d5b695d2f6d5b695d5b695d3b0a202020202020202020202020202020202f2f2050524f43455353494e4720434f4c554d4e20574953450a20202020202020202020202020202020666f72286c3d693b6c266c743b6e756d45713b6c2b2b297b0a20202020202020202020202020202020202020206d5b6b5d5b6c5d2d3d666163746f722a6d5b695d5b6c5d3b0a202020202020202020202020202020207d0a20202020202020202020202020202020636f6e7374616e74735b6b5d2d3d666163746f722a636f6e7374616e74735b695d3b20202f2f2050524f43455353494e4720434f4e5354414e54530a2020202020202020202020207d0a20202020202020207d0a202020207d0a0a202020207075626c696320766f696420736f6c766528290a202020207b0a2020202020202020666f7228696e7420693d6e756d45712d313b692667743b3d303b692d2d297b0a202020202020202020202020736f6c7574696f6e5b695d3d636f6e7374616e74735b695d3b2020202f2f20434f50590a202020202020202020202020666f7228696e74206a3d6e756d45712d313b6a2667743b693b6a2d2d297b0a20202020202020202020202020202020736f6c7574696f6e5b695d2d3d6d5b695d5b6a5d2a736f6c7574696f6e5b6a5d3b0a2020202020202020202020207d0a202020202020202020202020736f6c7574696f6e5b695d2f3d6d5b695d5b695d3b0a20202020202020207d0a202020207d0a0a202020207075626c69632073746174696320766f6964206d61696e28537472696e6720617267735b5d290a202020207b0a202020202020202053797374656d2e6f75742e7072696e742822456e74657220746865204e756d626572206f66205465726d73203a2022293b0a2020202020202020436c617373206f626a3d6e657720436c6173732873632e6e657874496e742829293b0a20202020202020206f626a2e66696c6c4d617472697828293b0a202020202020202053797374656d2e6f75742e7072696e746c6e28225c66596f75204861766520456e74657265642054686520466f6c6c6f77696e67204571756174696f6e73203a22293b0a20202020202020206f626a2e7072696e744d617472697828293b0a20202020202020206f626a2e656c696d696e61746528293b0a20202020202020206f626a2e736f6c766528293b0a20202020202020206f626a2e7072696e74536f6c7574696f6e28293b0a202020207d0a7d0a3c2f636f64653e3c2f7072653e0a0a3c703e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e2e3c2f703e0a, NULL, NULL, NULL, '2016-04-29', '2016-04-29');
INSERT INTO `so_questions` (`tags`, `is_answered`, `view_count`, `answer_count`, `score`, `last_activity_date`, `creation_date`, `question_id`, `link`, `title`, `body`, `has_more`, `quota_max`, `quota_remaining`, `createdAt`, `updatedAt`) VALUES
('["python","c","multithreading","linear-algebra","hdf5"]', '1', 28, 1, 0, 1462049505, 1462046369, 36959589, 'http://stackoverflow.com/questions/36959589/efficient-matrix-vector-multiplication-multithreading-directly-in-python-vs-us', 'Efficient Matrix-Vector Multiplication: Multithreading directly in Python vs. using ctypes to bind a multithreaded C function', 0x3c703e49206861766520612073696d706c652070726f626c656d3a206d756c7469706c792061206d6174726978206279206120766563746f722e20486f77657665722c2074686520696d706c656d656e746174696f6e206f6620746865206d756c7469706c69636174696f6e20697320636f6d706c696361746564206265636175736520746865206d61747269782069732031382067622028333030305e3220627920353030292e203c2f703e0a0a3c703e536f6d6520696e666f3a3c2f703e0a0a3c756c3e0a3c6c693e546865206d61747269782069732073746f72656420696e204844463520666f726d61742e2049742773204d61746c6162206f75747075742e20497427732064656e736520736f206e6f20737061727369747920736176696e67732074686572652e3c2f6c693e0a3c6c693e49206861766520746f20646f2074686973206d6174726978206d756c7469706c69636174696f6e20726f7567686c7920323030302074696d6573206f7665722074686520636f75727365206f66206d7920616c676f726974686d20284d434d4320426179657369616e20496e76657273696f6e293c2f6c693e0a3c6c693e4d792070726f6772616d206973206120636f6d62696e6174696f6e206f6620507974686f6e20616e6420432c2077686572652074686520507974686f6e20636f64652068616e646c6573206d6f7374206f6620746865204d434d432070726f6365647572653a206b656570696e6720747261636b206f66207468652072616e646f6d2077616c6b2c2067656e65726174696e6720706572747572626174696f6e732c20636865636b696e67204d482043726974657269612c20736176696e672061636365707465642070726f706f73616c732c206d6f6e69746f72696e6720746865206275726e6f75742c206574632e20546865204320636f64652069732073696d706c7920636f6d70696c656420696e746f20612073657061726174652065786563757461626c6520616e642063616c6c6564207768656e2049206e65656420746f20736f6c76652074686520666f7277617264202861636f75737469632077617665292070726f626c656d2e20416c6c20636f6d6d756e69636174696f6e206265747765656e2074686520507974686f6e20616e64204320697320646f6e6520766961207468652066696c652073797374656d2e20416c6c207468697320697320746f20736179204920646f6e277420616c7265616479206861766520637479706520737475666620676f696e67206f6e2e203c2f6c693e0a3c6c693e54686520432070726f6772616d20697320616c726561647920706172616c6c656c697a6564207573696e67204d50492c20627574204920646f6e2774207468696e6b2074686174277320616e20617070726f70726961746520736f6c7574696f6e20666f722074686973204d56206d756c7469706c69636174696f6e2070726f626c656d2e203c2f6c693e0a3c6c693e4f75722070726f6772616d2069732072756e206d61696e6c79206f6e206c696e75782c20627574206f63636173696f6e616c6c79206f6e204f535820616e642057696e646f77732e2043726f73732d706c6174666f726d206361706162696c697469657320776974686f757420746f6f206d7563682068656164616368652069732061206d7573742e203c2f6c693e0a3c2f756c3e0a0a3c703e5269676874206e6f772049206861766520612073696e676c652d74687265616420696d706c656d656e746174696f6e2077686572652074686520707974686f6e20636f646520726561647320696e20746865206d61747269782061206665772074686f7573616e64206c696e657320617420612074696d6520616e6420706572666f726d7320746865206d756c7469706c69636174696f6e2e20486f77657665722c20746869732069732061207369676e69666963616e7420626f74746c656e65636b20666f72206d792070726f6772616d2073696e63652069742074616b657320736f206461726e206c6f6e672e20492764206c696b6520746f206d756c746974687265616420697420746f2073706565642069742075702061206269742e203c2f703e0a0a3c703e49276d20747279696e6720746f2067657420616e2069646561206f66207768657468657220697420776f756c64206265206661737465722028636f6d7075746174696f6e2d74696d652d776973652c206e6f7420696d706c656d656e746174696f6e2074696d652920666f7220707974686f6e20746f2068616e646c6520746865206d756c7469746872656164696e6720616e6420746f20636f6e74696e756520746f20757365206e756d7079206f7065726174696f6e7320746f20646f20746865206d756c7469706c69636174696f6e2c206f7220746f20636f646520616e204d56206d756c7469706c69636174696f6e2066756e6374696f6e2077697468206d756c7469746872656164696e6720696e204320616e642062696e642069742077697468206374797065732e3c2f703e0a0a3c703e492077696c6c206c696b656c7920646f20626f746820616e642074696d65207468656d2073696e63652073686176696e672074696d65206f6666206f6620616e2065787472656d656c79206c6f6e672072756e6e696e672070726f6772616d20697320696d706f7274616e742e20492077617320776f6e646572696e6720696620616e796f6e652068616420656e636f756e7465726564207468697320736974756174696f6e206265666f72652c2074686f7567682c20616e642068616420616e7920696e736967687420286f722070657268617073206f746865722073756767657374696f6e733f293c2f703e0a0a3c703e417320612073696465207175657374696f6e2c20492063616e206f6e6c792066696e6420616c676f726974686d696320696d70726f76656d656e747320666f72206e786e206d6174726963657320666f72206d2d76206d756c7469706c69636174696f6e2e20446f657320616e796f6e65206b6e6f77206f66206f6e6520746861742063616e2062652075736564206f6e20616e206d786e206d61747269783f203c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["python","matlab","linear-algebra","pagerank"]', '1', 17, 2, 1, 1462190000, 1462127856, 36970453, 'http://stackoverflow.com/questions/36970453/pagerank-python-implementation-algorithm', 'PageRank python implementation, algorithm', 0x3c703e49276d20747279696e6720746f2077726974652074686973203c6120687265663d22687474703a2f2f656e2e77696b6970656469612e6f72672f77696b692f5061676552616e6b222072656c3d226e6f666f6c6c6f77223e206d61746c616220696d706c656d656e746174696f6e3c2f613e20696e20507974686f6e2c20627574204920646f6e277420756e6465727374616e64206120666577206d6f6d656e74733a3c2f703e0a0a3c626c6f636b71756f74653e0a20203c703e6c6173745f76203d206f6e6573284e2c203129202a20696e663b3c2f703e0a3c2f626c6f636b71756f74653e0a0a3c703e446f207765206f627461696e2068657265206120766563746f722c20636f6e7461696e696e6720616c6c20696e66696e69746965733f0a496e207468697320636173652074686520636f6e646974696f6e20696e207768696c6520697320696e7374616e746c792066616c736520616e6420776520646f6e2774206f627461696e20616e7920697465726174696f6e733a3c2f703e0a0a3c626c6f636b71756f74653e0a20203c703e7768696c65286e6f726d2876202d206c6173745f762c203229203e20765f7175616472617469635f6572726f72293c2f703e0a3c2f626c6f636b71756f74653e0a0a3c703e5768617420646f204920756e6465727374616e642066616c73653f3c2f703e0a0a3c703e5468697320697320746865207761792c204920747269656420697420746f20646f3a3c2f703e0a0a3c7072653e3c636f64653e66726f6d206e756d707920696d706f7274202a0a646566207061676572616e6b284d2c642c765f7175616472617469635f6572726f72293a0a636f756e74203d20300a4e3d4d2e73686170655b315d0a763d72616e646f6d2e72616e64284e2c31290a763d762f6c696e616c672e6e6f726d2876290a61696e663d6172726179285b5b696e665d5d290a6c6173745f76203d20646f74286f6e657328284e2c3129292c61696e66290a52203d20642a4d202b202828312d64292f4e202a206f6e657328284e2c4e2929290a7768696c65206c696e616c672e6e6f726d28762d6c6173745f762c3229202667743b20765f7175616472617469635f6572726f723a0a202020206c6173745f76203d20760a2020202076203d20646f7428522c76290a20202020636f756e742b3d310a202020207072696e742027697465726174696f6e2023272c20636f756e740a72657475726e20760a3c2f636f64653e3c2f7072653e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["python","matrix","vector","linear-algebra","sympy"]', '1', 31, 2, 1, 1462210528, 1462143994, 36972991, 'http://stackoverflow.com/questions/36972991/transforming-a-set-of-symbolic-linear-equations-in-to-matrix-form', 'Transforming a set of symbolic linear equations in to matrix form', 0x3c703e4920776f756c64206c696b6520746f207472616e73666f726d206120736574206f662073796d626f6c6963206c696e656172206571756174696f6e7320696e20746f206120666f726d206c696b653a0a7b307d203d205b4d5d2a7b767d0a7768657265207b307d20697320766563746f72206f66207a65726f732c205b4d5d20697320746865206d6174726978206f66207661726961626c657320616e64207b767d2069732074686520766563746f72206f6620636f656666696369656e74732e3c2f703e0a0a3c703e4a75737420666f72207468652073616b65206f662070726573656e74696e6720796f75206d792070726f626c656d2c204920776f756c64206c696b6520696620616e796f6e6520636f756c642068656c70206d6520746f207772697465206d79206578616d706c6520696e20746865206465736972656420666f726d3a3c2f703e0a0a3c7072653e3c636f64653e66726f6d2073796d707920696d706f72742a0a696e69745f7072696e74696e6728290a0a615f302c20615f312c20615f322c207820203d2073796d626f6c732827615f302c20615f312c20615f322c207827290a0a615f30202b20615f312a78202b20615f32202a20782a2a320a3c2f636f64653e3c2f7072653e0a0a3c703e4e4f54453a204920757365204c6154655820666f726d2c20736f20696e206361736520796f7520686176656e277420676f74204c6154655820696e7374616c6c65642c20796f752073686f756c642072656d6f76652074686520202020203c7374726f6e673e696e69745f7072696e74696e6728293c2f7374726f6e673e2e3c2f703e0a0a3c703e536f2077686174204920776f756c64206c696b6520697320746f206d616b65206120666f726d206c696b653a3c2f703e0a0a3c7072653e3c636f64653e202020202020202020202020202020202020207b615f300a7b307d203d205b31207820785e325d202a202020615f310a2020202020202020202020202020202020202020615f327d0a3c2f636f64653e3c2f7072653e0a0a3c703e496e206d7920636173652074686572652077696c6c206265206120736574206f662073696d696c617220206c696e656172206571756174696f6e732c20627574204920776f756c64206c696b6520746f206c6561726e207468652069646561206f72207468652066756e6374696f6e73207468617420776f756c6420616c6c6f77206d6520746f207472616e73666f726d206120736574206f66206c696e656172206571756174696f6e7320696e20746f206d617472697820666f726d2e3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["matlab","matrix","graph","rotation","linear-algebra"]', '1', 15, 1, 0, 1462158889, 1462157727, 36974378, 'http://stackoverflow.com/questions/36974378/matlab-matrix-rotation-dimensions', 'Matlab Matrix Rotation, Dimensions', 0x3c7072653e3c636f64653e66756e6374696f6e2066203d20666c6f7765722866290a74203d2028303a322a70692f3130303a322a7069293b0a78203d2828312b636f7328352a7429292e2a28636f7328742929293b200a79203d202828287829292e2a2873696e28742929293b0a41203d205b782c795d3b0a47203d205b636f73283435292c2d73696e283435293b2073696e283435292c636f73283435295d3b0a6966202866203d3d2031290a706c6f7428782c792c272d6727290a656c73656966202866203d3d2032290a62203d207a65726f7328312c313031293b0a7a203d207a65726f7328312c313031293b0a666f722069203d20313a3130310a202020206228312c6929203d20323b0a202020207a28312c6929203d202d333b0a656e640a78203d20782b623b0a79203d20792b7a3b0a706c6f7428782c792c272d6727290a656c73656966202866203d3d2033290a2020202041203d2041272a473b0a20202020706c6f74284128312c3a292c4128322c3a292c272d27290a656c73650a646973702827696e7075742061206e756d6265722066726f6d20312d3427290a656e640a3c2f636f64653e3c2f7072653e0a0a3c703e287573696e67204d61746c616229204920616d20686176696e672074726f75626c65206d756c7469706c79696e672061206d617472697820746f20726f74617465206974277320696d616765206279203435206465677265657320636c6f636b776973652e2054686520626c6f636b206f6620636f64652073746172747320617420656c736569662028663d3d3329204920616d2067657474696e6720616e20696e6e6572206d61747269782064696d656e73696f6e206d757374206167726565206572726f722e20486f772063616e2049206d756c7469706c79204d617472697820415b782c795d206279204d617472697820473f3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["c++","osx","linear-algebra"]', '0', 4, 0, 0, 1462376337, 1462376037, 37032216, 'http://stackoverflow.com/questions/37032216/accelerate-framework-la-objects-t-class-object-without-copy', 'Accelerate framework la_objects_t class - object without copy', 0x3c703e49276d20747279696e6720746f20757365207468652066756e6374696f6e3c2f703e0a0a3c7072653e3c636f64653e6c615f6f626a6563745f74206c615f6d61747269785f66726f6d5f646f75626c655f6275666665725f6e6f636f707928646f75626c65202a6275666665722c0a20202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020206c615f636f756e745f74206d61747269785f726f77732c0a20202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020206c615f636f756e745f74206d61747269785f636f6c732c0a20202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020206c615f636f756e745f74206d61747269785f726f775f7374726964652c0a20202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020206c615f68696e745f74206d61747269785f68696e742c0a20202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020206c615f6465616c6c6f6361746f725f74206465616c6c6f6361746f722c0a20202020202020202020202020202020202020202020202020202020202020202020202020202020202020202020206c615f6174747269627574655f742061747472696275746573293b0a3c2f636f64653e3c2f7072653e0a0a3c703e6f722069747320766563746f722076617269616e742e2054686973206973206265636175736520492077616e7420746f20736f6c76652075736520726174686572206c61726765206c696e6561722073797374656d73207769746820616363656c657261746520616e642061766f6964206d616b696e6720636f70696573206f66206d7920766563746f72732f6d617472696365732e3c2f703e0a0a3c703e49207265616c6c792063616e277420776f726b206f757420686f7720746f2075736520746869732c2074686f7567682e20496e20706172746963756c61722c2077686174206973203c636f64653e6c615f6465616c6c6f6361746f725f743c2f636f64653e3f3f3c2f703e0a0a3c703e492068617665206e6f2070726f626c656d7320776974683c2f703e0a0a3c7072653e3c636f64653e615f6f626a6563745f74206c615f6d61747269785f66726f6d5f646f75626c655f62756666657228646f75626c65202a6275666665722c0a202020202020202020202020202020202020202020202020202020202020202020202020202020202020206c615f636f756e745f74206d61747269785f726f77732c0a202020202020202020202020202020202020202020202020202020202020202020202020202020202020206c615f636f756e745f74206d61747269785f636f6c732c0a202020202020202020202020202020202020202020202020202020202020202020202020202020202020206c615f636f756e745f74206d61747269785f726f775f7374726964652c0a202020202020202020202020202020202020202020202020202020202020202020202020202020202020206c615f68696e745f74206d61747269785f68696e742c0a202020202020202020202020202020202020202020202020202020202020202020202020202020202020206c615f6174747269627574655f742061747472696275746573293b0a3c2f636f64653e3c2f7072653e0a0a3c703e7768696368204920736f6c766564207468616e6b7320746f20405374657068616e2043616e6f6e277320616e7377657220746f203c6120687265663d22687474703a2f2f737461636b6f766572666c6f772e636f6d2f7175657374696f6e732f32393137363731352f6d61747269782d6d756c7469706c69636174696f6e2d616e642d696e76657273652d70726f626c656d732d776974682d616363656c65726174652d6672616d65776f726b3f72713d31223e74686973207175657374696f6e3c2f613e2e3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["data-structures","linear-algebra"]', '0', 35, 0, 0, 1462415457, 1462404756, 37039823, 'http://stackoverflow.com/questions/37039823/getting-both-rows-and-columns-from-a-matrix', 'Getting both Rows and Columns from a Matrix', 0x3c703e497320746865726520612077617920746f2067657420626f746820726f777320616e6420636f6c756d6e730a66726f6d2061206d6174726978202832442920617272617920696e204f2831292074696d653f3c2f703e0a0a3c703e4f6276696f75736c792c20746f20676574206f6e65206f7220746865206f746865722c20697473207472697669616c20746f206a7573742072657475726e207468652061727261792e0a497320746865726520616e20656173792077617920746f2067657420626f746820696e204f2831292074696d653f3c2f703e0a0a3c703e49276d207468696e6b696e67204920636f756c6420686176652061207365636f6e64206d61747269782c20627574207468617420776f756c6420646f75626c650a6d7920737061636520726571756972656d656e74732e3c2f703e0a0a3c703e656469743a3c2f703e0a0a3c703e4920636f756c64206275696c642022636f6c756d6e73222062757420776f756c642074616b65204f286e292074696d6520617373756d696e672061206e206279206e206d61747269782e20426563617573652c2062792064656661756c742c20746865206d617472697820697320616e206172726179206f66206172726179732e204d79207175657374696f6e2069732c206d6f726520636f6e63726574656c792c20697320746865726520612077617920746f206368616e6765206d79206d617472697820646174612073747275637475726520736f207468617420492063616e20646f20626f7468206f7065726174696f6e7320696e204f2831292074696d653f3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["linear-algebra","svd"]', '0', 6, 0, 0, 1462431427, 1462431427, 37044362, 'http://stackoverflow.com/questions/37044362/identifying-algorithm-used-for-singular-value-decomposition', 'Identifying algorithm used for Singular value decomposition', 0x3c703e506c656173652068656c70206d6520746f20756e6465727374616e6420776869636820616c676f726974686d20686173206265656e207573656420696e203c6120687265663d2268747470733a2f2f6769746875622e636f6d2f6c69787565636c616972652f506172616c6c656c2d535644222072656c3d226e6f666f6c6c6f77223e746869733c2f613e20696d706c656d656e746174696f6e206f66205356442e204173206d656e74696f6e656420696e2074686520726561646d652066696c65204a61636f626920526f746174696f6e732061726520757365642e2042757420492077616e7420746f206b6e6f77207468617420666f7220706172616c6c656c697a696e6720776869636820616c676f726974686d20686173206265656e20666f6c6c6f7765642e2054686520617070726f616368207365656d73207175697465206e6f76656c2062757420746865207573657220686173206e6f74206d656e74696f6e656420746865207265666572656e63652066726f6d2077686572652074686520617070726f61636820686173206265656e2074616b656e2e3c2f703e0a0a3c703e506c656173652070726f76696465206d65207265666572656e6365206f662070736575646f20636f6465206f6620626f74682073657175656e7469616c20616e6420706172616c6c656c20616c676f726974686d2e3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["sas","linear-algebra","sas-iml"]', '0', 25, 1, 3, 1462801859, 1462446148, 37048924, 'http://stackoverflow.com/questions/37048924/compute-the-logarithm-of-a-matrix-using-sas-iml', 'compute the logarithm of a matrix using SAS IML', 0x3c703e486f772063616e204920636f6d7075746520746865206c6f6761726974686d206f662061206d6174726978207573696e672053415320494d4c3f3c2f703e0a0a3c703e4920616d20747279696e6720746f2067657420736f6d657468696e672073696d696c617220746f207468652066756e6374696f6e616c697479206f6620746865204d61746c6162203c6120687265663d22687474703a2f2f7777772e6d617468776f726b732e636f6d2f68656c702f6d61746c61622f7265662f6c6f676d2e68746d6c222072656c3d226e6f666f6c6c6f77223e6c6f676d28292066756e6374696f6e3c2f613e2e3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["linear-algebra","linear","numerical","numerical-analysis","numerical-computing"]', '0', 20, 0, 0, 1462512449, 1462512449, 37064877, 'http://stackoverflow.com/questions/37064877/numerical-economic-computability-algorithm', 'Numerical Economic Computability Algorithm', 0x3c703e49206b6e6f77207468657365207479706573206f66207175657374696f6e732061726520646973636f757261676564206173206265696e67207375626a6563746976652062757420616674657220726563656976696e672061206e756d626572206f6620276c657373207468616e2068656c7066756c2720616e737765727320746f206d79206d6f72652073706563696669632076657273696f6e206f662074686973207175657374696f6e2c204920776f756c64206c696b6520746f2074727920616761696e2e204d792070726f626c656d20697320616e202765636f6e6f6d696320636f6d7075746162696c697479272070726f626c656d207468617420696e766f6c76657320736f6c76696e672061206d617373697665207370617273652073797374656d206f66206c696e656172206571756174696f6e73207573696e672061206e756d65726963616c2f69746572617469766520617070726f78696d6174696f6e20616c676f726974686d2e205370656369666963616c6c792c20616e20696e7075742d6f7574707574207461626c6520776869636820636f6d70757465732074686520616d6f756e74206f6620776f726b2f6c61626f722070757420696e746f206561636820696e646976696475616c20676f6f6420616e64207365727669636520696e207468652065636f6e6f6d792866756c6c7920646973616767726567617465642920696e207465726d73206f662074686520616d6f756e74206f6620686f757273206f66206c61626f722065616368206f6e652074616b657320746f2070726f647563652e2053696e6365206561636820636f6d6d6f64697479206f6e6c79206861732061206665772c206174206d6f73742068756e6472656473206f66206f7468657220636f6d6d6f64697469657320617320696e707574732c20746865206d6174726978206973206c696b656c7920746f206265207370617273652e20496e206120736d616c6c206d6f6465726e2065636f6e6f6d792c207468657265206973206c696b656c7920746f206265206d6f7265207468616e203130206d696c6c696f6e2b20696e646976696475616c20676f6f647320616e642073657276696365732c20666f722061206c6172676572206f6e65207468657265206973206c696b656c7920746f2062652068756e6472656473206f66206d696c6c696f6e732e204120626574746572206465736372697074696f6e3a3c2f703e0a0a3c626c6f636b71756f74653e0a20203c703e54686520696e707574e280936f7574707574207461626c6520666f7220616e2065636f6e6f6d7920697320696e207072616374696365206c696b656c7920746f206265206d6f73746c7920626c616e6b732e20496e207265616c69747920656163682070726f6475637420686173206f6e2061766572616765206f6e6c792061206665772074656e73206f72206174206d6f73742068756e6472656473206f6620696e7075747320746f206974732070726f64756374696f6e20726174686572207468616e2061206d696c6c696f6e2e2054686973206d616b6573206974206d6f72652065636f6e6f6d6963616c20746f20726570726573656e74207468652073797374656d20696e207465726d73206f66206120766563746f72206f66206c6973747320726174686572207468616e2061206d61747269782e20496e20636f6e73657175656e63652c207468657265206172652073686f72742d637574732077686963682063616e2062652074616b656e20746f20617272697665206174206120726573756c742e2057652063616e2075736520616e6f7468657220617070726f6163682c2074686174206f66207375636365737369766520617070726f78696d6174696f6e2e546865206964656120686572652069732074686174206173206120666972737420617070726f78696d6174696f6e2077652069676e6f726520616c6c20696e7075747320746f207468652070726f64756374696f6e2070726f636573732061706172742066726f6d206469726563746c7920657870656e646564206c61626f75722e205468697320676976657320757320612066697273742c20617070726f78696d61746520657374696d617465206f6620656163682070726f64756374e2809973206c61626f75722076616c75652e2049742077696c6c20626520616e20756e646572657374696d61746520626563617573652069742069676e6f72657320746865206e6f6e2d6c61626f757220696e7075747320746f207468652070726f64756374696f6e2070726f636573732e20546f20617272697665206174206f7572207365636f6e6420617070726f78696d6174696f6e2077652061646420696e20746865206e6f6e2d6c61626f757220696e707574732076616c756564206f6e20746865206261736973206f6620746865206c61626f75722076616c75657320636f6d707574656420696e207468652066697273742070686173652e20546869732077696c6c20676574207573206f6e65207374657020636c6f73657220746f207468652074727565206c61626f75722076616c7565732e205265706561746564206170706c69636174696f6e206f6620746869732070726f636573732077696c6c20676976652075732074686520616e7377657220746f20746865206465736972656420646567726565206f662061636375726163792e2049662061626f75742068616c66207468652076616c7565206f6620616e20617665726167652070726f6475637420697320646572697665642066726f6d20646972656374206c61626f757220696e70757473207468656e206561636820697465726174696f6e20726f756e64206f757220617070726f78696d6174696f6e2070726f636573732077696c6c20616464206f6e652062696e617279206469676974206f66207369676e69666963616e636520746f206f757220616e737765722e20416e20616e7377657220636f727265637420746f20666f7572207369676e69666963616e7420646563696d616c206469676974732028776869636820697320626574746572207468616e20746865206d61726b65742063616e20616368696576652920776f756c6420726571756972652061626f757420313520697465726174696f6e7320726f756e64206f757220617070726f78696d6174696f6e2070726f636573732e3c2f703e0a20200a20203c703e5468652074696d65206f7264657220636f6d706c6578697479206f66207468697320616c676f726974686d2069732070726f706f7274696f6e616c20746f20746865206e756d626572206f662070726f64756374732074696d6573207468652061766572616765206e756d626572206f6620696e70757473207065722070726f647563742c2074696d6573207468652064657369726564206163637572616379206f662074686520726573756c7420696e206469676974732e204f6e206f75722070726576696f757320617373756d7074696f6e73207468697320636f756c6420626520636f6d7075746564206f6e2061207375706572636f6d707574657220696e206120666577206d696e757465732c20726174686572207468616e207468652074686f7573616e6473206f6620796561727320726571756972656420666f7220476175737369616e20656c696d696e6174696f6e2838292e3c2f703e0a20200a20203c703e283829486f6467736f6e2028313938342c20702e2031373029207374617465732074686174207468652062657374206d6574686f6420666f7220736f6c76696e6720616e20696e707574e280936f7574707574207461626c6520696e766f6c766573206e5e322063616c63756c6174696f6e732e205768696c6520686520646f65736ee2809974206769766520616e79206578706c616e6174696f6e20666f72207468697320636c61696d2c20776520617373756d652074686174206865206d757374206265207265636f676e697a696e672074686520757365206f6620616e2069746572617469766520746563686e6971756520286f7220656c73652074686520636f6d706c657869747920776f756c64206265206e5e33292c20627574206865206661696c7320746f207265636f676e69736520746861742074686520746563686e6963616c20636f656666696369656e74206d617472697820776f756c64206265207370617273652e20412062657474657220757365206f662064617461207374727563747572657320726564756365732074686520636f6d706c6578697479207375627374616e7469616c6c792c206173206172677565642061626f76652e3c2f703e0a3c2f626c6f636b71756f74653e0a0a3c703e4d79207175657374696f6e7320776f756c642062653a3c2f703e0a0a3c703e2d49732074686973206576656e20706f737369626c653f0a2d49732074686572652061206265747465722c206d6f72652061636375726174652c206f72206d6f726520747261637461626c6520616c676f726974686d207468616e20746865206f6e65206465736372696265642061626f76653f0a2d57686174206973207468652062657374206c616e67756167652f6c69627261727920666f7220646f696e67207468697320736f7274206f66207468696e673f3c2f703e0a0a3c703e5468616e6b733c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["optimization","linear-algebra"]', '0', 4, 0, 0, 1462632787, 1462632787, 37089959, 'http://stackoverflow.com/questions/37089959/kaczmarz-method-for-positive-solutions', 'Kaczmarz method for positive solutions', 0x3c703e492068617665206120636f6e73697374656e7420756e64657264657465726d696e65642073797374656d20286e6f2e206f66207661726961626c6573203e3e206e6f2e6f66206571756174696f6e7329206f66206c696e656172206571756174696f6e732e2049206e65656420746f20736f6c766520746869732073797374656d206f66206571756174696f6e7320226974657261746976656c792220746f206f627461696e20616e79206f6e6520736f6c7574696f6e2073756368207468617420616c6c20746865207661726961626c657320696e2074686520736f6c7574696f6e2061726520706f7369746976652e2049206b6e6f77206f6620616e20697465726174697665206d6574686f642063616c6c6564204b61637a6d61727a206d6574686f642062757420746869732063616e20726573756c7420696e206e6567617469766520736f6c7574696f6e7320616c736f2e20497320746865726520612077617920746f206669782074686973207375636820746861742074686520636f76657267656e6365206973207374696c6c2067756172616e746565643f3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["linear-algebra","tensorflow"]', '1', 14, 1, 0, 1462738600, 1462737947, 37104287, 'http://stackoverflow.com/questions/37104287/index-of-a-maximum-element-in-tensorflow-tensor', 'Index of a maximum element in TensorFlow tensor', 0x3c703e486f772063616e20492067657420696e646578206f662061206d6178696d756d20656c656d656e74206f6620612074656e736f7220616c6f6e6720612073656c6563746564206178697320696e2054656e736f72466c6f773f3c2f703e0a, NULL, NULL, NULL, '2016-05-09', '2016-05-09'),
('["c#","matrix","linear-algebra"]', '0', 9, 0, 0, 1462830309, 1462830309, 37125981, 'http://stackoverflow.com/questions/37125981/solve-0-1-matrices-over-f2', 'Solve 0-1 Matrices Over F2', , NULL, NULL, NULL, '2016-05-09', '2016-05-09');

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;